/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.vr.business.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.fds.vr.business.model.VRRegistration;
import com.fds.vr.business.model.VRRegistrationModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VRRegistration service. Represents a row in the &quot;opencps_registration&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VRRegistrationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VRRegistrationImpl}.
 * </p>
 *
 * @author LamTV
 * @see VRRegistrationImpl
 * @see VRRegistration
 * @see VRRegistrationModel
 * @generated
 */
@ProviderType
public class VRRegistrationModelImpl extends BaseModelImpl<VRRegistration>
	implements VRRegistrationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vr registration model instance should use the {@link VRRegistration} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_registration";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "registrationId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "applicantName", Types.VARCHAR },
			{ "applicantIdType", Types.VARCHAR },
			{ "applicantIdNo", Types.VARCHAR },
			{ "applicantIdDate", Types.TIMESTAMP },
			{ "address", Types.VARCHAR },
			{ "cityCode", Types.VARCHAR },
			{ "cityName", Types.VARCHAR },
			{ "districtCode", Types.VARCHAR },
			{ "districtName", Types.VARCHAR },
			{ "wardCode", Types.VARCHAR },
			{ "wardName", Types.VARCHAR },
			{ "contactName", Types.VARCHAR },
			{ "contactTelNo", Types.VARCHAR },
			{ "contactEmail", Types.VARCHAR },
			{ "govAgencyCode", Types.VARCHAR },
			{ "govAgencyName", Types.VARCHAR },
			{ "registrationState", Types.INTEGER },
			{ "registrationClass", Types.VARCHAR },
			{ "submitting", Types.BOOLEAN },
			{ "representativeEnterprise", Types.VARCHAR },
			{ "remarks", Types.VARCHAR },
			{ "markasdeleted", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("registrationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("applicantName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantIdType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantIdNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantIdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cityCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cityName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("districtCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("districtName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("wardCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("wardName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactTelNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("registrationState", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("registrationClass", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("submitting", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("representativeEnterprise", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("remarks", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("markasdeleted", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_registration (uuid_ VARCHAR(75) null,registrationId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,applicantName VARCHAR(75) null,applicantIdType VARCHAR(75) null,applicantIdNo VARCHAR(75) null,applicantIdDate DATE null,address VARCHAR(75) null,cityCode VARCHAR(75) null,cityName VARCHAR(75) null,districtCode VARCHAR(75) null,districtName VARCHAR(75) null,wardCode VARCHAR(75) null,wardName VARCHAR(75) null,contactName VARCHAR(75) null,contactTelNo VARCHAR(75) null,contactEmail VARCHAR(75) null,govAgencyCode VARCHAR(75) null,govAgencyName VARCHAR(75) null,registrationState INTEGER,registrationClass VARCHAR(75) null,submitting BOOLEAN,representativeEnterprise VARCHAR(75) null,remarks VARCHAR(75) null,markasdeleted INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_registration";
	public static final String ORDER_BY_JPQL = " ORDER BY vrRegistration.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_registration.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fds.vr.business.model.VRRegistration"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fds.vr.business.model.VRRegistration"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.fds.vr.business.model.VRRegistration"),
			true);
	public static final long APPLICANTIDNO_COLUMN_BITMASK = 1L;
	public static final long COMPANYID_COLUMN_BITMASK = 2L;
	public static final long GOVAGENCYCODE_COLUMN_BITMASK = 4L;
	public static final long GROUPID_COLUMN_BITMASK = 8L;
	public static final long MARKASDELETED_COLUMN_BITMASK = 16L;
	public static final long REGISTRATIONID_COLUMN_BITMASK = 32L;
	public static final long REGISTRATIONSTATE_COLUMN_BITMASK = 64L;
	public static final long SUBMITTING_COLUMN_BITMASK = 128L;
	public static final long USERID_COLUMN_BITMASK = 256L;
	public static final long UUID_COLUMN_BITMASK = 512L;
	public static final long CREATEDATE_COLUMN_BITMASK = 1024L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.fds.vr.service.util.ServiceProps.get(
				"lock.expiration.time.com.fds.vr.business.model.VRRegistration"));

	public VRRegistrationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _registrationId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRegistrationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _registrationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VRRegistration.class;
	}

	@Override
	public String getModelClassName() {
		return VRRegistration.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("registrationId", getRegistrationId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("applicantName", getApplicantName());
		attributes.put("applicantIdType", getApplicantIdType());
		attributes.put("applicantIdNo", getApplicantIdNo());
		attributes.put("applicantIdDate", getApplicantIdDate());
		attributes.put("address", getAddress());
		attributes.put("cityCode", getCityCode());
		attributes.put("cityName", getCityName());
		attributes.put("districtCode", getDistrictCode());
		attributes.put("districtName", getDistrictName());
		attributes.put("wardCode", getWardCode());
		attributes.put("wardName", getWardName());
		attributes.put("contactName", getContactName());
		attributes.put("contactTelNo", getContactTelNo());
		attributes.put("contactEmail", getContactEmail());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("govAgencyName", getGovAgencyName());
		attributes.put("registrationState", getRegistrationState());
		attributes.put("registrationClass", getRegistrationClass());
		attributes.put("submitting", getSubmitting());
		attributes.put("representativeEnterprise", getRepresentativeEnterprise());
		attributes.put("remarks", getRemarks());
		attributes.put("markasdeleted", getMarkasdeleted());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long registrationId = (Long)attributes.get("registrationId");

		if (registrationId != null) {
			setRegistrationId(registrationId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String applicantName = (String)attributes.get("applicantName");

		if (applicantName != null) {
			setApplicantName(applicantName);
		}

		String applicantIdType = (String)attributes.get("applicantIdType");

		if (applicantIdType != null) {
			setApplicantIdType(applicantIdType);
		}

		String applicantIdNo = (String)attributes.get("applicantIdNo");

		if (applicantIdNo != null) {
			setApplicantIdNo(applicantIdNo);
		}

		Date applicantIdDate = (Date)attributes.get("applicantIdDate");

		if (applicantIdDate != null) {
			setApplicantIdDate(applicantIdDate);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String cityCode = (String)attributes.get("cityCode");

		if (cityCode != null) {
			setCityCode(cityCode);
		}

		String cityName = (String)attributes.get("cityName");

		if (cityName != null) {
			setCityName(cityName);
		}

		String districtCode = (String)attributes.get("districtCode");

		if (districtCode != null) {
			setDistrictCode(districtCode);
		}

		String districtName = (String)attributes.get("districtName");

		if (districtName != null) {
			setDistrictName(districtName);
		}

		String wardCode = (String)attributes.get("wardCode");

		if (wardCode != null) {
			setWardCode(wardCode);
		}

		String wardName = (String)attributes.get("wardName");

		if (wardName != null) {
			setWardName(wardName);
		}

		String contactName = (String)attributes.get("contactName");

		if (contactName != null) {
			setContactName(contactName);
		}

		String contactTelNo = (String)attributes.get("contactTelNo");

		if (contactTelNo != null) {
			setContactTelNo(contactTelNo);
		}

		String contactEmail = (String)attributes.get("contactEmail");

		if (contactEmail != null) {
			setContactEmail(contactEmail);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		String govAgencyName = (String)attributes.get("govAgencyName");

		if (govAgencyName != null) {
			setGovAgencyName(govAgencyName);
		}

		Integer registrationState = (Integer)attributes.get("registrationState");

		if (registrationState != null) {
			setRegistrationState(registrationState);
		}

		String registrationClass = (String)attributes.get("registrationClass");

		if (registrationClass != null) {
			setRegistrationClass(registrationClass);
		}

		Boolean submitting = (Boolean)attributes.get("submitting");

		if (submitting != null) {
			setSubmitting(submitting);
		}

		String representativeEnterprise = (String)attributes.get(
				"representativeEnterprise");

		if (representativeEnterprise != null) {
			setRepresentativeEnterprise(representativeEnterprise);
		}

		String remarks = (String)attributes.get("remarks");

		if (remarks != null) {
			setRemarks(remarks);
		}

		Integer markasdeleted = (Integer)attributes.get("markasdeleted");

		if (markasdeleted != null) {
			setMarkasdeleted(markasdeleted);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getRegistrationId() {
		return _registrationId;
	}

	@Override
	public void setRegistrationId(long registrationId) {
		_columnBitmask |= REGISTRATIONID_COLUMN_BITMASK;

		if (!_setOriginalRegistrationId) {
			_setOriginalRegistrationId = true;

			_originalRegistrationId = _registrationId;
		}

		_registrationId = registrationId;
	}

	public long getOriginalRegistrationId() {
		return _originalRegistrationId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getApplicantName() {
		if (_applicantName == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantName;
		}
	}

	@Override
	public void setApplicantName(String applicantName) {
		_applicantName = applicantName;
	}

	@Override
	public String getApplicantIdType() {
		if (_applicantIdType == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantIdType;
		}
	}

	@Override
	public void setApplicantIdType(String applicantIdType) {
		_applicantIdType = applicantIdType;
	}

	@Override
	public String getApplicantIdNo() {
		if (_applicantIdNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantIdNo;
		}
	}

	@Override
	public void setApplicantIdNo(String applicantIdNo) {
		_columnBitmask |= APPLICANTIDNO_COLUMN_BITMASK;

		if (_originalApplicantIdNo == null) {
			_originalApplicantIdNo = _applicantIdNo;
		}

		_applicantIdNo = applicantIdNo;
	}

	public String getOriginalApplicantIdNo() {
		return GetterUtil.getString(_originalApplicantIdNo);
	}

	@Override
	public Date getApplicantIdDate() {
		return _applicantIdDate;
	}

	@Override
	public void setApplicantIdDate(Date applicantIdDate) {
		_applicantIdDate = applicantIdDate;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getCityCode() {
		if (_cityCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityCode;
		}
	}

	@Override
	public void setCityCode(String cityCode) {
		_cityCode = cityCode;
	}

	@Override
	public String getCityName() {
		if (_cityName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityName;
		}
	}

	@Override
	public void setCityName(String cityName) {
		_cityName = cityName;
	}

	@Override
	public String getDistrictCode() {
		if (_districtCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtCode;
		}
	}

	@Override
	public void setDistrictCode(String districtCode) {
		_districtCode = districtCode;
	}

	@Override
	public String getDistrictName() {
		if (_districtName == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtName;
		}
	}

	@Override
	public void setDistrictName(String districtName) {
		_districtName = districtName;
	}

	@Override
	public String getWardCode() {
		if (_wardCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardCode;
		}
	}

	@Override
	public void setWardCode(String wardCode) {
		_wardCode = wardCode;
	}

	@Override
	public String getWardName() {
		if (_wardName == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardName;
		}
	}

	@Override
	public void setWardName(String wardName) {
		_wardName = wardName;
	}

	@Override
	public String getContactName() {
		if (_contactName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactName;
		}
	}

	@Override
	public void setContactName(String contactName) {
		_contactName = contactName;
	}

	@Override
	public String getContactTelNo() {
		if (_contactTelNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactTelNo;
		}
	}

	@Override
	public void setContactTelNo(String contactTelNo) {
		_contactTelNo = contactTelNo;
	}

	@Override
	public String getContactEmail() {
		if (_contactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactEmail;
		}
	}

	@Override
	public void setContactEmail(String contactEmail) {
		_contactEmail = contactEmail;
	}

	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_columnBitmask |= GOVAGENCYCODE_COLUMN_BITMASK;

		if (_originalGovAgencyCode == null) {
			_originalGovAgencyCode = _govAgencyCode;
		}

		_govAgencyCode = govAgencyCode;
	}

	public String getOriginalGovAgencyCode() {
		return GetterUtil.getString(_originalGovAgencyCode);
	}

	@Override
	public String getGovAgencyName() {
		if (_govAgencyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyName;
		}
	}

	@Override
	public void setGovAgencyName(String govAgencyName) {
		_govAgencyName = govAgencyName;
	}

	@Override
	public int getRegistrationState() {
		return _registrationState;
	}

	@Override
	public void setRegistrationState(int registrationState) {
		_columnBitmask |= REGISTRATIONSTATE_COLUMN_BITMASK;

		if (!_setOriginalRegistrationState) {
			_setOriginalRegistrationState = true;

			_originalRegistrationState = _registrationState;
		}

		_registrationState = registrationState;
	}

	public int getOriginalRegistrationState() {
		return _originalRegistrationState;
	}

	@Override
	public String getRegistrationClass() {
		if (_registrationClass == null) {
			return StringPool.BLANK;
		}
		else {
			return _registrationClass;
		}
	}

	@Override
	public void setRegistrationClass(String registrationClass) {
		_registrationClass = registrationClass;
	}

	@Override
	public boolean getSubmitting() {
		return _submitting;
	}

	@Override
	public boolean isSubmitting() {
		return _submitting;
	}

	@Override
	public void setSubmitting(boolean submitting) {
		_columnBitmask |= SUBMITTING_COLUMN_BITMASK;

		if (!_setOriginalSubmitting) {
			_setOriginalSubmitting = true;

			_originalSubmitting = _submitting;
		}

		_submitting = submitting;
	}

	public boolean getOriginalSubmitting() {
		return _originalSubmitting;
	}

	@Override
	public String getRepresentativeEnterprise() {
		if (_representativeEnterprise == null) {
			return StringPool.BLANK;
		}
		else {
			return _representativeEnterprise;
		}
	}

	@Override
	public void setRepresentativeEnterprise(String representativeEnterprise) {
		_representativeEnterprise = representativeEnterprise;
	}

	@Override
	public String getRemarks() {
		if (_remarks == null) {
			return StringPool.BLANK;
		}
		else {
			return _remarks;
		}
	}

	@Override
	public void setRemarks(String remarks) {
		_remarks = remarks;
	}

	@Override
	public int getMarkasdeleted() {
		return _markasdeleted;
	}

	@Override
	public void setMarkasdeleted(int markasdeleted) {
		_columnBitmask |= MARKASDELETED_COLUMN_BITMASK;

		if (!_setOriginalMarkasdeleted) {
			_setOriginalMarkasdeleted = true;

			_originalMarkasdeleted = _markasdeleted;
		}

		_markasdeleted = markasdeleted;
	}

	public int getOriginalMarkasdeleted() {
		return _originalMarkasdeleted;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				VRRegistration.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			VRRegistration.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VRRegistration toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VRRegistration)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VRRegistrationImpl vrRegistrationImpl = new VRRegistrationImpl();

		vrRegistrationImpl.setUuid(getUuid());
		vrRegistrationImpl.setRegistrationId(getRegistrationId());
		vrRegistrationImpl.setCompanyId(getCompanyId());
		vrRegistrationImpl.setGroupId(getGroupId());
		vrRegistrationImpl.setUserId(getUserId());
		vrRegistrationImpl.setCreateDate(getCreateDate());
		vrRegistrationImpl.setModifiedDate(getModifiedDate());
		vrRegistrationImpl.setApplicantName(getApplicantName());
		vrRegistrationImpl.setApplicantIdType(getApplicantIdType());
		vrRegistrationImpl.setApplicantIdNo(getApplicantIdNo());
		vrRegistrationImpl.setApplicantIdDate(getApplicantIdDate());
		vrRegistrationImpl.setAddress(getAddress());
		vrRegistrationImpl.setCityCode(getCityCode());
		vrRegistrationImpl.setCityName(getCityName());
		vrRegistrationImpl.setDistrictCode(getDistrictCode());
		vrRegistrationImpl.setDistrictName(getDistrictName());
		vrRegistrationImpl.setWardCode(getWardCode());
		vrRegistrationImpl.setWardName(getWardName());
		vrRegistrationImpl.setContactName(getContactName());
		vrRegistrationImpl.setContactTelNo(getContactTelNo());
		vrRegistrationImpl.setContactEmail(getContactEmail());
		vrRegistrationImpl.setGovAgencyCode(getGovAgencyCode());
		vrRegistrationImpl.setGovAgencyName(getGovAgencyName());
		vrRegistrationImpl.setRegistrationState(getRegistrationState());
		vrRegistrationImpl.setRegistrationClass(getRegistrationClass());
		vrRegistrationImpl.setSubmitting(getSubmitting());
		vrRegistrationImpl.setRepresentativeEnterprise(getRepresentativeEnterprise());
		vrRegistrationImpl.setRemarks(getRemarks());
		vrRegistrationImpl.setMarkasdeleted(getMarkasdeleted());

		vrRegistrationImpl.resetOriginalValues();

		return vrRegistrationImpl;
	}

	@Override
	public int compareTo(VRRegistration vrRegistration) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				vrRegistration.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VRRegistration)) {
			return false;
		}

		VRRegistration vrRegistration = (VRRegistration)obj;

		long primaryKey = vrRegistration.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VRRegistrationModelImpl vrRegistrationModelImpl = this;

		vrRegistrationModelImpl._originalUuid = vrRegistrationModelImpl._uuid;

		vrRegistrationModelImpl._originalRegistrationId = vrRegistrationModelImpl._registrationId;

		vrRegistrationModelImpl._setOriginalRegistrationId = false;

		vrRegistrationModelImpl._originalCompanyId = vrRegistrationModelImpl._companyId;

		vrRegistrationModelImpl._setOriginalCompanyId = false;

		vrRegistrationModelImpl._originalGroupId = vrRegistrationModelImpl._groupId;

		vrRegistrationModelImpl._setOriginalGroupId = false;

		vrRegistrationModelImpl._originalUserId = vrRegistrationModelImpl._userId;

		vrRegistrationModelImpl._setOriginalUserId = false;

		vrRegistrationModelImpl._setModifiedDate = false;

		vrRegistrationModelImpl._originalApplicantIdNo = vrRegistrationModelImpl._applicantIdNo;

		vrRegistrationModelImpl._originalGovAgencyCode = vrRegistrationModelImpl._govAgencyCode;

		vrRegistrationModelImpl._originalRegistrationState = vrRegistrationModelImpl._registrationState;

		vrRegistrationModelImpl._setOriginalRegistrationState = false;

		vrRegistrationModelImpl._originalSubmitting = vrRegistrationModelImpl._submitting;

		vrRegistrationModelImpl._setOriginalSubmitting = false;

		vrRegistrationModelImpl._originalMarkasdeleted = vrRegistrationModelImpl._markasdeleted;

		vrRegistrationModelImpl._setOriginalMarkasdeleted = false;

		vrRegistrationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VRRegistration> toCacheModel() {
		VRRegistrationCacheModel vrRegistrationCacheModel = new VRRegistrationCacheModel();

		vrRegistrationCacheModel.uuid = getUuid();

		String uuid = vrRegistrationCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			vrRegistrationCacheModel.uuid = null;
		}

		vrRegistrationCacheModel.registrationId = getRegistrationId();

		vrRegistrationCacheModel.companyId = getCompanyId();

		vrRegistrationCacheModel.groupId = getGroupId();

		vrRegistrationCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			vrRegistrationCacheModel.createDate = createDate.getTime();
		}
		else {
			vrRegistrationCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vrRegistrationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vrRegistrationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		vrRegistrationCacheModel.applicantName = getApplicantName();

		String applicantName = vrRegistrationCacheModel.applicantName;

		if ((applicantName != null) && (applicantName.length() == 0)) {
			vrRegistrationCacheModel.applicantName = null;
		}

		vrRegistrationCacheModel.applicantIdType = getApplicantIdType();

		String applicantIdType = vrRegistrationCacheModel.applicantIdType;

		if ((applicantIdType != null) && (applicantIdType.length() == 0)) {
			vrRegistrationCacheModel.applicantIdType = null;
		}

		vrRegistrationCacheModel.applicantIdNo = getApplicantIdNo();

		String applicantIdNo = vrRegistrationCacheModel.applicantIdNo;

		if ((applicantIdNo != null) && (applicantIdNo.length() == 0)) {
			vrRegistrationCacheModel.applicantIdNo = null;
		}

		Date applicantIdDate = getApplicantIdDate();

		if (applicantIdDate != null) {
			vrRegistrationCacheModel.applicantIdDate = applicantIdDate.getTime();
		}
		else {
			vrRegistrationCacheModel.applicantIdDate = Long.MIN_VALUE;
		}

		vrRegistrationCacheModel.address = getAddress();

		String address = vrRegistrationCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			vrRegistrationCacheModel.address = null;
		}

		vrRegistrationCacheModel.cityCode = getCityCode();

		String cityCode = vrRegistrationCacheModel.cityCode;

		if ((cityCode != null) && (cityCode.length() == 0)) {
			vrRegistrationCacheModel.cityCode = null;
		}

		vrRegistrationCacheModel.cityName = getCityName();

		String cityName = vrRegistrationCacheModel.cityName;

		if ((cityName != null) && (cityName.length() == 0)) {
			vrRegistrationCacheModel.cityName = null;
		}

		vrRegistrationCacheModel.districtCode = getDistrictCode();

		String districtCode = vrRegistrationCacheModel.districtCode;

		if ((districtCode != null) && (districtCode.length() == 0)) {
			vrRegistrationCacheModel.districtCode = null;
		}

		vrRegistrationCacheModel.districtName = getDistrictName();

		String districtName = vrRegistrationCacheModel.districtName;

		if ((districtName != null) && (districtName.length() == 0)) {
			vrRegistrationCacheModel.districtName = null;
		}

		vrRegistrationCacheModel.wardCode = getWardCode();

		String wardCode = vrRegistrationCacheModel.wardCode;

		if ((wardCode != null) && (wardCode.length() == 0)) {
			vrRegistrationCacheModel.wardCode = null;
		}

		vrRegistrationCacheModel.wardName = getWardName();

		String wardName = vrRegistrationCacheModel.wardName;

		if ((wardName != null) && (wardName.length() == 0)) {
			vrRegistrationCacheModel.wardName = null;
		}

		vrRegistrationCacheModel.contactName = getContactName();

		String contactName = vrRegistrationCacheModel.contactName;

		if ((contactName != null) && (contactName.length() == 0)) {
			vrRegistrationCacheModel.contactName = null;
		}

		vrRegistrationCacheModel.contactTelNo = getContactTelNo();

		String contactTelNo = vrRegistrationCacheModel.contactTelNo;

		if ((contactTelNo != null) && (contactTelNo.length() == 0)) {
			vrRegistrationCacheModel.contactTelNo = null;
		}

		vrRegistrationCacheModel.contactEmail = getContactEmail();

		String contactEmail = vrRegistrationCacheModel.contactEmail;

		if ((contactEmail != null) && (contactEmail.length() == 0)) {
			vrRegistrationCacheModel.contactEmail = null;
		}

		vrRegistrationCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = vrRegistrationCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			vrRegistrationCacheModel.govAgencyCode = null;
		}

		vrRegistrationCacheModel.govAgencyName = getGovAgencyName();

		String govAgencyName = vrRegistrationCacheModel.govAgencyName;

		if ((govAgencyName != null) && (govAgencyName.length() == 0)) {
			vrRegistrationCacheModel.govAgencyName = null;
		}

		vrRegistrationCacheModel.registrationState = getRegistrationState();

		vrRegistrationCacheModel.registrationClass = getRegistrationClass();

		String registrationClass = vrRegistrationCacheModel.registrationClass;

		if ((registrationClass != null) && (registrationClass.length() == 0)) {
			vrRegistrationCacheModel.registrationClass = null;
		}

		vrRegistrationCacheModel.submitting = getSubmitting();

		vrRegistrationCacheModel.representativeEnterprise = getRepresentativeEnterprise();

		String representativeEnterprise = vrRegistrationCacheModel.representativeEnterprise;

		if ((representativeEnterprise != null) &&
				(representativeEnterprise.length() == 0)) {
			vrRegistrationCacheModel.representativeEnterprise = null;
		}

		vrRegistrationCacheModel.remarks = getRemarks();

		String remarks = vrRegistrationCacheModel.remarks;

		if ((remarks != null) && (remarks.length() == 0)) {
			vrRegistrationCacheModel.remarks = null;
		}

		vrRegistrationCacheModel.markasdeleted = getMarkasdeleted();

		return vrRegistrationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(59);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", registrationId=");
		sb.append(getRegistrationId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", applicantName=");
		sb.append(getApplicantName());
		sb.append(", applicantIdType=");
		sb.append(getApplicantIdType());
		sb.append(", applicantIdNo=");
		sb.append(getApplicantIdNo());
		sb.append(", applicantIdDate=");
		sb.append(getApplicantIdDate());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", cityCode=");
		sb.append(getCityCode());
		sb.append(", cityName=");
		sb.append(getCityName());
		sb.append(", districtCode=");
		sb.append(getDistrictCode());
		sb.append(", districtName=");
		sb.append(getDistrictName());
		sb.append(", wardCode=");
		sb.append(getWardCode());
		sb.append(", wardName=");
		sb.append(getWardName());
		sb.append(", contactName=");
		sb.append(getContactName());
		sb.append(", contactTelNo=");
		sb.append(getContactTelNo());
		sb.append(", contactEmail=");
		sb.append(getContactEmail());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", govAgencyName=");
		sb.append(getGovAgencyName());
		sb.append(", registrationState=");
		sb.append(getRegistrationState());
		sb.append(", registrationClass=");
		sb.append(getRegistrationClass());
		sb.append(", submitting=");
		sb.append(getSubmitting());
		sb.append(", representativeEnterprise=");
		sb.append(getRepresentativeEnterprise());
		sb.append(", remarks=");
		sb.append(getRemarks());
		sb.append(", markasdeleted=");
		sb.append(getMarkasdeleted());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(91);

		sb.append("<model><model-name>");
		sb.append("com.fds.vr.business.model.VRRegistration");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationId</column-name><column-value><![CDATA[");
		sb.append(getRegistrationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantName</column-name><column-value><![CDATA[");
		sb.append(getApplicantName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantIdType</column-name><column-value><![CDATA[");
		sb.append(getApplicantIdType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantIdNo</column-name><column-value><![CDATA[");
		sb.append(getApplicantIdNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantIdDate</column-name><column-value><![CDATA[");
		sb.append(getApplicantIdDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityCode</column-name><column-value><![CDATA[");
		sb.append(getCityCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityName</column-name><column-value><![CDATA[");
		sb.append(getCityName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtCode</column-name><column-value><![CDATA[");
		sb.append(getDistrictCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtName</column-name><column-value><![CDATA[");
		sb.append(getDistrictName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardCode</column-name><column-value><![CDATA[");
		sb.append(getWardCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardName</column-name><column-value><![CDATA[");
		sb.append(getWardName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactName</column-name><column-value><![CDATA[");
		sb.append(getContactName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactTelNo</column-name><column-value><![CDATA[");
		sb.append(getContactTelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactEmail</column-name><column-value><![CDATA[");
		sb.append(getContactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyName</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationState</column-name><column-value><![CDATA[");
		sb.append(getRegistrationState());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationClass</column-name><column-value><![CDATA[");
		sb.append(getRegistrationClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>submitting</column-name><column-value><![CDATA[");
		sb.append(getSubmitting());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>representativeEnterprise</column-name><column-value><![CDATA[");
		sb.append(getRepresentativeEnterprise());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>remarks</column-name><column-value><![CDATA[");
		sb.append(getRemarks());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>markasdeleted</column-name><column-value><![CDATA[");
		sb.append(getMarkasdeleted());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VRRegistration.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VRRegistration.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _registrationId;
	private long _originalRegistrationId;
	private boolean _setOriginalRegistrationId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _applicantName;
	private String _applicantIdType;
	private String _applicantIdNo;
	private String _originalApplicantIdNo;
	private Date _applicantIdDate;
	private String _address;
	private String _cityCode;
	private String _cityName;
	private String _districtCode;
	private String _districtName;
	private String _wardCode;
	private String _wardName;
	private String _contactName;
	private String _contactTelNo;
	private String _contactEmail;
	private String _govAgencyCode;
	private String _originalGovAgencyCode;
	private String _govAgencyName;
	private int _registrationState;
	private int _originalRegistrationState;
	private boolean _setOriginalRegistrationState;
	private String _registrationClass;
	private boolean _submitting;
	private boolean _originalSubmitting;
	private boolean _setOriginalSubmitting;
	private String _representativeEnterprise;
	private String _remarks;
	private int _markasdeleted;
	private int _originalMarkasdeleted;
	private boolean _setOriginalMarkasdeleted;
	private long _columnBitmask;
	private VRRegistration _escapedModel;
}