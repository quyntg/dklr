/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.vr.business.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.fds.vr.business.model.VRRPDossierStatistics;
import com.fds.vr.business.model.VRRPDossierStatisticsModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VRRPDossierStatistics service. Represents a row in the &quot;vr_rp_dossierstatistics&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VRRPDossierStatisticsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VRRPDossierStatisticsImpl}.
 * </p>
 *
 * @author LamTV
 * @see VRRPDossierStatisticsImpl
 * @see VRRPDossierStatistics
 * @see VRRPDossierStatisticsModel
 * @generated
 */
@ProviderType
public class VRRPDossierStatisticsModelImpl extends BaseModelImpl<VRRPDossierStatistics>
	implements VRRPDossierStatisticsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vrrp dossier statistics model instance should use the {@link VRRPDossierStatistics} interface instead.
	 */
	public static final String TABLE_NAME = "vr_rp_dossierstatistics";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "dossierid", Types.BIGINT },
			{ "dossierIdCTN", Types.VARCHAR },
			{ "dossierno", Types.VARCHAR },
			{ "dossiersendingdate", Types.TIMESTAMP },
			{ "dossierreceivingdate", Types.TIMESTAMP },
			{ "dossierfirstupdatingdate", Types.TIMESTAMP },
			{ "dossierlastupdatingdate", Types.TIMESTAMP },
			{ "dossierendorsementdate", Types.TIMESTAMP },
			{ "dossiersubmittingdate", Types.TIMESTAMP },
			{ "dossierfirstcertificatesigndate", Types.TIMESTAMP },
			{ "dossierfirstassignmentdate", Types.TIMESTAMP },
			{ "dossierfirstreviewdate", Types.TIMESTAMP },
			{ "dossiernexttreviewdate", Types.TIMESTAMP },
			{ "dossierlastassignmentdate", Types.TIMESTAMP },
			{ "dossierreviewadjustdate", Types.TIMESTAMP },
			{ "dossierlastreviewadjustdate", Types.TIMESTAMP },
			{ "dossierlastcertificatesigndate", Types.TIMESTAMP },
			{ "dossierdeadline", Types.TIMESTAMP },
			{ "dossierfinisheddate", Types.TIMESTAMP },
			{ "dossiercancellingdate", Types.TIMESTAMP },
			{ "dossierexpiredate", Types.TIMESTAMP },
			{ "dossierviolatingdate", Types.TIMESTAMP },
			{ "dossierviolatingfromdate", Types.TIMESTAMP },
			{ "dossierviolatingtodate", Types.TIMESTAMP },
			{ "dossiertype", Types.VARCHAR },
			{ "dossiertype_endorsed", Types.VARCHAR },
			{ "dossiertype_expired", Types.VARCHAR },
			{ "dossiertype_updated", Types.VARCHAR },
			{ "dossiertype_delayed", Types.VARCHAR },
			{ "dossierdelayday", Types.INTEGER },
			{ "dossierdelayreason", Types.VARCHAR },
			{ "dossierstatus_processing", Types.VARCHAR },
			{ "dossiersubstatus", Types.VARCHAR },
			{ "dossierresult", Types.VARCHAR },
			{ "remarkToUpdate", Types.VARCHAR },
			{ "remarkToResult", Types.VARCHAR },
			{ "resultdescription1", Types.VARCHAR },
			{ "resultdescription2", Types.VARCHAR },
			{ "resultdescription3", Types.VARCHAR },
			{ "applicantNo", Types.VARCHAR },
			{ "applicantname", Types.VARCHAR },
			{ "applicantaddress", Types.VARCHAR },
			{ "productionplantname", Types.VARCHAR },
			{ "productionplantaddress", Types.VARCHAR },
			{ "domesticFDI", Types.VARCHAR },
			{ "vehicleclass", Types.VARCHAR },
			{ "certifiedvehicletype", Types.VARCHAR },
			{ "certifiedvehicletypedescription", Types.VARCHAR },
			{ "certifiedtrademark", Types.VARCHAR },
			{ "certifiedtrademarkname", Types.VARCHAR },
			{ "certifiedcommercialname", Types.VARCHAR },
			{ "certifiedmodelcode", Types.VARCHAR },
			{ "certifiedassemblytype", Types.VARCHAR },
			{ "certifiedassemblytypedescription", Types.VARCHAR },
			{ "equipmentimportquantity", Types.INTEGER },
			{ "SeatNumber", Types.VARCHAR },
			{ "EngineType", Types.VARCHAR },
			{ "EngineTypeDescription", Types.VARCHAR },
			{ "certificaterecordno_new", Types.VARCHAR },
			{ "certificaterecordno_renew", Types.VARCHAR },
			{ "certificateyear", Types.VARCHAR },
			{ "certificatemonth", Types.INTEGER },
			{ "corporationId", Types.VARCHAR },
			{ "inspectorcode", Types.VARCHAR },
			{ "inspectorname", Types.VARCHAR },
			{ "leadername", Types.VARCHAR },
			{ "men2receiving", Types.VARCHAR },
			{ "men2firstupdating", Types.VARCHAR },
			{ "men2lastupdating", Types.VARCHAR },
			{ "men2endorsement", Types.VARCHAR },
			{ "men2submitting", Types.VARCHAR },
			{ "men2firstcertificate", Types.VARCHAR },
			{ "men2firstassignment", Types.VARCHAR },
			{ "men2firstreview", Types.VARCHAR },
			{ "men2nexttreview", Types.VARCHAR },
			{ "men2lastassignment", Types.VARCHAR },
			{ "men2reviewadjust", Types.VARCHAR },
			{ "men2lastreviewadjust", Types.VARCHAR },
			{ "men2lastcertificatesign", Types.VARCHAR },
			{ "men2finished", Types.VARCHAR },
			{ "men2cancelled", Types.VARCHAR },
			{ "men2expired", Types.VARCHAR },
			{ "men2violated", Types.VARCHAR },
			{ "dossierpaymentdate", Types.TIMESTAMP },
			{ "men2paymentapproval", Types.VARCHAR },
			{ "modifyDate", Types.TIMESTAMP },
			{ "syncDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dossierid", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dossierIdCTN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierno", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossiersendingdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierreceivingdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierfirstupdatingdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierlastupdatingdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierendorsementdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossiersubmittingdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierfirstcertificatesigndate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierfirstassignmentdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierfirstreviewdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossiernexttreviewdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierlastassignmentdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierreviewadjustdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierlastreviewadjustdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierlastcertificatesigndate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierdeadline", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierfinisheddate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossiercancellingdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierexpiredate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierviolatingdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierviolatingfromdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierviolatingtodate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossiertype", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossiertype_endorsed", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossiertype_expired", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossiertype_updated", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossiertype_delayed", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierdelayday", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("dossierdelayreason", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierstatus_processing", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossiersubstatus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierresult", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("remarkToUpdate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("remarkToResult", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("resultdescription1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("resultdescription2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("resultdescription3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantaddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionplantname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionplantaddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("domesticFDI", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleclass", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedvehicletype", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedvehicletypedescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedtrademark", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedtrademarkname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedcommercialname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedmodelcode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedassemblytype", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certifiedassemblytypedescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("equipmentimportquantity", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("SeatNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("EngineType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("EngineTypeDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certificaterecordno_new", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certificaterecordno_renew", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certificateyear", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("certificatemonth", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("corporationId", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inspectorcode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inspectorname", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("leadername", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2receiving", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2firstupdating", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2lastupdating", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2endorsement", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2submitting", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2firstcertificate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2firstassignment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2firstreview", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2nexttreview", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2lastassignment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2reviewadjust", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2lastreviewadjust", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2lastcertificatesign", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2finished", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2cancelled", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2expired", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("men2violated", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierpaymentdate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("men2paymentapproval", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifyDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("syncDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table vr_rp_dossierstatistics (id LONG not null primary key,dossierid LONG,dossierIdCTN VARCHAR(75) null,dossierno VARCHAR(75) null,dossiersendingdate DATE null,dossierreceivingdate DATE null,dossierfirstupdatingdate DATE null,dossierlastupdatingdate DATE null,dossierendorsementdate DATE null,dossiersubmittingdate DATE null,dossierfirstcertificatesigndate DATE null,dossierfirstassignmentdate DATE null,dossierfirstreviewdate DATE null,dossiernexttreviewdate DATE null,dossierlastassignmentdate DATE null,dossierreviewadjustdate DATE null,dossierlastreviewadjustdate DATE null,dossierlastcertificatesigndate DATE null,dossierdeadline DATE null,dossierfinisheddate DATE null,dossiercancellingdate DATE null,dossierexpiredate DATE null,dossierviolatingdate DATE null,dossierviolatingfromdate DATE null,dossierviolatingtodate DATE null,dossiertype VARCHAR(75) null,dossiertype_endorsed VARCHAR(75) null,dossiertype_expired VARCHAR(75) null,dossiertype_updated VARCHAR(75) null,dossiertype_delayed VARCHAR(75) null,dossierdelayday INTEGER,dossierdelayreason VARCHAR(75) null,dossierstatus_processing VARCHAR(75) null,dossiersubstatus VARCHAR(75) null,dossierresult VARCHAR(75) null,remarkToUpdate VARCHAR(75) null,remarkToResult VARCHAR(75) null,resultdescription1 VARCHAR(75) null,resultdescription2 VARCHAR(75) null,resultdescription3 VARCHAR(75) null,applicantNo VARCHAR(75) null,applicantname VARCHAR(75) null,applicantaddress VARCHAR(75) null,productionplantname VARCHAR(75) null,productionplantaddress VARCHAR(75) null,domesticFDI VARCHAR(75) null,vehicleclass VARCHAR(75) null,certifiedvehicletype VARCHAR(75) null,certifiedvehicletypedescription VARCHAR(75) null,certifiedtrademark VARCHAR(75) null,certifiedtrademarkname VARCHAR(75) null,certifiedcommercialname VARCHAR(75) null,certifiedmodelcode VARCHAR(75) null,certifiedassemblytype VARCHAR(75) null,certifiedassemblytypedescription VARCHAR(75) null,equipmentimportquantity INTEGER,SeatNumber VARCHAR(75) null,EngineType VARCHAR(75) null,EngineTypeDescription VARCHAR(75) null,certificaterecordno_new VARCHAR(75) null,certificaterecordno_renew VARCHAR(75) null,certificateyear VARCHAR(75) null,certificatemonth INTEGER,corporationId VARCHAR(75) null,inspectorcode VARCHAR(75) null,inspectorname VARCHAR(75) null,leadername VARCHAR(75) null,men2receiving VARCHAR(75) null,men2firstupdating VARCHAR(75) null,men2lastupdating VARCHAR(75) null,men2endorsement VARCHAR(75) null,men2submitting VARCHAR(75) null,men2firstcertificate VARCHAR(75) null,men2firstassignment VARCHAR(75) null,men2firstreview VARCHAR(75) null,men2nexttreview VARCHAR(75) null,men2lastassignment VARCHAR(75) null,men2reviewadjust VARCHAR(75) null,men2lastreviewadjust VARCHAR(75) null,men2lastcertificatesign VARCHAR(75) null,men2finished VARCHAR(75) null,men2cancelled VARCHAR(75) null,men2expired VARCHAR(75) null,men2violated VARCHAR(75) null,dossierpaymentdate DATE null,men2paymentapproval VARCHAR(75) null,modifyDate DATE null,syncDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table vr_rp_dossierstatistics";
	public static final String ORDER_BY_JPQL = " ORDER BY vrrpDossierStatistics.syncDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY vr_rp_dossierstatistics.syncDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fds.vr.business.model.VRRPDossierStatistics"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fds.vr.business.model.VRRPDossierStatistics"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.fds.vr.business.model.VRRPDossierStatistics"),
			true);
	public static final long APPLICANTNO_COLUMN_BITMASK = 1L;
	public static final long CORPORATIONID_COLUMN_BITMASK = 2L;
	public static final long DOSSIERIDCTN_COLUMN_BITMASK = 4L;
	public static final long DOSSIERID_COLUMN_BITMASK = 8L;
	public static final long DOSSIERNO_COLUMN_BITMASK = 16L;
	public static final long INSPECTORCODE_COLUMN_BITMASK = 32L;
	public static final long SYNCDATE_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.fds.vr.service.util.ServiceProps.get(
				"lock.expiration.time.com.fds.vr.business.model.VRRPDossierStatistics"));

	public VRRPDossierStatisticsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VRRPDossierStatistics.class;
	}

	@Override
	public String getModelClassName() {
		return VRRPDossierStatistics.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("dossierid", getDossierid());
		attributes.put("dossierIdCTN", getDossierIdCTN());
		attributes.put("dossierno", getDossierno());
		attributes.put("dossiersendingdate", getDossiersendingdate());
		attributes.put("dossierreceivingdate", getDossierreceivingdate());
		attributes.put("dossierfirstupdatingdate", getDossierfirstupdatingdate());
		attributes.put("dossierlastupdatingdate", getDossierlastupdatingdate());
		attributes.put("dossierendorsementdate", getDossierendorsementdate());
		attributes.put("dossiersubmittingdate", getDossiersubmittingdate());
		attributes.put("dossierfirstcertificatesigndate",
			getDossierfirstcertificatesigndate());
		attributes.put("dossierfirstassignmentdate",
			getDossierfirstassignmentdate());
		attributes.put("dossierfirstreviewdate", getDossierfirstreviewdate());
		attributes.put("dossiernexttreviewdate", getDossiernexttreviewdate());
		attributes.put("dossierlastassignmentdate",
			getDossierlastassignmentdate());
		attributes.put("dossierreviewadjustdate", getDossierreviewadjustdate());
		attributes.put("dossierlastreviewadjustdate",
			getDossierlastreviewadjustdate());
		attributes.put("dossierlastcertificatesigndate",
			getDossierlastcertificatesigndate());
		attributes.put("dossierdeadline", getDossierdeadline());
		attributes.put("dossierfinisheddate", getDossierfinisheddate());
		attributes.put("dossiercancellingdate", getDossiercancellingdate());
		attributes.put("dossierexpiredate", getDossierexpiredate());
		attributes.put("dossierviolatingdate", getDossierviolatingdate());
		attributes.put("dossierviolatingfromdate", getDossierviolatingfromdate());
		attributes.put("dossierviolatingtodate", getDossierviolatingtodate());
		attributes.put("dossiertype", getDossiertype());
		attributes.put("dossiertype_endorsed", getDossiertype_endorsed());
		attributes.put("dossiertype_expired", getDossiertype_expired());
		attributes.put("dossiertype_updated", getDossiertype_updated());
		attributes.put("dossiertype_delayed", getDossiertype_delayed());
		attributes.put("dossierdelayday", getDossierdelayday());
		attributes.put("dossierdelayreason", getDossierdelayreason());
		attributes.put("dossierstatus_processing", getDossierstatus_processing());
		attributes.put("dossiersubstatus", getDossiersubstatus());
		attributes.put("dossierresult", getDossierresult());
		attributes.put("remarkToUpdate", getRemarkToUpdate());
		attributes.put("remarkToResult", getRemarkToResult());
		attributes.put("resultdescription1", getResultdescription1());
		attributes.put("resultdescription2", getResultdescription2());
		attributes.put("resultdescription3", getResultdescription3());
		attributes.put("applicantNo", getApplicantNo());
		attributes.put("applicantname", getApplicantname());
		attributes.put("applicantaddress", getApplicantaddress());
		attributes.put("productionplantname", getProductionplantname());
		attributes.put("productionplantaddress", getProductionplantaddress());
		attributes.put("domesticFDI", getDomesticFDI());
		attributes.put("vehicleclass", getVehicleclass());
		attributes.put("certifiedvehicletype", getCertifiedvehicletype());
		attributes.put("certifiedvehicletypedescription",
			getCertifiedvehicletypedescription());
		attributes.put("certifiedtrademark", getCertifiedtrademark());
		attributes.put("certifiedtrademarkname", getCertifiedtrademarkname());
		attributes.put("certifiedcommercialname", getCertifiedcommercialname());
		attributes.put("certifiedmodelcode", getCertifiedmodelcode());
		attributes.put("certifiedassemblytype", getCertifiedassemblytype());
		attributes.put("certifiedassemblytypedescription",
			getCertifiedassemblytypedescription());
		attributes.put("equipmentimportquantity", getEquipmentimportquantity());
		attributes.put("SeatNumber", getSeatNumber());
		attributes.put("EngineType", getEngineType());
		attributes.put("EngineTypeDescription", getEngineTypeDescription());
		attributes.put("certificaterecordno_new", getCertificaterecordno_new());
		attributes.put("certificaterecordno_renew",
			getCertificaterecordno_renew());
		attributes.put("certificateyear", getCertificateyear());
		attributes.put("certificatemonth", getCertificatemonth());
		attributes.put("corporationId", getCorporationId());
		attributes.put("inspectorcode", getInspectorcode());
		attributes.put("inspectorname", getInspectorname());
		attributes.put("leadername", getLeadername());
		attributes.put("men2receiving", getMen2receiving());
		attributes.put("men2firstupdating", getMen2firstupdating());
		attributes.put("men2lastupdating", getMen2lastupdating());
		attributes.put("men2endorsement", getMen2endorsement());
		attributes.put("men2submitting", getMen2submitting());
		attributes.put("men2firstcertificate", getMen2firstcertificate());
		attributes.put("men2firstassignment", getMen2firstassignment());
		attributes.put("men2firstreview", getMen2firstreview());
		attributes.put("men2nexttreview", getMen2nexttreview());
		attributes.put("men2lastassignment", getMen2lastassignment());
		attributes.put("men2reviewadjust", getMen2reviewadjust());
		attributes.put("men2lastreviewadjust", getMen2lastreviewadjust());
		attributes.put("men2lastcertificatesign", getMen2lastcertificatesign());
		attributes.put("men2finished", getMen2finished());
		attributes.put("men2cancelled", getMen2cancelled());
		attributes.put("men2expired", getMen2expired());
		attributes.put("men2violated", getMen2violated());
		attributes.put("dossierPaymentDate", getDossierPaymentDate());
		attributes.put("men2PaymentApproval", getMen2PaymentApproval());
		attributes.put("modifyDate", getModifyDate());
		attributes.put("syncDate", getSyncDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long dossierid = (Long)attributes.get("dossierid");

		if (dossierid != null) {
			setDossierid(dossierid);
		}

		String dossierIdCTN = (String)attributes.get("dossierIdCTN");

		if (dossierIdCTN != null) {
			setDossierIdCTN(dossierIdCTN);
		}

		String dossierno = (String)attributes.get("dossierno");

		if (dossierno != null) {
			setDossierno(dossierno);
		}

		Date dossiersendingdate = (Date)attributes.get("dossiersendingdate");

		if (dossiersendingdate != null) {
			setDossiersendingdate(dossiersendingdate);
		}

		Date dossierreceivingdate = (Date)attributes.get("dossierreceivingdate");

		if (dossierreceivingdate != null) {
			setDossierreceivingdate(dossierreceivingdate);
		}

		Date dossierfirstupdatingdate = (Date)attributes.get(
				"dossierfirstupdatingdate");

		if (dossierfirstupdatingdate != null) {
			setDossierfirstupdatingdate(dossierfirstupdatingdate);
		}

		Date dossierlastupdatingdate = (Date)attributes.get(
				"dossierlastupdatingdate");

		if (dossierlastupdatingdate != null) {
			setDossierlastupdatingdate(dossierlastupdatingdate);
		}

		Date dossierendorsementdate = (Date)attributes.get(
				"dossierendorsementdate");

		if (dossierendorsementdate != null) {
			setDossierendorsementdate(dossierendorsementdate);
		}

		Date dossiersubmittingdate = (Date)attributes.get(
				"dossiersubmittingdate");

		if (dossiersubmittingdate != null) {
			setDossiersubmittingdate(dossiersubmittingdate);
		}

		Date dossierfirstcertificatesigndate = (Date)attributes.get(
				"dossierfirstcertificatesigndate");

		if (dossierfirstcertificatesigndate != null) {
			setDossierfirstcertificatesigndate(dossierfirstcertificatesigndate);
		}

		Date dossierfirstassignmentdate = (Date)attributes.get(
				"dossierfirstassignmentdate");

		if (dossierfirstassignmentdate != null) {
			setDossierfirstassignmentdate(dossierfirstassignmentdate);
		}

		Date dossierfirstreviewdate = (Date)attributes.get(
				"dossierfirstreviewdate");

		if (dossierfirstreviewdate != null) {
			setDossierfirstreviewdate(dossierfirstreviewdate);
		}

		Date dossiernexttreviewdate = (Date)attributes.get(
				"dossiernexttreviewdate");

		if (dossiernexttreviewdate != null) {
			setDossiernexttreviewdate(dossiernexttreviewdate);
		}

		Date dossierlastassignmentdate = (Date)attributes.get(
				"dossierlastassignmentdate");

		if (dossierlastassignmentdate != null) {
			setDossierlastassignmentdate(dossierlastassignmentdate);
		}

		Date dossierreviewadjustdate = (Date)attributes.get(
				"dossierreviewadjustdate");

		if (dossierreviewadjustdate != null) {
			setDossierreviewadjustdate(dossierreviewadjustdate);
		}

		Date dossierlastreviewadjustdate = (Date)attributes.get(
				"dossierlastreviewadjustdate");

		if (dossierlastreviewadjustdate != null) {
			setDossierlastreviewadjustdate(dossierlastreviewadjustdate);
		}

		Date dossierlastcertificatesigndate = (Date)attributes.get(
				"dossierlastcertificatesigndate");

		if (dossierlastcertificatesigndate != null) {
			setDossierlastcertificatesigndate(dossierlastcertificatesigndate);
		}

		Date dossierdeadline = (Date)attributes.get("dossierdeadline");

		if (dossierdeadline != null) {
			setDossierdeadline(dossierdeadline);
		}

		Date dossierfinisheddate = (Date)attributes.get("dossierfinisheddate");

		if (dossierfinisheddate != null) {
			setDossierfinisheddate(dossierfinisheddate);
		}

		Date dossiercancellingdate = (Date)attributes.get(
				"dossiercancellingdate");

		if (dossiercancellingdate != null) {
			setDossiercancellingdate(dossiercancellingdate);
		}

		Date dossierexpiredate = (Date)attributes.get("dossierexpiredate");

		if (dossierexpiredate != null) {
			setDossierexpiredate(dossierexpiredate);
		}

		Date dossierviolatingdate = (Date)attributes.get("dossierviolatingdate");

		if (dossierviolatingdate != null) {
			setDossierviolatingdate(dossierviolatingdate);
		}

		Date dossierviolatingfromdate = (Date)attributes.get(
				"dossierviolatingfromdate");

		if (dossierviolatingfromdate != null) {
			setDossierviolatingfromdate(dossierviolatingfromdate);
		}

		Date dossierviolatingtodate = (Date)attributes.get(
				"dossierviolatingtodate");

		if (dossierviolatingtodate != null) {
			setDossierviolatingtodate(dossierviolatingtodate);
		}

		String dossiertype = (String)attributes.get("dossiertype");

		if (dossiertype != null) {
			setDossiertype(dossiertype);
		}

		String dossiertype_endorsed = (String)attributes.get(
				"dossiertype_endorsed");

		if (dossiertype_endorsed != null) {
			setDossiertype_endorsed(dossiertype_endorsed);
		}

		String dossiertype_expired = (String)attributes.get(
				"dossiertype_expired");

		if (dossiertype_expired != null) {
			setDossiertype_expired(dossiertype_expired);
		}

		String dossiertype_updated = (String)attributes.get(
				"dossiertype_updated");

		if (dossiertype_updated != null) {
			setDossiertype_updated(dossiertype_updated);
		}

		String dossiertype_delayed = (String)attributes.get(
				"dossiertype_delayed");

		if (dossiertype_delayed != null) {
			setDossiertype_delayed(dossiertype_delayed);
		}

		Integer dossierdelayday = (Integer)attributes.get("dossierdelayday");

		if (dossierdelayday != null) {
			setDossierdelayday(dossierdelayday);
		}

		String dossierdelayreason = (String)attributes.get("dossierdelayreason");

		if (dossierdelayreason != null) {
			setDossierdelayreason(dossierdelayreason);
		}

		String dossierstatus_processing = (String)attributes.get(
				"dossierstatus_processing");

		if (dossierstatus_processing != null) {
			setDossierstatus_processing(dossierstatus_processing);
		}

		String dossiersubstatus = (String)attributes.get("dossiersubstatus");

		if (dossiersubstatus != null) {
			setDossiersubstatus(dossiersubstatus);
		}

		String dossierresult = (String)attributes.get("dossierresult");

		if (dossierresult != null) {
			setDossierresult(dossierresult);
		}

		String remarkToUpdate = (String)attributes.get("remarkToUpdate");

		if (remarkToUpdate != null) {
			setRemarkToUpdate(remarkToUpdate);
		}

		String remarkToResult = (String)attributes.get("remarkToResult");

		if (remarkToResult != null) {
			setRemarkToResult(remarkToResult);
		}

		String resultdescription1 = (String)attributes.get("resultdescription1");

		if (resultdescription1 != null) {
			setResultdescription1(resultdescription1);
		}

		String resultdescription2 = (String)attributes.get("resultdescription2");

		if (resultdescription2 != null) {
			setResultdescription2(resultdescription2);
		}

		String resultdescription3 = (String)attributes.get("resultdescription3");

		if (resultdescription3 != null) {
			setResultdescription3(resultdescription3);
		}

		String applicantNo = (String)attributes.get("applicantNo");

		if (applicantNo != null) {
			setApplicantNo(applicantNo);
		}

		String applicantname = (String)attributes.get("applicantname");

		if (applicantname != null) {
			setApplicantname(applicantname);
		}

		String applicantaddress = (String)attributes.get("applicantaddress");

		if (applicantaddress != null) {
			setApplicantaddress(applicantaddress);
		}

		String productionplantname = (String)attributes.get(
				"productionplantname");

		if (productionplantname != null) {
			setProductionplantname(productionplantname);
		}

		String productionplantaddress = (String)attributes.get(
				"productionplantaddress");

		if (productionplantaddress != null) {
			setProductionplantaddress(productionplantaddress);
		}

		String domesticFDI = (String)attributes.get("domesticFDI");

		if (domesticFDI != null) {
			setDomesticFDI(domesticFDI);
		}

		String vehicleclass = (String)attributes.get("vehicleclass");

		if (vehicleclass != null) {
			setVehicleclass(vehicleclass);
		}

		String certifiedvehicletype = (String)attributes.get(
				"certifiedvehicletype");

		if (certifiedvehicletype != null) {
			setCertifiedvehicletype(certifiedvehicletype);
		}

		String certifiedvehicletypedescription = (String)attributes.get(
				"certifiedvehicletypedescription");

		if (certifiedvehicletypedescription != null) {
			setCertifiedvehicletypedescription(certifiedvehicletypedescription);
		}

		String certifiedtrademark = (String)attributes.get("certifiedtrademark");

		if (certifiedtrademark != null) {
			setCertifiedtrademark(certifiedtrademark);
		}

		String certifiedtrademarkname = (String)attributes.get(
				"certifiedtrademarkname");

		if (certifiedtrademarkname != null) {
			setCertifiedtrademarkname(certifiedtrademarkname);
		}

		String certifiedcommercialname = (String)attributes.get(
				"certifiedcommercialname");

		if (certifiedcommercialname != null) {
			setCertifiedcommercialname(certifiedcommercialname);
		}

		String certifiedmodelcode = (String)attributes.get("certifiedmodelcode");

		if (certifiedmodelcode != null) {
			setCertifiedmodelcode(certifiedmodelcode);
		}

		String certifiedassemblytype = (String)attributes.get(
				"certifiedassemblytype");

		if (certifiedassemblytype != null) {
			setCertifiedassemblytype(certifiedassemblytype);
		}

		String certifiedassemblytypedescription = (String)attributes.get(
				"certifiedassemblytypedescription");

		if (certifiedassemblytypedescription != null) {
			setCertifiedassemblytypedescription(certifiedassemblytypedescription);
		}

		Integer equipmentimportquantity = (Integer)attributes.get(
				"equipmentimportquantity");

		if (equipmentimportquantity != null) {
			setEquipmentimportquantity(equipmentimportquantity);
		}

		String SeatNumber = (String)attributes.get("SeatNumber");

		if (SeatNumber != null) {
			setSeatNumber(SeatNumber);
		}

		String EngineType = (String)attributes.get("EngineType");

		if (EngineType != null) {
			setEngineType(EngineType);
		}

		String EngineTypeDescription = (String)attributes.get(
				"EngineTypeDescription");

		if (EngineTypeDescription != null) {
			setEngineTypeDescription(EngineTypeDescription);
		}

		String certificaterecordno_new = (String)attributes.get(
				"certificaterecordno_new");

		if (certificaterecordno_new != null) {
			setCertificaterecordno_new(certificaterecordno_new);
		}

		String certificaterecordno_renew = (String)attributes.get(
				"certificaterecordno_renew");

		if (certificaterecordno_renew != null) {
			setCertificaterecordno_renew(certificaterecordno_renew);
		}

		String certificateyear = (String)attributes.get("certificateyear");

		if (certificateyear != null) {
			setCertificateyear(certificateyear);
		}

		Integer certificatemonth = (Integer)attributes.get("certificatemonth");

		if (certificatemonth != null) {
			setCertificatemonth(certificatemonth);
		}

		String corporationId = (String)attributes.get("corporationId");

		if (corporationId != null) {
			setCorporationId(corporationId);
		}

		String inspectorcode = (String)attributes.get("inspectorcode");

		if (inspectorcode != null) {
			setInspectorcode(inspectorcode);
		}

		String inspectorname = (String)attributes.get("inspectorname");

		if (inspectorname != null) {
			setInspectorname(inspectorname);
		}

		String leadername = (String)attributes.get("leadername");

		if (leadername != null) {
			setLeadername(leadername);
		}

		String men2receiving = (String)attributes.get("men2receiving");

		if (men2receiving != null) {
			setMen2receiving(men2receiving);
		}

		String men2firstupdating = (String)attributes.get("men2firstupdating");

		if (men2firstupdating != null) {
			setMen2firstupdating(men2firstupdating);
		}

		String men2lastupdating = (String)attributes.get("men2lastupdating");

		if (men2lastupdating != null) {
			setMen2lastupdating(men2lastupdating);
		}

		String men2endorsement = (String)attributes.get("men2endorsement");

		if (men2endorsement != null) {
			setMen2endorsement(men2endorsement);
		}

		String men2submitting = (String)attributes.get("men2submitting");

		if (men2submitting != null) {
			setMen2submitting(men2submitting);
		}

		String men2firstcertificate = (String)attributes.get(
				"men2firstcertificate");

		if (men2firstcertificate != null) {
			setMen2firstcertificate(men2firstcertificate);
		}

		String men2firstassignment = (String)attributes.get(
				"men2firstassignment");

		if (men2firstassignment != null) {
			setMen2firstassignment(men2firstassignment);
		}

		String men2firstreview = (String)attributes.get("men2firstreview");

		if (men2firstreview != null) {
			setMen2firstreview(men2firstreview);
		}

		String men2nexttreview = (String)attributes.get("men2nexttreview");

		if (men2nexttreview != null) {
			setMen2nexttreview(men2nexttreview);
		}

		String men2lastassignment = (String)attributes.get("men2lastassignment");

		if (men2lastassignment != null) {
			setMen2lastassignment(men2lastassignment);
		}

		String men2reviewadjust = (String)attributes.get("men2reviewadjust");

		if (men2reviewadjust != null) {
			setMen2reviewadjust(men2reviewadjust);
		}

		String men2lastreviewadjust = (String)attributes.get(
				"men2lastreviewadjust");

		if (men2lastreviewadjust != null) {
			setMen2lastreviewadjust(men2lastreviewadjust);
		}

		String men2lastcertificatesign = (String)attributes.get(
				"men2lastcertificatesign");

		if (men2lastcertificatesign != null) {
			setMen2lastcertificatesign(men2lastcertificatesign);
		}

		String men2finished = (String)attributes.get("men2finished");

		if (men2finished != null) {
			setMen2finished(men2finished);
		}

		String men2cancelled = (String)attributes.get("men2cancelled");

		if (men2cancelled != null) {
			setMen2cancelled(men2cancelled);
		}

		String men2expired = (String)attributes.get("men2expired");

		if (men2expired != null) {
			setMen2expired(men2expired);
		}

		String men2violated = (String)attributes.get("men2violated");

		if (men2violated != null) {
			setMen2violated(men2violated);
		}

		Date dossierPaymentDate = (Date)attributes.get("dossierPaymentDate");

		if (dossierPaymentDate != null) {
			setDossierPaymentDate(dossierPaymentDate);
		}

		String men2PaymentApproval = (String)attributes.get(
				"men2PaymentApproval");

		if (men2PaymentApproval != null) {
			setMen2PaymentApproval(men2PaymentApproval);
		}

		Date modifyDate = (Date)attributes.get("modifyDate");

		if (modifyDate != null) {
			setModifyDate(modifyDate);
		}

		Date syncDate = (Date)attributes.get("syncDate");

		if (syncDate != null) {
			setSyncDate(syncDate);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getDossierid() {
		return _dossierid;
	}

	@Override
	public void setDossierid(long dossierid) {
		_columnBitmask |= DOSSIERID_COLUMN_BITMASK;

		if (!_setOriginalDossierid) {
			_setOriginalDossierid = true;

			_originalDossierid = _dossierid;
		}

		_dossierid = dossierid;
	}

	public long getOriginalDossierid() {
		return _originalDossierid;
	}

	@Override
	public String getDossierIdCTN() {
		if (_dossierIdCTN == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierIdCTN;
		}
	}

	@Override
	public void setDossierIdCTN(String dossierIdCTN) {
		_columnBitmask |= DOSSIERIDCTN_COLUMN_BITMASK;

		if (_originalDossierIdCTN == null) {
			_originalDossierIdCTN = _dossierIdCTN;
		}

		_dossierIdCTN = dossierIdCTN;
	}

	public String getOriginalDossierIdCTN() {
		return GetterUtil.getString(_originalDossierIdCTN);
	}

	@Override
	public String getDossierno() {
		if (_dossierno == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierno;
		}
	}

	@Override
	public void setDossierno(String dossierno) {
		_columnBitmask |= DOSSIERNO_COLUMN_BITMASK;

		if (_originalDossierno == null) {
			_originalDossierno = _dossierno;
		}

		_dossierno = dossierno;
	}

	public String getOriginalDossierno() {
		return GetterUtil.getString(_originalDossierno);
	}

	@Override
	public Date getDossiersendingdate() {
		return _dossiersendingdate;
	}

	@Override
	public void setDossiersendingdate(Date dossiersendingdate) {
		_dossiersendingdate = dossiersendingdate;
	}

	@Override
	public Date getDossierreceivingdate() {
		return _dossierreceivingdate;
	}

	@Override
	public void setDossierreceivingdate(Date dossierreceivingdate) {
		_dossierreceivingdate = dossierreceivingdate;
	}

	@Override
	public Date getDossierfirstupdatingdate() {
		return _dossierfirstupdatingdate;
	}

	@Override
	public void setDossierfirstupdatingdate(Date dossierfirstupdatingdate) {
		_dossierfirstupdatingdate = dossierfirstupdatingdate;
	}

	@Override
	public Date getDossierlastupdatingdate() {
		return _dossierlastupdatingdate;
	}

	@Override
	public void setDossierlastupdatingdate(Date dossierlastupdatingdate) {
		_dossierlastupdatingdate = dossierlastupdatingdate;
	}

	@Override
	public Date getDossierendorsementdate() {
		return _dossierendorsementdate;
	}

	@Override
	public void setDossierendorsementdate(Date dossierendorsementdate) {
		_dossierendorsementdate = dossierendorsementdate;
	}

	@Override
	public Date getDossiersubmittingdate() {
		return _dossiersubmittingdate;
	}

	@Override
	public void setDossiersubmittingdate(Date dossiersubmittingdate) {
		_dossiersubmittingdate = dossiersubmittingdate;
	}

	@Override
	public Date getDossierfirstcertificatesigndate() {
		return _dossierfirstcertificatesigndate;
	}

	@Override
	public void setDossierfirstcertificatesigndate(
		Date dossierfirstcertificatesigndate) {
		_dossierfirstcertificatesigndate = dossierfirstcertificatesigndate;
	}

	@Override
	public Date getDossierfirstassignmentdate() {
		return _dossierfirstassignmentdate;
	}

	@Override
	public void setDossierfirstassignmentdate(Date dossierfirstassignmentdate) {
		_dossierfirstassignmentdate = dossierfirstassignmentdate;
	}

	@Override
	public Date getDossierfirstreviewdate() {
		return _dossierfirstreviewdate;
	}

	@Override
	public void setDossierfirstreviewdate(Date dossierfirstreviewdate) {
		_dossierfirstreviewdate = dossierfirstreviewdate;
	}

	@Override
	public Date getDossiernexttreviewdate() {
		return _dossiernexttreviewdate;
	}

	@Override
	public void setDossiernexttreviewdate(Date dossiernexttreviewdate) {
		_dossiernexttreviewdate = dossiernexttreviewdate;
	}

	@Override
	public Date getDossierlastassignmentdate() {
		return _dossierlastassignmentdate;
	}

	@Override
	public void setDossierlastassignmentdate(Date dossierlastassignmentdate) {
		_dossierlastassignmentdate = dossierlastassignmentdate;
	}

	@Override
	public Date getDossierreviewadjustdate() {
		return _dossierreviewadjustdate;
	}

	@Override
	public void setDossierreviewadjustdate(Date dossierreviewadjustdate) {
		_dossierreviewadjustdate = dossierreviewadjustdate;
	}

	@Override
	public Date getDossierlastreviewadjustdate() {
		return _dossierlastreviewadjustdate;
	}

	@Override
	public void setDossierlastreviewadjustdate(Date dossierlastreviewadjustdate) {
		_dossierlastreviewadjustdate = dossierlastreviewadjustdate;
	}

	@Override
	public Date getDossierlastcertificatesigndate() {
		return _dossierlastcertificatesigndate;
	}

	@Override
	public void setDossierlastcertificatesigndate(
		Date dossierlastcertificatesigndate) {
		_dossierlastcertificatesigndate = dossierlastcertificatesigndate;
	}

	@Override
	public Date getDossierdeadline() {
		return _dossierdeadline;
	}

	@Override
	public void setDossierdeadline(Date dossierdeadline) {
		_dossierdeadline = dossierdeadline;
	}

	@Override
	public Date getDossierfinisheddate() {
		return _dossierfinisheddate;
	}

	@Override
	public void setDossierfinisheddate(Date dossierfinisheddate) {
		_dossierfinisheddate = dossierfinisheddate;
	}

	@Override
	public Date getDossiercancellingdate() {
		return _dossiercancellingdate;
	}

	@Override
	public void setDossiercancellingdate(Date dossiercancellingdate) {
		_dossiercancellingdate = dossiercancellingdate;
	}

	@Override
	public Date getDossierexpiredate() {
		return _dossierexpiredate;
	}

	@Override
	public void setDossierexpiredate(Date dossierexpiredate) {
		_dossierexpiredate = dossierexpiredate;
	}

	@Override
	public Date getDossierviolatingdate() {
		return _dossierviolatingdate;
	}

	@Override
	public void setDossierviolatingdate(Date dossierviolatingdate) {
		_dossierviolatingdate = dossierviolatingdate;
	}

	@Override
	public Date getDossierviolatingfromdate() {
		return _dossierviolatingfromdate;
	}

	@Override
	public void setDossierviolatingfromdate(Date dossierviolatingfromdate) {
		_dossierviolatingfromdate = dossierviolatingfromdate;
	}

	@Override
	public Date getDossierviolatingtodate() {
		return _dossierviolatingtodate;
	}

	@Override
	public void setDossierviolatingtodate(Date dossierviolatingtodate) {
		_dossierviolatingtodate = dossierviolatingtodate;
	}

	@Override
	public String getDossiertype() {
		if (_dossiertype == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossiertype;
		}
	}

	@Override
	public void setDossiertype(String dossiertype) {
		_dossiertype = dossiertype;
	}

	@Override
	public String getDossiertype_endorsed() {
		if (_dossiertype_endorsed == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossiertype_endorsed;
		}
	}

	@Override
	public void setDossiertype_endorsed(String dossiertype_endorsed) {
		_dossiertype_endorsed = dossiertype_endorsed;
	}

	@Override
	public String getDossiertype_expired() {
		if (_dossiertype_expired == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossiertype_expired;
		}
	}

	@Override
	public void setDossiertype_expired(String dossiertype_expired) {
		_dossiertype_expired = dossiertype_expired;
	}

	@Override
	public String getDossiertype_updated() {
		if (_dossiertype_updated == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossiertype_updated;
		}
	}

	@Override
	public void setDossiertype_updated(String dossiertype_updated) {
		_dossiertype_updated = dossiertype_updated;
	}

	@Override
	public String getDossiertype_delayed() {
		if (_dossiertype_delayed == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossiertype_delayed;
		}
	}

	@Override
	public void setDossiertype_delayed(String dossiertype_delayed) {
		_dossiertype_delayed = dossiertype_delayed;
	}

	@Override
	public int getDossierdelayday() {
		return _dossierdelayday;
	}

	@Override
	public void setDossierdelayday(int dossierdelayday) {
		_dossierdelayday = dossierdelayday;
	}

	@Override
	public String getDossierdelayreason() {
		if (_dossierdelayreason == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierdelayreason;
		}
	}

	@Override
	public void setDossierdelayreason(String dossierdelayreason) {
		_dossierdelayreason = dossierdelayreason;
	}

	@Override
	public String getDossierstatus_processing() {
		if (_dossierstatus_processing == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierstatus_processing;
		}
	}

	@Override
	public void setDossierstatus_processing(String dossierstatus_processing) {
		_dossierstatus_processing = dossierstatus_processing;
	}

	@Override
	public String getDossiersubstatus() {
		if (_dossiersubstatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossiersubstatus;
		}
	}

	@Override
	public void setDossiersubstatus(String dossiersubstatus) {
		_dossiersubstatus = dossiersubstatus;
	}

	@Override
	public String getDossierresult() {
		if (_dossierresult == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierresult;
		}
	}

	@Override
	public void setDossierresult(String dossierresult) {
		_dossierresult = dossierresult;
	}

	@Override
	public String getRemarkToUpdate() {
		if (_remarkToUpdate == null) {
			return StringPool.BLANK;
		}
		else {
			return _remarkToUpdate;
		}
	}

	@Override
	public void setRemarkToUpdate(String remarkToUpdate) {
		_remarkToUpdate = remarkToUpdate;
	}

	@Override
	public String getRemarkToResult() {
		if (_remarkToResult == null) {
			return StringPool.BLANK;
		}
		else {
			return _remarkToResult;
		}
	}

	@Override
	public void setRemarkToResult(String remarkToResult) {
		_remarkToResult = remarkToResult;
	}

	@Override
	public String getResultdescription1() {
		if (_resultdescription1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _resultdescription1;
		}
	}

	@Override
	public void setResultdescription1(String resultdescription1) {
		_resultdescription1 = resultdescription1;
	}

	@Override
	public String getResultdescription2() {
		if (_resultdescription2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _resultdescription2;
		}
	}

	@Override
	public void setResultdescription2(String resultdescription2) {
		_resultdescription2 = resultdescription2;
	}

	@Override
	public String getResultdescription3() {
		if (_resultdescription3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _resultdescription3;
		}
	}

	@Override
	public void setResultdescription3(String resultdescription3) {
		_resultdescription3 = resultdescription3;
	}

	@Override
	public String getApplicantNo() {
		if (_applicantNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantNo;
		}
	}

	@Override
	public void setApplicantNo(String applicantNo) {
		_columnBitmask |= APPLICANTNO_COLUMN_BITMASK;

		if (_originalApplicantNo == null) {
			_originalApplicantNo = _applicantNo;
		}

		_applicantNo = applicantNo;
	}

	public String getOriginalApplicantNo() {
		return GetterUtil.getString(_originalApplicantNo);
	}

	@Override
	public String getApplicantname() {
		if (_applicantname == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantname;
		}
	}

	@Override
	public void setApplicantname(String applicantname) {
		_applicantname = applicantname;
	}

	@Override
	public String getApplicantaddress() {
		if (_applicantaddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantaddress;
		}
	}

	@Override
	public void setApplicantaddress(String applicantaddress) {
		_applicantaddress = applicantaddress;
	}

	@Override
	public String getProductionplantname() {
		if (_productionplantname == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionplantname;
		}
	}

	@Override
	public void setProductionplantname(String productionplantname) {
		_productionplantname = productionplantname;
	}

	@Override
	public String getProductionplantaddress() {
		if (_productionplantaddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionplantaddress;
		}
	}

	@Override
	public void setProductionplantaddress(String productionplantaddress) {
		_productionplantaddress = productionplantaddress;
	}

	@Override
	public String getDomesticFDI() {
		if (_domesticFDI == null) {
			return StringPool.BLANK;
		}
		else {
			return _domesticFDI;
		}
	}

	@Override
	public void setDomesticFDI(String domesticFDI) {
		_domesticFDI = domesticFDI;
	}

	@Override
	public String getVehicleclass() {
		if (_vehicleclass == null) {
			return StringPool.BLANK;
		}
		else {
			return _vehicleclass;
		}
	}

	@Override
	public void setVehicleclass(String vehicleclass) {
		_vehicleclass = vehicleclass;
	}

	@Override
	public String getCertifiedvehicletype() {
		if (_certifiedvehicletype == null) {
			return StringPool.BLANK;
		}
		else {
			return _certifiedvehicletype;
		}
	}

	@Override
	public void setCertifiedvehicletype(String certifiedvehicletype) {
		_certifiedvehicletype = certifiedvehicletype;
	}

	@Override
	public String getCertifiedvehicletypedescription() {
		if (_certifiedvehicletypedescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _certifiedvehicletypedescription;
		}
	}

	@Override
	public void setCertifiedvehicletypedescription(
		String certifiedvehicletypedescription) {
		_certifiedvehicletypedescription = certifiedvehicletypedescription;
	}

	@Override
	public String getCertifiedtrademark() {
		if (_certifiedtrademark == null) {
			return StringPool.BLANK;
		}
		else {
			return _certifiedtrademark;
		}
	}

	@Override
	public void setCertifiedtrademark(String certifiedtrademark) {
		_certifiedtrademark = certifiedtrademark;
	}

	@Override
	public String getCertifiedtrademarkname() {
		if (_certifiedtrademarkname == null) {
			return StringPool.BLANK;
		}
		else {
			return _certifiedtrademarkname;
		}
	}

	@Override
	public void setCertifiedtrademarkname(String certifiedtrademarkname) {
		_certifiedtrademarkname = certifiedtrademarkname;
	}

	@Override
	public String getCertifiedcommercialname() {
		if (_certifiedcommercialname == null) {
			return StringPool.BLANK;
		}
		else {
			return _certifiedcommercialname;
		}
	}

	@Override
	public void setCertifiedcommercialname(String certifiedcommercialname) {
		_certifiedcommercialname = certifiedcommercialname;
	}

	@Override
	public String getCertifiedmodelcode() {
		if (_certifiedmodelcode == null) {
			return StringPool.BLANK;
		}
		else {
			return _certifiedmodelcode;
		}
	}

	@Override
	public void setCertifiedmodelcode(String certifiedmodelcode) {
		_certifiedmodelcode = certifiedmodelcode;
	}

	@Override
	public String getCertifiedassemblytype() {
		if (_certifiedassemblytype == null) {
			return StringPool.BLANK;
		}
		else {
			return _certifiedassemblytype;
		}
	}

	@Override
	public void setCertifiedassemblytype(String certifiedassemblytype) {
		_certifiedassemblytype = certifiedassemblytype;
	}

	@Override
	public String getCertifiedassemblytypedescription() {
		if (_certifiedassemblytypedescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _certifiedassemblytypedescription;
		}
	}

	@Override
	public void setCertifiedassemblytypedescription(
		String certifiedassemblytypedescription) {
		_certifiedassemblytypedescription = certifiedassemblytypedescription;
	}

	@Override
	public int getEquipmentimportquantity() {
		return _equipmentimportquantity;
	}

	@Override
	public void setEquipmentimportquantity(int equipmentimportquantity) {
		_equipmentimportquantity = equipmentimportquantity;
	}

	@Override
	public String getSeatNumber() {
		if (_SeatNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _SeatNumber;
		}
	}

	@Override
	public void setSeatNumber(String SeatNumber) {
		_SeatNumber = SeatNumber;
	}

	@Override
	public String getEngineType() {
		if (_EngineType == null) {
			return StringPool.BLANK;
		}
		else {
			return _EngineType;
		}
	}

	@Override
	public void setEngineType(String EngineType) {
		_EngineType = EngineType;
	}

	@Override
	public String getEngineTypeDescription() {
		if (_EngineTypeDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _EngineTypeDescription;
		}
	}

	@Override
	public void setEngineTypeDescription(String EngineTypeDescription) {
		_EngineTypeDescription = EngineTypeDescription;
	}

	@Override
	public String getCertificaterecordno_new() {
		if (_certificaterecordno_new == null) {
			return StringPool.BLANK;
		}
		else {
			return _certificaterecordno_new;
		}
	}

	@Override
	public void setCertificaterecordno_new(String certificaterecordno_new) {
		_certificaterecordno_new = certificaterecordno_new;
	}

	@Override
	public String getCertificaterecordno_renew() {
		if (_certificaterecordno_renew == null) {
			return StringPool.BLANK;
		}
		else {
			return _certificaterecordno_renew;
		}
	}

	@Override
	public void setCertificaterecordno_renew(String certificaterecordno_renew) {
		_certificaterecordno_renew = certificaterecordno_renew;
	}

	@Override
	public String getCertificateyear() {
		if (_certificateyear == null) {
			return StringPool.BLANK;
		}
		else {
			return _certificateyear;
		}
	}

	@Override
	public void setCertificateyear(String certificateyear) {
		_certificateyear = certificateyear;
	}

	@Override
	public int getCertificatemonth() {
		return _certificatemonth;
	}

	@Override
	public void setCertificatemonth(int certificatemonth) {
		_certificatemonth = certificatemonth;
	}

	@Override
	public String getCorporationId() {
		if (_corporationId == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporationId;
		}
	}

	@Override
	public void setCorporationId(String corporationId) {
		_columnBitmask |= CORPORATIONID_COLUMN_BITMASK;

		if (_originalCorporationId == null) {
			_originalCorporationId = _corporationId;
		}

		_corporationId = corporationId;
	}

	public String getOriginalCorporationId() {
		return GetterUtil.getString(_originalCorporationId);
	}

	@Override
	public String getInspectorcode() {
		if (_inspectorcode == null) {
			return StringPool.BLANK;
		}
		else {
			return _inspectorcode;
		}
	}

	@Override
	public void setInspectorcode(String inspectorcode) {
		_columnBitmask |= INSPECTORCODE_COLUMN_BITMASK;

		if (_originalInspectorcode == null) {
			_originalInspectorcode = _inspectorcode;
		}

		_inspectorcode = inspectorcode;
	}

	public String getOriginalInspectorcode() {
		return GetterUtil.getString(_originalInspectorcode);
	}

	@Override
	public String getInspectorname() {
		if (_inspectorname == null) {
			return StringPool.BLANK;
		}
		else {
			return _inspectorname;
		}
	}

	@Override
	public void setInspectorname(String inspectorname) {
		_inspectorname = inspectorname;
	}

	@Override
	public String getLeadername() {
		if (_leadername == null) {
			return StringPool.BLANK;
		}
		else {
			return _leadername;
		}
	}

	@Override
	public void setLeadername(String leadername) {
		_leadername = leadername;
	}

	@Override
	public String getMen2receiving() {
		if (_men2receiving == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2receiving;
		}
	}

	@Override
	public void setMen2receiving(String men2receiving) {
		_men2receiving = men2receiving;
	}

	@Override
	public String getMen2firstupdating() {
		if (_men2firstupdating == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2firstupdating;
		}
	}

	@Override
	public void setMen2firstupdating(String men2firstupdating) {
		_men2firstupdating = men2firstupdating;
	}

	@Override
	public String getMen2lastupdating() {
		if (_men2lastupdating == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2lastupdating;
		}
	}

	@Override
	public void setMen2lastupdating(String men2lastupdating) {
		_men2lastupdating = men2lastupdating;
	}

	@Override
	public String getMen2endorsement() {
		if (_men2endorsement == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2endorsement;
		}
	}

	@Override
	public void setMen2endorsement(String men2endorsement) {
		_men2endorsement = men2endorsement;
	}

	@Override
	public String getMen2submitting() {
		if (_men2submitting == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2submitting;
		}
	}

	@Override
	public void setMen2submitting(String men2submitting) {
		_men2submitting = men2submitting;
	}

	@Override
	public String getMen2firstcertificate() {
		if (_men2firstcertificate == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2firstcertificate;
		}
	}

	@Override
	public void setMen2firstcertificate(String men2firstcertificate) {
		_men2firstcertificate = men2firstcertificate;
	}

	@Override
	public String getMen2firstassignment() {
		if (_men2firstassignment == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2firstassignment;
		}
	}

	@Override
	public void setMen2firstassignment(String men2firstassignment) {
		_men2firstassignment = men2firstassignment;
	}

	@Override
	public String getMen2firstreview() {
		if (_men2firstreview == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2firstreview;
		}
	}

	@Override
	public void setMen2firstreview(String men2firstreview) {
		_men2firstreview = men2firstreview;
	}

	@Override
	public String getMen2nexttreview() {
		if (_men2nexttreview == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2nexttreview;
		}
	}

	@Override
	public void setMen2nexttreview(String men2nexttreview) {
		_men2nexttreview = men2nexttreview;
	}

	@Override
	public String getMen2lastassignment() {
		if (_men2lastassignment == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2lastassignment;
		}
	}

	@Override
	public void setMen2lastassignment(String men2lastassignment) {
		_men2lastassignment = men2lastassignment;
	}

	@Override
	public String getMen2reviewadjust() {
		if (_men2reviewadjust == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2reviewadjust;
		}
	}

	@Override
	public void setMen2reviewadjust(String men2reviewadjust) {
		_men2reviewadjust = men2reviewadjust;
	}

	@Override
	public String getMen2lastreviewadjust() {
		if (_men2lastreviewadjust == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2lastreviewadjust;
		}
	}

	@Override
	public void setMen2lastreviewadjust(String men2lastreviewadjust) {
		_men2lastreviewadjust = men2lastreviewadjust;
	}

	@Override
	public String getMen2lastcertificatesign() {
		if (_men2lastcertificatesign == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2lastcertificatesign;
		}
	}

	@Override
	public void setMen2lastcertificatesign(String men2lastcertificatesign) {
		_men2lastcertificatesign = men2lastcertificatesign;
	}

	@Override
	public String getMen2finished() {
		if (_men2finished == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2finished;
		}
	}

	@Override
	public void setMen2finished(String men2finished) {
		_men2finished = men2finished;
	}

	@Override
	public String getMen2cancelled() {
		if (_men2cancelled == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2cancelled;
		}
	}

	@Override
	public void setMen2cancelled(String men2cancelled) {
		_men2cancelled = men2cancelled;
	}

	@Override
	public String getMen2expired() {
		if (_men2expired == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2expired;
		}
	}

	@Override
	public void setMen2expired(String men2expired) {
		_men2expired = men2expired;
	}

	@Override
	public String getMen2violated() {
		if (_men2violated == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2violated;
		}
	}

	@Override
	public void setMen2violated(String men2violated) {
		_men2violated = men2violated;
	}

	@Override
	public Date getDossierPaymentDate() {
		return _dossierPaymentDate;
	}

	@Override
	public void setDossierPaymentDate(Date dossierPaymentDate) {
		_dossierPaymentDate = dossierPaymentDate;
	}

	@Override
	public String getMen2PaymentApproval() {
		if (_men2PaymentApproval == null) {
			return StringPool.BLANK;
		}
		else {
			return _men2PaymentApproval;
		}
	}

	@Override
	public void setMen2PaymentApproval(String men2PaymentApproval) {
		_men2PaymentApproval = men2PaymentApproval;
	}

	@Override
	public Date getModifyDate() {
		return _modifyDate;
	}

	@Override
	public void setModifyDate(Date modifyDate) {
		_modifyDate = modifyDate;
	}

	@Override
	public Date getSyncDate() {
		return _syncDate;
	}

	@Override
	public void setSyncDate(Date syncDate) {
		_columnBitmask = -1L;

		_syncDate = syncDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VRRPDossierStatistics.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VRRPDossierStatistics toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VRRPDossierStatistics)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VRRPDossierStatisticsImpl vrrpDossierStatisticsImpl = new VRRPDossierStatisticsImpl();

		vrrpDossierStatisticsImpl.setId(getId());
		vrrpDossierStatisticsImpl.setDossierid(getDossierid());
		vrrpDossierStatisticsImpl.setDossierIdCTN(getDossierIdCTN());
		vrrpDossierStatisticsImpl.setDossierno(getDossierno());
		vrrpDossierStatisticsImpl.setDossiersendingdate(getDossiersendingdate());
		vrrpDossierStatisticsImpl.setDossierreceivingdate(getDossierreceivingdate());
		vrrpDossierStatisticsImpl.setDossierfirstupdatingdate(getDossierfirstupdatingdate());
		vrrpDossierStatisticsImpl.setDossierlastupdatingdate(getDossierlastupdatingdate());
		vrrpDossierStatisticsImpl.setDossierendorsementdate(getDossierendorsementdate());
		vrrpDossierStatisticsImpl.setDossiersubmittingdate(getDossiersubmittingdate());
		vrrpDossierStatisticsImpl.setDossierfirstcertificatesigndate(getDossierfirstcertificatesigndate());
		vrrpDossierStatisticsImpl.setDossierfirstassignmentdate(getDossierfirstassignmentdate());
		vrrpDossierStatisticsImpl.setDossierfirstreviewdate(getDossierfirstreviewdate());
		vrrpDossierStatisticsImpl.setDossiernexttreviewdate(getDossiernexttreviewdate());
		vrrpDossierStatisticsImpl.setDossierlastassignmentdate(getDossierlastassignmentdate());
		vrrpDossierStatisticsImpl.setDossierreviewadjustdate(getDossierreviewadjustdate());
		vrrpDossierStatisticsImpl.setDossierlastreviewadjustdate(getDossierlastreviewadjustdate());
		vrrpDossierStatisticsImpl.setDossierlastcertificatesigndate(getDossierlastcertificatesigndate());
		vrrpDossierStatisticsImpl.setDossierdeadline(getDossierdeadline());
		vrrpDossierStatisticsImpl.setDossierfinisheddate(getDossierfinisheddate());
		vrrpDossierStatisticsImpl.setDossiercancellingdate(getDossiercancellingdate());
		vrrpDossierStatisticsImpl.setDossierexpiredate(getDossierexpiredate());
		vrrpDossierStatisticsImpl.setDossierviolatingdate(getDossierviolatingdate());
		vrrpDossierStatisticsImpl.setDossierviolatingfromdate(getDossierviolatingfromdate());
		vrrpDossierStatisticsImpl.setDossierviolatingtodate(getDossierviolatingtodate());
		vrrpDossierStatisticsImpl.setDossiertype(getDossiertype());
		vrrpDossierStatisticsImpl.setDossiertype_endorsed(getDossiertype_endorsed());
		vrrpDossierStatisticsImpl.setDossiertype_expired(getDossiertype_expired());
		vrrpDossierStatisticsImpl.setDossiertype_updated(getDossiertype_updated());
		vrrpDossierStatisticsImpl.setDossiertype_delayed(getDossiertype_delayed());
		vrrpDossierStatisticsImpl.setDossierdelayday(getDossierdelayday());
		vrrpDossierStatisticsImpl.setDossierdelayreason(getDossierdelayreason());
		vrrpDossierStatisticsImpl.setDossierstatus_processing(getDossierstatus_processing());
		vrrpDossierStatisticsImpl.setDossiersubstatus(getDossiersubstatus());
		vrrpDossierStatisticsImpl.setDossierresult(getDossierresult());
		vrrpDossierStatisticsImpl.setRemarkToUpdate(getRemarkToUpdate());
		vrrpDossierStatisticsImpl.setRemarkToResult(getRemarkToResult());
		vrrpDossierStatisticsImpl.setResultdescription1(getResultdescription1());
		vrrpDossierStatisticsImpl.setResultdescription2(getResultdescription2());
		vrrpDossierStatisticsImpl.setResultdescription3(getResultdescription3());
		vrrpDossierStatisticsImpl.setApplicantNo(getApplicantNo());
		vrrpDossierStatisticsImpl.setApplicantname(getApplicantname());
		vrrpDossierStatisticsImpl.setApplicantaddress(getApplicantaddress());
		vrrpDossierStatisticsImpl.setProductionplantname(getProductionplantname());
		vrrpDossierStatisticsImpl.setProductionplantaddress(getProductionplantaddress());
		vrrpDossierStatisticsImpl.setDomesticFDI(getDomesticFDI());
		vrrpDossierStatisticsImpl.setVehicleclass(getVehicleclass());
		vrrpDossierStatisticsImpl.setCertifiedvehicletype(getCertifiedvehicletype());
		vrrpDossierStatisticsImpl.setCertifiedvehicletypedescription(getCertifiedvehicletypedescription());
		vrrpDossierStatisticsImpl.setCertifiedtrademark(getCertifiedtrademark());
		vrrpDossierStatisticsImpl.setCertifiedtrademarkname(getCertifiedtrademarkname());
		vrrpDossierStatisticsImpl.setCertifiedcommercialname(getCertifiedcommercialname());
		vrrpDossierStatisticsImpl.setCertifiedmodelcode(getCertifiedmodelcode());
		vrrpDossierStatisticsImpl.setCertifiedassemblytype(getCertifiedassemblytype());
		vrrpDossierStatisticsImpl.setCertifiedassemblytypedescription(getCertifiedassemblytypedescription());
		vrrpDossierStatisticsImpl.setEquipmentimportquantity(getEquipmentimportquantity());
		vrrpDossierStatisticsImpl.setSeatNumber(getSeatNumber());
		vrrpDossierStatisticsImpl.setEngineType(getEngineType());
		vrrpDossierStatisticsImpl.setEngineTypeDescription(getEngineTypeDescription());
		vrrpDossierStatisticsImpl.setCertificaterecordno_new(getCertificaterecordno_new());
		vrrpDossierStatisticsImpl.setCertificaterecordno_renew(getCertificaterecordno_renew());
		vrrpDossierStatisticsImpl.setCertificateyear(getCertificateyear());
		vrrpDossierStatisticsImpl.setCertificatemonth(getCertificatemonth());
		vrrpDossierStatisticsImpl.setCorporationId(getCorporationId());
		vrrpDossierStatisticsImpl.setInspectorcode(getInspectorcode());
		vrrpDossierStatisticsImpl.setInspectorname(getInspectorname());
		vrrpDossierStatisticsImpl.setLeadername(getLeadername());
		vrrpDossierStatisticsImpl.setMen2receiving(getMen2receiving());
		vrrpDossierStatisticsImpl.setMen2firstupdating(getMen2firstupdating());
		vrrpDossierStatisticsImpl.setMen2lastupdating(getMen2lastupdating());
		vrrpDossierStatisticsImpl.setMen2endorsement(getMen2endorsement());
		vrrpDossierStatisticsImpl.setMen2submitting(getMen2submitting());
		vrrpDossierStatisticsImpl.setMen2firstcertificate(getMen2firstcertificate());
		vrrpDossierStatisticsImpl.setMen2firstassignment(getMen2firstassignment());
		vrrpDossierStatisticsImpl.setMen2firstreview(getMen2firstreview());
		vrrpDossierStatisticsImpl.setMen2nexttreview(getMen2nexttreview());
		vrrpDossierStatisticsImpl.setMen2lastassignment(getMen2lastassignment());
		vrrpDossierStatisticsImpl.setMen2reviewadjust(getMen2reviewadjust());
		vrrpDossierStatisticsImpl.setMen2lastreviewadjust(getMen2lastreviewadjust());
		vrrpDossierStatisticsImpl.setMen2lastcertificatesign(getMen2lastcertificatesign());
		vrrpDossierStatisticsImpl.setMen2finished(getMen2finished());
		vrrpDossierStatisticsImpl.setMen2cancelled(getMen2cancelled());
		vrrpDossierStatisticsImpl.setMen2expired(getMen2expired());
		vrrpDossierStatisticsImpl.setMen2violated(getMen2violated());
		vrrpDossierStatisticsImpl.setDossierPaymentDate(getDossierPaymentDate());
		vrrpDossierStatisticsImpl.setMen2PaymentApproval(getMen2PaymentApproval());
		vrrpDossierStatisticsImpl.setModifyDate(getModifyDate());
		vrrpDossierStatisticsImpl.setSyncDate(getSyncDate());

		vrrpDossierStatisticsImpl.resetOriginalValues();

		return vrrpDossierStatisticsImpl;
	}

	@Override
	public int compareTo(VRRPDossierStatistics vrrpDossierStatistics) {
		int value = 0;

		value = DateUtil.compareTo(getSyncDate(),
				vrrpDossierStatistics.getSyncDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VRRPDossierStatistics)) {
			return false;
		}

		VRRPDossierStatistics vrrpDossierStatistics = (VRRPDossierStatistics)obj;

		long primaryKey = vrrpDossierStatistics.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VRRPDossierStatisticsModelImpl vrrpDossierStatisticsModelImpl = this;

		vrrpDossierStatisticsModelImpl._originalDossierid = vrrpDossierStatisticsModelImpl._dossierid;

		vrrpDossierStatisticsModelImpl._setOriginalDossierid = false;

		vrrpDossierStatisticsModelImpl._originalDossierIdCTN = vrrpDossierStatisticsModelImpl._dossierIdCTN;

		vrrpDossierStatisticsModelImpl._originalDossierno = vrrpDossierStatisticsModelImpl._dossierno;

		vrrpDossierStatisticsModelImpl._originalApplicantNo = vrrpDossierStatisticsModelImpl._applicantNo;

		vrrpDossierStatisticsModelImpl._originalCorporationId = vrrpDossierStatisticsModelImpl._corporationId;

		vrrpDossierStatisticsModelImpl._originalInspectorcode = vrrpDossierStatisticsModelImpl._inspectorcode;

		vrrpDossierStatisticsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VRRPDossierStatistics> toCacheModel() {
		VRRPDossierStatisticsCacheModel vrrpDossierStatisticsCacheModel = new VRRPDossierStatisticsCacheModel();

		vrrpDossierStatisticsCacheModel.id = getId();

		vrrpDossierStatisticsCacheModel.dossierid = getDossierid();

		vrrpDossierStatisticsCacheModel.dossierIdCTN = getDossierIdCTN();

		String dossierIdCTN = vrrpDossierStatisticsCacheModel.dossierIdCTN;

		if ((dossierIdCTN != null) && (dossierIdCTN.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossierIdCTN = null;
		}

		vrrpDossierStatisticsCacheModel.dossierno = getDossierno();

		String dossierno = vrrpDossierStatisticsCacheModel.dossierno;

		if ((dossierno != null) && (dossierno.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossierno = null;
		}

		Date dossiersendingdate = getDossiersendingdate();

		if (dossiersendingdate != null) {
			vrrpDossierStatisticsCacheModel.dossiersendingdate = dossiersendingdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossiersendingdate = Long.MIN_VALUE;
		}

		Date dossierreceivingdate = getDossierreceivingdate();

		if (dossierreceivingdate != null) {
			vrrpDossierStatisticsCacheModel.dossierreceivingdate = dossierreceivingdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierreceivingdate = Long.MIN_VALUE;
		}

		Date dossierfirstupdatingdate = getDossierfirstupdatingdate();

		if (dossierfirstupdatingdate != null) {
			vrrpDossierStatisticsCacheModel.dossierfirstupdatingdate = dossierfirstupdatingdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierfirstupdatingdate = Long.MIN_VALUE;
		}

		Date dossierlastupdatingdate = getDossierlastupdatingdate();

		if (dossierlastupdatingdate != null) {
			vrrpDossierStatisticsCacheModel.dossierlastupdatingdate = dossierlastupdatingdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierlastupdatingdate = Long.MIN_VALUE;
		}

		Date dossierendorsementdate = getDossierendorsementdate();

		if (dossierendorsementdate != null) {
			vrrpDossierStatisticsCacheModel.dossierendorsementdate = dossierendorsementdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierendorsementdate = Long.MIN_VALUE;
		}

		Date dossiersubmittingdate = getDossiersubmittingdate();

		if (dossiersubmittingdate != null) {
			vrrpDossierStatisticsCacheModel.dossiersubmittingdate = dossiersubmittingdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossiersubmittingdate = Long.MIN_VALUE;
		}

		Date dossierfirstcertificatesigndate = getDossierfirstcertificatesigndate();

		if (dossierfirstcertificatesigndate != null) {
			vrrpDossierStatisticsCacheModel.dossierfirstcertificatesigndate = dossierfirstcertificatesigndate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierfirstcertificatesigndate = Long.MIN_VALUE;
		}

		Date dossierfirstassignmentdate = getDossierfirstassignmentdate();

		if (dossierfirstassignmentdate != null) {
			vrrpDossierStatisticsCacheModel.dossierfirstassignmentdate = dossierfirstassignmentdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierfirstassignmentdate = Long.MIN_VALUE;
		}

		Date dossierfirstreviewdate = getDossierfirstreviewdate();

		if (dossierfirstreviewdate != null) {
			vrrpDossierStatisticsCacheModel.dossierfirstreviewdate = dossierfirstreviewdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierfirstreviewdate = Long.MIN_VALUE;
		}

		Date dossiernexttreviewdate = getDossiernexttreviewdate();

		if (dossiernexttreviewdate != null) {
			vrrpDossierStatisticsCacheModel.dossiernexttreviewdate = dossiernexttreviewdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossiernexttreviewdate = Long.MIN_VALUE;
		}

		Date dossierlastassignmentdate = getDossierlastassignmentdate();

		if (dossierlastassignmentdate != null) {
			vrrpDossierStatisticsCacheModel.dossierlastassignmentdate = dossierlastassignmentdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierlastassignmentdate = Long.MIN_VALUE;
		}

		Date dossierreviewadjustdate = getDossierreviewadjustdate();

		if (dossierreviewadjustdate != null) {
			vrrpDossierStatisticsCacheModel.dossierreviewadjustdate = dossierreviewadjustdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierreviewadjustdate = Long.MIN_VALUE;
		}

		Date dossierlastreviewadjustdate = getDossierlastreviewadjustdate();

		if (dossierlastreviewadjustdate != null) {
			vrrpDossierStatisticsCacheModel.dossierlastreviewadjustdate = dossierlastreviewadjustdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierlastreviewadjustdate = Long.MIN_VALUE;
		}

		Date dossierlastcertificatesigndate = getDossierlastcertificatesigndate();

		if (dossierlastcertificatesigndate != null) {
			vrrpDossierStatisticsCacheModel.dossierlastcertificatesigndate = dossierlastcertificatesigndate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierlastcertificatesigndate = Long.MIN_VALUE;
		}

		Date dossierdeadline = getDossierdeadline();

		if (dossierdeadline != null) {
			vrrpDossierStatisticsCacheModel.dossierdeadline = dossierdeadline.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierdeadline = Long.MIN_VALUE;
		}

		Date dossierfinisheddate = getDossierfinisheddate();

		if (dossierfinisheddate != null) {
			vrrpDossierStatisticsCacheModel.dossierfinisheddate = dossierfinisheddate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierfinisheddate = Long.MIN_VALUE;
		}

		Date dossiercancellingdate = getDossiercancellingdate();

		if (dossiercancellingdate != null) {
			vrrpDossierStatisticsCacheModel.dossiercancellingdate = dossiercancellingdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossiercancellingdate = Long.MIN_VALUE;
		}

		Date dossierexpiredate = getDossierexpiredate();

		if (dossierexpiredate != null) {
			vrrpDossierStatisticsCacheModel.dossierexpiredate = dossierexpiredate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierexpiredate = Long.MIN_VALUE;
		}

		Date dossierviolatingdate = getDossierviolatingdate();

		if (dossierviolatingdate != null) {
			vrrpDossierStatisticsCacheModel.dossierviolatingdate = dossierviolatingdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierviolatingdate = Long.MIN_VALUE;
		}

		Date dossierviolatingfromdate = getDossierviolatingfromdate();

		if (dossierviolatingfromdate != null) {
			vrrpDossierStatisticsCacheModel.dossierviolatingfromdate = dossierviolatingfromdate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierviolatingfromdate = Long.MIN_VALUE;
		}

		Date dossierviolatingtodate = getDossierviolatingtodate();

		if (dossierviolatingtodate != null) {
			vrrpDossierStatisticsCacheModel.dossierviolatingtodate = dossierviolatingtodate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierviolatingtodate = Long.MIN_VALUE;
		}

		vrrpDossierStatisticsCacheModel.dossiertype = getDossiertype();

		String dossiertype = vrrpDossierStatisticsCacheModel.dossiertype;

		if ((dossiertype != null) && (dossiertype.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossiertype = null;
		}

		vrrpDossierStatisticsCacheModel.dossiertype_endorsed = getDossiertype_endorsed();

		String dossiertype_endorsed = vrrpDossierStatisticsCacheModel.dossiertype_endorsed;

		if ((dossiertype_endorsed != null) &&
				(dossiertype_endorsed.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossiertype_endorsed = null;
		}

		vrrpDossierStatisticsCacheModel.dossiertype_expired = getDossiertype_expired();

		String dossiertype_expired = vrrpDossierStatisticsCacheModel.dossiertype_expired;

		if ((dossiertype_expired != null) &&
				(dossiertype_expired.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossiertype_expired = null;
		}

		vrrpDossierStatisticsCacheModel.dossiertype_updated = getDossiertype_updated();

		String dossiertype_updated = vrrpDossierStatisticsCacheModel.dossiertype_updated;

		if ((dossiertype_updated != null) &&
				(dossiertype_updated.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossiertype_updated = null;
		}

		vrrpDossierStatisticsCacheModel.dossiertype_delayed = getDossiertype_delayed();

		String dossiertype_delayed = vrrpDossierStatisticsCacheModel.dossiertype_delayed;

		if ((dossiertype_delayed != null) &&
				(dossiertype_delayed.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossiertype_delayed = null;
		}

		vrrpDossierStatisticsCacheModel.dossierdelayday = getDossierdelayday();

		vrrpDossierStatisticsCacheModel.dossierdelayreason = getDossierdelayreason();

		String dossierdelayreason = vrrpDossierStatisticsCacheModel.dossierdelayreason;

		if ((dossierdelayreason != null) && (dossierdelayreason.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossierdelayreason = null;
		}

		vrrpDossierStatisticsCacheModel.dossierstatus_processing = getDossierstatus_processing();

		String dossierstatus_processing = vrrpDossierStatisticsCacheModel.dossierstatus_processing;

		if ((dossierstatus_processing != null) &&
				(dossierstatus_processing.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossierstatus_processing = null;
		}

		vrrpDossierStatisticsCacheModel.dossiersubstatus = getDossiersubstatus();

		String dossiersubstatus = vrrpDossierStatisticsCacheModel.dossiersubstatus;

		if ((dossiersubstatus != null) && (dossiersubstatus.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossiersubstatus = null;
		}

		vrrpDossierStatisticsCacheModel.dossierresult = getDossierresult();

		String dossierresult = vrrpDossierStatisticsCacheModel.dossierresult;

		if ((dossierresult != null) && (dossierresult.length() == 0)) {
			vrrpDossierStatisticsCacheModel.dossierresult = null;
		}

		vrrpDossierStatisticsCacheModel.remarkToUpdate = getRemarkToUpdate();

		String remarkToUpdate = vrrpDossierStatisticsCacheModel.remarkToUpdate;

		if ((remarkToUpdate != null) && (remarkToUpdate.length() == 0)) {
			vrrpDossierStatisticsCacheModel.remarkToUpdate = null;
		}

		vrrpDossierStatisticsCacheModel.remarkToResult = getRemarkToResult();

		String remarkToResult = vrrpDossierStatisticsCacheModel.remarkToResult;

		if ((remarkToResult != null) && (remarkToResult.length() == 0)) {
			vrrpDossierStatisticsCacheModel.remarkToResult = null;
		}

		vrrpDossierStatisticsCacheModel.resultdescription1 = getResultdescription1();

		String resultdescription1 = vrrpDossierStatisticsCacheModel.resultdescription1;

		if ((resultdescription1 != null) && (resultdescription1.length() == 0)) {
			vrrpDossierStatisticsCacheModel.resultdescription1 = null;
		}

		vrrpDossierStatisticsCacheModel.resultdescription2 = getResultdescription2();

		String resultdescription2 = vrrpDossierStatisticsCacheModel.resultdescription2;

		if ((resultdescription2 != null) && (resultdescription2.length() == 0)) {
			vrrpDossierStatisticsCacheModel.resultdescription2 = null;
		}

		vrrpDossierStatisticsCacheModel.resultdescription3 = getResultdescription3();

		String resultdescription3 = vrrpDossierStatisticsCacheModel.resultdescription3;

		if ((resultdescription3 != null) && (resultdescription3.length() == 0)) {
			vrrpDossierStatisticsCacheModel.resultdescription3 = null;
		}

		vrrpDossierStatisticsCacheModel.applicantNo = getApplicantNo();

		String applicantNo = vrrpDossierStatisticsCacheModel.applicantNo;

		if ((applicantNo != null) && (applicantNo.length() == 0)) {
			vrrpDossierStatisticsCacheModel.applicantNo = null;
		}

		vrrpDossierStatisticsCacheModel.applicantname = getApplicantname();

		String applicantname = vrrpDossierStatisticsCacheModel.applicantname;

		if ((applicantname != null) && (applicantname.length() == 0)) {
			vrrpDossierStatisticsCacheModel.applicantname = null;
		}

		vrrpDossierStatisticsCacheModel.applicantaddress = getApplicantaddress();

		String applicantaddress = vrrpDossierStatisticsCacheModel.applicantaddress;

		if ((applicantaddress != null) && (applicantaddress.length() == 0)) {
			vrrpDossierStatisticsCacheModel.applicantaddress = null;
		}

		vrrpDossierStatisticsCacheModel.productionplantname = getProductionplantname();

		String productionplantname = vrrpDossierStatisticsCacheModel.productionplantname;

		if ((productionplantname != null) &&
				(productionplantname.length() == 0)) {
			vrrpDossierStatisticsCacheModel.productionplantname = null;
		}

		vrrpDossierStatisticsCacheModel.productionplantaddress = getProductionplantaddress();

		String productionplantaddress = vrrpDossierStatisticsCacheModel.productionplantaddress;

		if ((productionplantaddress != null) &&
				(productionplantaddress.length() == 0)) {
			vrrpDossierStatisticsCacheModel.productionplantaddress = null;
		}

		vrrpDossierStatisticsCacheModel.domesticFDI = getDomesticFDI();

		String domesticFDI = vrrpDossierStatisticsCacheModel.domesticFDI;

		if ((domesticFDI != null) && (domesticFDI.length() == 0)) {
			vrrpDossierStatisticsCacheModel.domesticFDI = null;
		}

		vrrpDossierStatisticsCacheModel.vehicleclass = getVehicleclass();

		String vehicleclass = vrrpDossierStatisticsCacheModel.vehicleclass;

		if ((vehicleclass != null) && (vehicleclass.length() == 0)) {
			vrrpDossierStatisticsCacheModel.vehicleclass = null;
		}

		vrrpDossierStatisticsCacheModel.certifiedvehicletype = getCertifiedvehicletype();

		String certifiedvehicletype = vrrpDossierStatisticsCacheModel.certifiedvehicletype;

		if ((certifiedvehicletype != null) &&
				(certifiedvehicletype.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certifiedvehicletype = null;
		}

		vrrpDossierStatisticsCacheModel.certifiedvehicletypedescription = getCertifiedvehicletypedescription();

		String certifiedvehicletypedescription = vrrpDossierStatisticsCacheModel.certifiedvehicletypedescription;

		if ((certifiedvehicletypedescription != null) &&
				(certifiedvehicletypedescription.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certifiedvehicletypedescription = null;
		}

		vrrpDossierStatisticsCacheModel.certifiedtrademark = getCertifiedtrademark();

		String certifiedtrademark = vrrpDossierStatisticsCacheModel.certifiedtrademark;

		if ((certifiedtrademark != null) && (certifiedtrademark.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certifiedtrademark = null;
		}

		vrrpDossierStatisticsCacheModel.certifiedtrademarkname = getCertifiedtrademarkname();

		String certifiedtrademarkname = vrrpDossierStatisticsCacheModel.certifiedtrademarkname;

		if ((certifiedtrademarkname != null) &&
				(certifiedtrademarkname.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certifiedtrademarkname = null;
		}

		vrrpDossierStatisticsCacheModel.certifiedcommercialname = getCertifiedcommercialname();

		String certifiedcommercialname = vrrpDossierStatisticsCacheModel.certifiedcommercialname;

		if ((certifiedcommercialname != null) &&
				(certifiedcommercialname.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certifiedcommercialname = null;
		}

		vrrpDossierStatisticsCacheModel.certifiedmodelcode = getCertifiedmodelcode();

		String certifiedmodelcode = vrrpDossierStatisticsCacheModel.certifiedmodelcode;

		if ((certifiedmodelcode != null) && (certifiedmodelcode.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certifiedmodelcode = null;
		}

		vrrpDossierStatisticsCacheModel.certifiedassemblytype = getCertifiedassemblytype();

		String certifiedassemblytype = vrrpDossierStatisticsCacheModel.certifiedassemblytype;

		if ((certifiedassemblytype != null) &&
				(certifiedassemblytype.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certifiedassemblytype = null;
		}

		vrrpDossierStatisticsCacheModel.certifiedassemblytypedescription = getCertifiedassemblytypedescription();

		String certifiedassemblytypedescription = vrrpDossierStatisticsCacheModel.certifiedassemblytypedescription;

		if ((certifiedassemblytypedescription != null) &&
				(certifiedassemblytypedescription.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certifiedassemblytypedescription = null;
		}

		vrrpDossierStatisticsCacheModel.equipmentimportquantity = getEquipmentimportquantity();

		vrrpDossierStatisticsCacheModel.SeatNumber = getSeatNumber();

		String SeatNumber = vrrpDossierStatisticsCacheModel.SeatNumber;

		if ((SeatNumber != null) && (SeatNumber.length() == 0)) {
			vrrpDossierStatisticsCacheModel.SeatNumber = null;
		}

		vrrpDossierStatisticsCacheModel.EngineType = getEngineType();

		String EngineType = vrrpDossierStatisticsCacheModel.EngineType;

		if ((EngineType != null) && (EngineType.length() == 0)) {
			vrrpDossierStatisticsCacheModel.EngineType = null;
		}

		vrrpDossierStatisticsCacheModel.EngineTypeDescription = getEngineTypeDescription();

		String EngineTypeDescription = vrrpDossierStatisticsCacheModel.EngineTypeDescription;

		if ((EngineTypeDescription != null) &&
				(EngineTypeDescription.length() == 0)) {
			vrrpDossierStatisticsCacheModel.EngineTypeDescription = null;
		}

		vrrpDossierStatisticsCacheModel.certificaterecordno_new = getCertificaterecordno_new();

		String certificaterecordno_new = vrrpDossierStatisticsCacheModel.certificaterecordno_new;

		if ((certificaterecordno_new != null) &&
				(certificaterecordno_new.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certificaterecordno_new = null;
		}

		vrrpDossierStatisticsCacheModel.certificaterecordno_renew = getCertificaterecordno_renew();

		String certificaterecordno_renew = vrrpDossierStatisticsCacheModel.certificaterecordno_renew;

		if ((certificaterecordno_renew != null) &&
				(certificaterecordno_renew.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certificaterecordno_renew = null;
		}

		vrrpDossierStatisticsCacheModel.certificateyear = getCertificateyear();

		String certificateyear = vrrpDossierStatisticsCacheModel.certificateyear;

		if ((certificateyear != null) && (certificateyear.length() == 0)) {
			vrrpDossierStatisticsCacheModel.certificateyear = null;
		}

		vrrpDossierStatisticsCacheModel.certificatemonth = getCertificatemonth();

		vrrpDossierStatisticsCacheModel.corporationId = getCorporationId();

		String corporationId = vrrpDossierStatisticsCacheModel.corporationId;

		if ((corporationId != null) && (corporationId.length() == 0)) {
			vrrpDossierStatisticsCacheModel.corporationId = null;
		}

		vrrpDossierStatisticsCacheModel.inspectorcode = getInspectorcode();

		String inspectorcode = vrrpDossierStatisticsCacheModel.inspectorcode;

		if ((inspectorcode != null) && (inspectorcode.length() == 0)) {
			vrrpDossierStatisticsCacheModel.inspectorcode = null;
		}

		vrrpDossierStatisticsCacheModel.inspectorname = getInspectorname();

		String inspectorname = vrrpDossierStatisticsCacheModel.inspectorname;

		if ((inspectorname != null) && (inspectorname.length() == 0)) {
			vrrpDossierStatisticsCacheModel.inspectorname = null;
		}

		vrrpDossierStatisticsCacheModel.leadername = getLeadername();

		String leadername = vrrpDossierStatisticsCacheModel.leadername;

		if ((leadername != null) && (leadername.length() == 0)) {
			vrrpDossierStatisticsCacheModel.leadername = null;
		}

		vrrpDossierStatisticsCacheModel.men2receiving = getMen2receiving();

		String men2receiving = vrrpDossierStatisticsCacheModel.men2receiving;

		if ((men2receiving != null) && (men2receiving.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2receiving = null;
		}

		vrrpDossierStatisticsCacheModel.men2firstupdating = getMen2firstupdating();

		String men2firstupdating = vrrpDossierStatisticsCacheModel.men2firstupdating;

		if ((men2firstupdating != null) && (men2firstupdating.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2firstupdating = null;
		}

		vrrpDossierStatisticsCacheModel.men2lastupdating = getMen2lastupdating();

		String men2lastupdating = vrrpDossierStatisticsCacheModel.men2lastupdating;

		if ((men2lastupdating != null) && (men2lastupdating.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2lastupdating = null;
		}

		vrrpDossierStatisticsCacheModel.men2endorsement = getMen2endorsement();

		String men2endorsement = vrrpDossierStatisticsCacheModel.men2endorsement;

		if ((men2endorsement != null) && (men2endorsement.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2endorsement = null;
		}

		vrrpDossierStatisticsCacheModel.men2submitting = getMen2submitting();

		String men2submitting = vrrpDossierStatisticsCacheModel.men2submitting;

		if ((men2submitting != null) && (men2submitting.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2submitting = null;
		}

		vrrpDossierStatisticsCacheModel.men2firstcertificate = getMen2firstcertificate();

		String men2firstcertificate = vrrpDossierStatisticsCacheModel.men2firstcertificate;

		if ((men2firstcertificate != null) &&
				(men2firstcertificate.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2firstcertificate = null;
		}

		vrrpDossierStatisticsCacheModel.men2firstassignment = getMen2firstassignment();

		String men2firstassignment = vrrpDossierStatisticsCacheModel.men2firstassignment;

		if ((men2firstassignment != null) &&
				(men2firstassignment.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2firstassignment = null;
		}

		vrrpDossierStatisticsCacheModel.men2firstreview = getMen2firstreview();

		String men2firstreview = vrrpDossierStatisticsCacheModel.men2firstreview;

		if ((men2firstreview != null) && (men2firstreview.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2firstreview = null;
		}

		vrrpDossierStatisticsCacheModel.men2nexttreview = getMen2nexttreview();

		String men2nexttreview = vrrpDossierStatisticsCacheModel.men2nexttreview;

		if ((men2nexttreview != null) && (men2nexttreview.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2nexttreview = null;
		}

		vrrpDossierStatisticsCacheModel.men2lastassignment = getMen2lastassignment();

		String men2lastassignment = vrrpDossierStatisticsCacheModel.men2lastassignment;

		if ((men2lastassignment != null) && (men2lastassignment.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2lastassignment = null;
		}

		vrrpDossierStatisticsCacheModel.men2reviewadjust = getMen2reviewadjust();

		String men2reviewadjust = vrrpDossierStatisticsCacheModel.men2reviewadjust;

		if ((men2reviewadjust != null) && (men2reviewadjust.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2reviewadjust = null;
		}

		vrrpDossierStatisticsCacheModel.men2lastreviewadjust = getMen2lastreviewadjust();

		String men2lastreviewadjust = vrrpDossierStatisticsCacheModel.men2lastreviewadjust;

		if ((men2lastreviewadjust != null) &&
				(men2lastreviewadjust.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2lastreviewadjust = null;
		}

		vrrpDossierStatisticsCacheModel.men2lastcertificatesign = getMen2lastcertificatesign();

		String men2lastcertificatesign = vrrpDossierStatisticsCacheModel.men2lastcertificatesign;

		if ((men2lastcertificatesign != null) &&
				(men2lastcertificatesign.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2lastcertificatesign = null;
		}

		vrrpDossierStatisticsCacheModel.men2finished = getMen2finished();

		String men2finished = vrrpDossierStatisticsCacheModel.men2finished;

		if ((men2finished != null) && (men2finished.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2finished = null;
		}

		vrrpDossierStatisticsCacheModel.men2cancelled = getMen2cancelled();

		String men2cancelled = vrrpDossierStatisticsCacheModel.men2cancelled;

		if ((men2cancelled != null) && (men2cancelled.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2cancelled = null;
		}

		vrrpDossierStatisticsCacheModel.men2expired = getMen2expired();

		String men2expired = vrrpDossierStatisticsCacheModel.men2expired;

		if ((men2expired != null) && (men2expired.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2expired = null;
		}

		vrrpDossierStatisticsCacheModel.men2violated = getMen2violated();

		String men2violated = vrrpDossierStatisticsCacheModel.men2violated;

		if ((men2violated != null) && (men2violated.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2violated = null;
		}

		Date dossierPaymentDate = getDossierPaymentDate();

		if (dossierPaymentDate != null) {
			vrrpDossierStatisticsCacheModel.dossierPaymentDate = dossierPaymentDate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.dossierPaymentDate = Long.MIN_VALUE;
		}

		vrrpDossierStatisticsCacheModel.men2PaymentApproval = getMen2PaymentApproval();

		String men2PaymentApproval = vrrpDossierStatisticsCacheModel.men2PaymentApproval;

		if ((men2PaymentApproval != null) &&
				(men2PaymentApproval.length() == 0)) {
			vrrpDossierStatisticsCacheModel.men2PaymentApproval = null;
		}

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			vrrpDossierStatisticsCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.modifyDate = Long.MIN_VALUE;
		}

		Date syncDate = getSyncDate();

		if (syncDate != null) {
			vrrpDossierStatisticsCacheModel.syncDate = syncDate.getTime();
		}
		else {
			vrrpDossierStatisticsCacheModel.syncDate = Long.MIN_VALUE;
		}

		return vrrpDossierStatisticsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(177);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", dossierid=");
		sb.append(getDossierid());
		sb.append(", dossierIdCTN=");
		sb.append(getDossierIdCTN());
		sb.append(", dossierno=");
		sb.append(getDossierno());
		sb.append(", dossiersendingdate=");
		sb.append(getDossiersendingdate());
		sb.append(", dossierreceivingdate=");
		sb.append(getDossierreceivingdate());
		sb.append(", dossierfirstupdatingdate=");
		sb.append(getDossierfirstupdatingdate());
		sb.append(", dossierlastupdatingdate=");
		sb.append(getDossierlastupdatingdate());
		sb.append(", dossierendorsementdate=");
		sb.append(getDossierendorsementdate());
		sb.append(", dossiersubmittingdate=");
		sb.append(getDossiersubmittingdate());
		sb.append(", dossierfirstcertificatesigndate=");
		sb.append(getDossierfirstcertificatesigndate());
		sb.append(", dossierfirstassignmentdate=");
		sb.append(getDossierfirstassignmentdate());
		sb.append(", dossierfirstreviewdate=");
		sb.append(getDossierfirstreviewdate());
		sb.append(", dossiernexttreviewdate=");
		sb.append(getDossiernexttreviewdate());
		sb.append(", dossierlastassignmentdate=");
		sb.append(getDossierlastassignmentdate());
		sb.append(", dossierreviewadjustdate=");
		sb.append(getDossierreviewadjustdate());
		sb.append(", dossierlastreviewadjustdate=");
		sb.append(getDossierlastreviewadjustdate());
		sb.append(", dossierlastcertificatesigndate=");
		sb.append(getDossierlastcertificatesigndate());
		sb.append(", dossierdeadline=");
		sb.append(getDossierdeadline());
		sb.append(", dossierfinisheddate=");
		sb.append(getDossierfinisheddate());
		sb.append(", dossiercancellingdate=");
		sb.append(getDossiercancellingdate());
		sb.append(", dossierexpiredate=");
		sb.append(getDossierexpiredate());
		sb.append(", dossierviolatingdate=");
		sb.append(getDossierviolatingdate());
		sb.append(", dossierviolatingfromdate=");
		sb.append(getDossierviolatingfromdate());
		sb.append(", dossierviolatingtodate=");
		sb.append(getDossierviolatingtodate());
		sb.append(", dossiertype=");
		sb.append(getDossiertype());
		sb.append(", dossiertype_endorsed=");
		sb.append(getDossiertype_endorsed());
		sb.append(", dossiertype_expired=");
		sb.append(getDossiertype_expired());
		sb.append(", dossiertype_updated=");
		sb.append(getDossiertype_updated());
		sb.append(", dossiertype_delayed=");
		sb.append(getDossiertype_delayed());
		sb.append(", dossierdelayday=");
		sb.append(getDossierdelayday());
		sb.append(", dossierdelayreason=");
		sb.append(getDossierdelayreason());
		sb.append(", dossierstatus_processing=");
		sb.append(getDossierstatus_processing());
		sb.append(", dossiersubstatus=");
		sb.append(getDossiersubstatus());
		sb.append(", dossierresult=");
		sb.append(getDossierresult());
		sb.append(", remarkToUpdate=");
		sb.append(getRemarkToUpdate());
		sb.append(", remarkToResult=");
		sb.append(getRemarkToResult());
		sb.append(", resultdescription1=");
		sb.append(getResultdescription1());
		sb.append(", resultdescription2=");
		sb.append(getResultdescription2());
		sb.append(", resultdescription3=");
		sb.append(getResultdescription3());
		sb.append(", applicantNo=");
		sb.append(getApplicantNo());
		sb.append(", applicantname=");
		sb.append(getApplicantname());
		sb.append(", applicantaddress=");
		sb.append(getApplicantaddress());
		sb.append(", productionplantname=");
		sb.append(getProductionplantname());
		sb.append(", productionplantaddress=");
		sb.append(getProductionplantaddress());
		sb.append(", domesticFDI=");
		sb.append(getDomesticFDI());
		sb.append(", vehicleclass=");
		sb.append(getVehicleclass());
		sb.append(", certifiedvehicletype=");
		sb.append(getCertifiedvehicletype());
		sb.append(", certifiedvehicletypedescription=");
		sb.append(getCertifiedvehicletypedescription());
		sb.append(", certifiedtrademark=");
		sb.append(getCertifiedtrademark());
		sb.append(", certifiedtrademarkname=");
		sb.append(getCertifiedtrademarkname());
		sb.append(", certifiedcommercialname=");
		sb.append(getCertifiedcommercialname());
		sb.append(", certifiedmodelcode=");
		sb.append(getCertifiedmodelcode());
		sb.append(", certifiedassemblytype=");
		sb.append(getCertifiedassemblytype());
		sb.append(", certifiedassemblytypedescription=");
		sb.append(getCertifiedassemblytypedescription());
		sb.append(", equipmentimportquantity=");
		sb.append(getEquipmentimportquantity());
		sb.append(", SeatNumber=");
		sb.append(getSeatNumber());
		sb.append(", EngineType=");
		sb.append(getEngineType());
		sb.append(", EngineTypeDescription=");
		sb.append(getEngineTypeDescription());
		sb.append(", certificaterecordno_new=");
		sb.append(getCertificaterecordno_new());
		sb.append(", certificaterecordno_renew=");
		sb.append(getCertificaterecordno_renew());
		sb.append(", certificateyear=");
		sb.append(getCertificateyear());
		sb.append(", certificatemonth=");
		sb.append(getCertificatemonth());
		sb.append(", corporationId=");
		sb.append(getCorporationId());
		sb.append(", inspectorcode=");
		sb.append(getInspectorcode());
		sb.append(", inspectorname=");
		sb.append(getInspectorname());
		sb.append(", leadername=");
		sb.append(getLeadername());
		sb.append(", men2receiving=");
		sb.append(getMen2receiving());
		sb.append(", men2firstupdating=");
		sb.append(getMen2firstupdating());
		sb.append(", men2lastupdating=");
		sb.append(getMen2lastupdating());
		sb.append(", men2endorsement=");
		sb.append(getMen2endorsement());
		sb.append(", men2submitting=");
		sb.append(getMen2submitting());
		sb.append(", men2firstcertificate=");
		sb.append(getMen2firstcertificate());
		sb.append(", men2firstassignment=");
		sb.append(getMen2firstassignment());
		sb.append(", men2firstreview=");
		sb.append(getMen2firstreview());
		sb.append(", men2nexttreview=");
		sb.append(getMen2nexttreview());
		sb.append(", men2lastassignment=");
		sb.append(getMen2lastassignment());
		sb.append(", men2reviewadjust=");
		sb.append(getMen2reviewadjust());
		sb.append(", men2lastreviewadjust=");
		sb.append(getMen2lastreviewadjust());
		sb.append(", men2lastcertificatesign=");
		sb.append(getMen2lastcertificatesign());
		sb.append(", men2finished=");
		sb.append(getMen2finished());
		sb.append(", men2cancelled=");
		sb.append(getMen2cancelled());
		sb.append(", men2expired=");
		sb.append(getMen2expired());
		sb.append(", men2violated=");
		sb.append(getMen2violated());
		sb.append(", dossierPaymentDate=");
		sb.append(getDossierPaymentDate());
		sb.append(", men2PaymentApproval=");
		sb.append(getMen2PaymentApproval());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append(", syncDate=");
		sb.append(getSyncDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(268);

		sb.append("<model><model-name>");
		sb.append("com.fds.vr.business.model.VRRPDossierStatistics");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierid</column-name><column-value><![CDATA[");
		sb.append(getDossierid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierIdCTN</column-name><column-value><![CDATA[");
		sb.append(getDossierIdCTN());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierno</column-name><column-value><![CDATA[");
		sb.append(getDossierno());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiersendingdate</column-name><column-value><![CDATA[");
		sb.append(getDossiersendingdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierreceivingdate</column-name><column-value><![CDATA[");
		sb.append(getDossierreceivingdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierfirstupdatingdate</column-name><column-value><![CDATA[");
		sb.append(getDossierfirstupdatingdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierlastupdatingdate</column-name><column-value><![CDATA[");
		sb.append(getDossierlastupdatingdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierendorsementdate</column-name><column-value><![CDATA[");
		sb.append(getDossierendorsementdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiersubmittingdate</column-name><column-value><![CDATA[");
		sb.append(getDossiersubmittingdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierfirstcertificatesigndate</column-name><column-value><![CDATA[");
		sb.append(getDossierfirstcertificatesigndate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierfirstassignmentdate</column-name><column-value><![CDATA[");
		sb.append(getDossierfirstassignmentdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierfirstreviewdate</column-name><column-value><![CDATA[");
		sb.append(getDossierfirstreviewdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiernexttreviewdate</column-name><column-value><![CDATA[");
		sb.append(getDossiernexttreviewdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierlastassignmentdate</column-name><column-value><![CDATA[");
		sb.append(getDossierlastassignmentdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierreviewadjustdate</column-name><column-value><![CDATA[");
		sb.append(getDossierreviewadjustdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierlastreviewadjustdate</column-name><column-value><![CDATA[");
		sb.append(getDossierlastreviewadjustdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierlastcertificatesigndate</column-name><column-value><![CDATA[");
		sb.append(getDossierlastcertificatesigndate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierdeadline</column-name><column-value><![CDATA[");
		sb.append(getDossierdeadline());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierfinisheddate</column-name><column-value><![CDATA[");
		sb.append(getDossierfinisheddate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiercancellingdate</column-name><column-value><![CDATA[");
		sb.append(getDossiercancellingdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierexpiredate</column-name><column-value><![CDATA[");
		sb.append(getDossierexpiredate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierviolatingdate</column-name><column-value><![CDATA[");
		sb.append(getDossierviolatingdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierviolatingfromdate</column-name><column-value><![CDATA[");
		sb.append(getDossierviolatingfromdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierviolatingtodate</column-name><column-value><![CDATA[");
		sb.append(getDossierviolatingtodate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiertype</column-name><column-value><![CDATA[");
		sb.append(getDossiertype());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiertype_endorsed</column-name><column-value><![CDATA[");
		sb.append(getDossiertype_endorsed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiertype_expired</column-name><column-value><![CDATA[");
		sb.append(getDossiertype_expired());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiertype_updated</column-name><column-value><![CDATA[");
		sb.append(getDossiertype_updated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiertype_delayed</column-name><column-value><![CDATA[");
		sb.append(getDossiertype_delayed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierdelayday</column-name><column-value><![CDATA[");
		sb.append(getDossierdelayday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierdelayreason</column-name><column-value><![CDATA[");
		sb.append(getDossierdelayreason());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierstatus_processing</column-name><column-value><![CDATA[");
		sb.append(getDossierstatus_processing());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossiersubstatus</column-name><column-value><![CDATA[");
		sb.append(getDossiersubstatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierresult</column-name><column-value><![CDATA[");
		sb.append(getDossierresult());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>remarkToUpdate</column-name><column-value><![CDATA[");
		sb.append(getRemarkToUpdate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>remarkToResult</column-name><column-value><![CDATA[");
		sb.append(getRemarkToResult());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resultdescription1</column-name><column-value><![CDATA[");
		sb.append(getResultdescription1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resultdescription2</column-name><column-value><![CDATA[");
		sb.append(getResultdescription2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resultdescription3</column-name><column-value><![CDATA[");
		sb.append(getResultdescription3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantNo</column-name><column-value><![CDATA[");
		sb.append(getApplicantNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantname</column-name><column-value><![CDATA[");
		sb.append(getApplicantname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantaddress</column-name><column-value><![CDATA[");
		sb.append(getApplicantaddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionplantname</column-name><column-value><![CDATA[");
		sb.append(getProductionplantname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionplantaddress</column-name><column-value><![CDATA[");
		sb.append(getProductionplantaddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>domesticFDI</column-name><column-value><![CDATA[");
		sb.append(getDomesticFDI());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vehicleclass</column-name><column-value><![CDATA[");
		sb.append(getVehicleclass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certifiedvehicletype</column-name><column-value><![CDATA[");
		sb.append(getCertifiedvehicletype());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certifiedvehicletypedescription</column-name><column-value><![CDATA[");
		sb.append(getCertifiedvehicletypedescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certifiedtrademark</column-name><column-value><![CDATA[");
		sb.append(getCertifiedtrademark());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certifiedtrademarkname</column-name><column-value><![CDATA[");
		sb.append(getCertifiedtrademarkname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certifiedcommercialname</column-name><column-value><![CDATA[");
		sb.append(getCertifiedcommercialname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certifiedmodelcode</column-name><column-value><![CDATA[");
		sb.append(getCertifiedmodelcode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certifiedassemblytype</column-name><column-value><![CDATA[");
		sb.append(getCertifiedassemblytype());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certifiedassemblytypedescription</column-name><column-value><![CDATA[");
		sb.append(getCertifiedassemblytypedescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>equipmentimportquantity</column-name><column-value><![CDATA[");
		sb.append(getEquipmentimportquantity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SeatNumber</column-name><column-value><![CDATA[");
		sb.append(getSeatNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EngineType</column-name><column-value><![CDATA[");
		sb.append(getEngineType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>EngineTypeDescription</column-name><column-value><![CDATA[");
		sb.append(getEngineTypeDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certificaterecordno_new</column-name><column-value><![CDATA[");
		sb.append(getCertificaterecordno_new());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certificaterecordno_renew</column-name><column-value><![CDATA[");
		sb.append(getCertificaterecordno_renew());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certificateyear</column-name><column-value><![CDATA[");
		sb.append(getCertificateyear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certificatemonth</column-name><column-value><![CDATA[");
		sb.append(getCertificatemonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporationId</column-name><column-value><![CDATA[");
		sb.append(getCorporationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inspectorcode</column-name><column-value><![CDATA[");
		sb.append(getInspectorcode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inspectorname</column-name><column-value><![CDATA[");
		sb.append(getInspectorname());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>leadername</column-name><column-value><![CDATA[");
		sb.append(getLeadername());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2receiving</column-name><column-value><![CDATA[");
		sb.append(getMen2receiving());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2firstupdating</column-name><column-value><![CDATA[");
		sb.append(getMen2firstupdating());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2lastupdating</column-name><column-value><![CDATA[");
		sb.append(getMen2lastupdating());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2endorsement</column-name><column-value><![CDATA[");
		sb.append(getMen2endorsement());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2submitting</column-name><column-value><![CDATA[");
		sb.append(getMen2submitting());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2firstcertificate</column-name><column-value><![CDATA[");
		sb.append(getMen2firstcertificate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2firstassignment</column-name><column-value><![CDATA[");
		sb.append(getMen2firstassignment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2firstreview</column-name><column-value><![CDATA[");
		sb.append(getMen2firstreview());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2nexttreview</column-name><column-value><![CDATA[");
		sb.append(getMen2nexttreview());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2lastassignment</column-name><column-value><![CDATA[");
		sb.append(getMen2lastassignment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2reviewadjust</column-name><column-value><![CDATA[");
		sb.append(getMen2reviewadjust());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2lastreviewadjust</column-name><column-value><![CDATA[");
		sb.append(getMen2lastreviewadjust());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2lastcertificatesign</column-name><column-value><![CDATA[");
		sb.append(getMen2lastcertificatesign());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2finished</column-name><column-value><![CDATA[");
		sb.append(getMen2finished());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2cancelled</column-name><column-value><![CDATA[");
		sb.append(getMen2cancelled());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2expired</column-name><column-value><![CDATA[");
		sb.append(getMen2expired());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2violated</column-name><column-value><![CDATA[");
		sb.append(getMen2violated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierPaymentDate</column-name><column-value><![CDATA[");
		sb.append(getDossierPaymentDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>men2PaymentApproval</column-name><column-value><![CDATA[");
		sb.append(getMen2PaymentApproval());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>syncDate</column-name><column-value><![CDATA[");
		sb.append(getSyncDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VRRPDossierStatistics.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VRRPDossierStatistics.class
		};
	private long _id;
	private long _dossierid;
	private long _originalDossierid;
	private boolean _setOriginalDossierid;
	private String _dossierIdCTN;
	private String _originalDossierIdCTN;
	private String _dossierno;
	private String _originalDossierno;
	private Date _dossiersendingdate;
	private Date _dossierreceivingdate;
	private Date _dossierfirstupdatingdate;
	private Date _dossierlastupdatingdate;
	private Date _dossierendorsementdate;
	private Date _dossiersubmittingdate;
	private Date _dossierfirstcertificatesigndate;
	private Date _dossierfirstassignmentdate;
	private Date _dossierfirstreviewdate;
	private Date _dossiernexttreviewdate;
	private Date _dossierlastassignmentdate;
	private Date _dossierreviewadjustdate;
	private Date _dossierlastreviewadjustdate;
	private Date _dossierlastcertificatesigndate;
	private Date _dossierdeadline;
	private Date _dossierfinisheddate;
	private Date _dossiercancellingdate;
	private Date _dossierexpiredate;
	private Date _dossierviolatingdate;
	private Date _dossierviolatingfromdate;
	private Date _dossierviolatingtodate;
	private String _dossiertype;
	private String _dossiertype_endorsed;
	private String _dossiertype_expired;
	private String _dossiertype_updated;
	private String _dossiertype_delayed;
	private int _dossierdelayday;
	private String _dossierdelayreason;
	private String _dossierstatus_processing;
	private String _dossiersubstatus;
	private String _dossierresult;
	private String _remarkToUpdate;
	private String _remarkToResult;
	private String _resultdescription1;
	private String _resultdescription2;
	private String _resultdescription3;
	private String _applicantNo;
	private String _originalApplicantNo;
	private String _applicantname;
	private String _applicantaddress;
	private String _productionplantname;
	private String _productionplantaddress;
	private String _domesticFDI;
	private String _vehicleclass;
	private String _certifiedvehicletype;
	private String _certifiedvehicletypedescription;
	private String _certifiedtrademark;
	private String _certifiedtrademarkname;
	private String _certifiedcommercialname;
	private String _certifiedmodelcode;
	private String _certifiedassemblytype;
	private String _certifiedassemblytypedescription;
	private int _equipmentimportquantity;
	private String _SeatNumber;
	private String _EngineType;
	private String _EngineTypeDescription;
	private String _certificaterecordno_new;
	private String _certificaterecordno_renew;
	private String _certificateyear;
	private int _certificatemonth;
	private String _corporationId;
	private String _originalCorporationId;
	private String _inspectorcode;
	private String _originalInspectorcode;
	private String _inspectorname;
	private String _leadername;
	private String _men2receiving;
	private String _men2firstupdating;
	private String _men2lastupdating;
	private String _men2endorsement;
	private String _men2submitting;
	private String _men2firstcertificate;
	private String _men2firstassignment;
	private String _men2firstreview;
	private String _men2nexttreview;
	private String _men2lastassignment;
	private String _men2reviewadjust;
	private String _men2lastreviewadjust;
	private String _men2lastcertificatesign;
	private String _men2finished;
	private String _men2cancelled;
	private String _men2expired;
	private String _men2violated;
	private Date _dossierPaymentDate;
	private String _men2PaymentApproval;
	private Date _modifyDate;
	private Date _syncDate;
	private long _columnBitmask;
	private VRRPDossierStatistics _escapedModel;
}