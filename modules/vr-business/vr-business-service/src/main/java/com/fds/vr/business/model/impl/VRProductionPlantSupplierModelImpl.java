/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.vr.business.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.fds.vr.business.model.VRProductionPlantSupplier;
import com.fds.vr.business.model.VRProductionPlantSupplierModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VRProductionPlantSupplier service. Represents a row in the &quot;vr_productionplantsupplier&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VRProductionPlantSupplierModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VRProductionPlantSupplierImpl}.
 * </p>
 *
 * @author LamTV
 * @see VRProductionPlantSupplierImpl
 * @see VRProductionPlantSupplier
 * @see VRProductionPlantSupplierModel
 * @generated
 */
@ProviderType
public class VRProductionPlantSupplierModelImpl extends BaseModelImpl<VRProductionPlantSupplier>
	implements VRProductionPlantSupplierModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vr production plant supplier model instance should use the {@link VRProductionPlantSupplier} interface instead.
	 */
	public static final String TABLE_NAME = "vr_productionplantsupplier";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "mtCore", Types.BIGINT },
			{ "corporationCode", Types.VARCHAR },
			{ "corporationName", Types.VARCHAR },
			{ "corporationAddress", Types.VARCHAR },
			{ "productionPlantCode", Types.VARCHAR },
			{ "modifyDate", Types.TIMESTAMP },
			{ "syncDate", Types.TIMESTAMP },
			{ "productionPlantId", Types.BIGINT },
			{ "applicantProfileId", Types.BIGINT },
			{ "applicantCode", Types.VARCHAR },
			{ "supplierId", Types.BIGINT },
			{ "supplierName", Types.VARCHAR },
			{ "supplierAddress", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("mtCore", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("corporationCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("corporationName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("corporationAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifyDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("syncDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("productionPlantId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("applicantProfileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("applicantCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("supplierId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("supplierName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("supplierAddress", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table vr_productionplantsupplier (id LONG not null primary key,mtCore LONG,corporationCode VARCHAR(75) null,corporationName VARCHAR(75) null,corporationAddress VARCHAR(75) null,productionPlantCode VARCHAR(75) null,modifyDate DATE null,syncDate DATE null,productionPlantId LONG,applicantProfileId LONG,applicantCode VARCHAR(75) null,supplierId LONG,supplierName VARCHAR(75) null,supplierAddress VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table vr_productionplantsupplier";
	public static final String ORDER_BY_JPQL = " ORDER BY vrProductionPlantSupplier.modifyDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY vr_productionplantsupplier.modifyDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fds.vr.business.model.VRProductionPlantSupplier"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fds.vr.business.model.VRProductionPlantSupplier"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.fds.vr.business.model.VRProductionPlantSupplier"),
			true);
	public static final long CORPORATIONCODE_COLUMN_BITMASK = 1L;
	public static final long PRODUCTIONPLANTCODE_COLUMN_BITMASK = 2L;
	public static final long MODIFYDATE_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.fds.vr.service.util.ServiceProps.get(
				"lock.expiration.time.com.fds.vr.business.model.VRProductionPlantSupplier"));

	public VRProductionPlantSupplierModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VRProductionPlantSupplier.class;
	}

	@Override
	public String getModelClassName() {
		return VRProductionPlantSupplier.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("mtCore", getMtCore());
		attributes.put("corporationCode", getCorporationCode());
		attributes.put("corporationName", getCorporationName());
		attributes.put("corporationAddress", getCorporationAddress());
		attributes.put("productionPlantCode", getProductionPlantCode());
		attributes.put("modifyDate", getModifyDate());
		attributes.put("syncDate", getSyncDate());
		attributes.put("productionPlantId", getProductionPlantId());
		attributes.put("applicantProfileId", getApplicantProfileId());
		attributes.put("applicantCode", getApplicantCode());
		attributes.put("supplierId", getSupplierId());
		attributes.put("supplierName", getSupplierName());
		attributes.put("supplierAddress", getSupplierAddress());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long mtCore = (Long)attributes.get("mtCore");

		if (mtCore != null) {
			setMtCore(mtCore);
		}

		String corporationCode = (String)attributes.get("corporationCode");

		if (corporationCode != null) {
			setCorporationCode(corporationCode);
		}

		String corporationName = (String)attributes.get("corporationName");

		if (corporationName != null) {
			setCorporationName(corporationName);
		}

		String corporationAddress = (String)attributes.get("corporationAddress");

		if (corporationAddress != null) {
			setCorporationAddress(corporationAddress);
		}

		String productionPlantCode = (String)attributes.get(
				"productionPlantCode");

		if (productionPlantCode != null) {
			setProductionPlantCode(productionPlantCode);
		}

		Date modifyDate = (Date)attributes.get("modifyDate");

		if (modifyDate != null) {
			setModifyDate(modifyDate);
		}

		Date syncDate = (Date)attributes.get("syncDate");

		if (syncDate != null) {
			setSyncDate(syncDate);
		}

		Long productionPlantId = (Long)attributes.get("productionPlantId");

		if (productionPlantId != null) {
			setProductionPlantId(productionPlantId);
		}

		Long applicantProfileId = (Long)attributes.get("applicantProfileId");

		if (applicantProfileId != null) {
			setApplicantProfileId(applicantProfileId);
		}

		String applicantCode = (String)attributes.get("applicantCode");

		if (applicantCode != null) {
			setApplicantCode(applicantCode);
		}

		Long supplierId = (Long)attributes.get("supplierId");

		if (supplierId != null) {
			setSupplierId(supplierId);
		}

		String supplierName = (String)attributes.get("supplierName");

		if (supplierName != null) {
			setSupplierName(supplierName);
		}

		String supplierAddress = (String)attributes.get("supplierAddress");

		if (supplierAddress != null) {
			setSupplierAddress(supplierAddress);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getMtCore() {
		return _mtCore;
	}

	@Override
	public void setMtCore(long mtCore) {
		_mtCore = mtCore;
	}

	@Override
	public String getCorporationCode() {
		if (_corporationCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporationCode;
		}
	}

	@Override
	public void setCorporationCode(String corporationCode) {
		_columnBitmask |= CORPORATIONCODE_COLUMN_BITMASK;

		if (_originalCorporationCode == null) {
			_originalCorporationCode = _corporationCode;
		}

		_corporationCode = corporationCode;
	}

	public String getOriginalCorporationCode() {
		return GetterUtil.getString(_originalCorporationCode);
	}

	@Override
	public String getCorporationName() {
		if (_corporationName == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporationName;
		}
	}

	@Override
	public void setCorporationName(String corporationName) {
		_corporationName = corporationName;
	}

	@Override
	public String getCorporationAddress() {
		if (_corporationAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporationAddress;
		}
	}

	@Override
	public void setCorporationAddress(String corporationAddress) {
		_corporationAddress = corporationAddress;
	}

	@Override
	public String getProductionPlantCode() {
		if (_productionPlantCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantCode;
		}
	}

	@Override
	public void setProductionPlantCode(String productionPlantCode) {
		_columnBitmask |= PRODUCTIONPLANTCODE_COLUMN_BITMASK;

		if (_originalProductionPlantCode == null) {
			_originalProductionPlantCode = _productionPlantCode;
		}

		_productionPlantCode = productionPlantCode;
	}

	public String getOriginalProductionPlantCode() {
		return GetterUtil.getString(_originalProductionPlantCode);
	}

	@Override
	public Date getModifyDate() {
		return _modifyDate;
	}

	@Override
	public void setModifyDate(Date modifyDate) {
		_columnBitmask = -1L;

		_modifyDate = modifyDate;
	}

	@Override
	public Date getSyncDate() {
		return _syncDate;
	}

	@Override
	public void setSyncDate(Date syncDate) {
		_syncDate = syncDate;
	}

	@Override
	public long getProductionPlantId() {
		return _productionPlantId;
	}

	@Override
	public void setProductionPlantId(long productionPlantId) {
		_productionPlantId = productionPlantId;
	}

	@Override
	public long getApplicantProfileId() {
		return _applicantProfileId;
	}

	@Override
	public void setApplicantProfileId(long applicantProfileId) {
		_applicantProfileId = applicantProfileId;
	}

	@Override
	public String getApplicantCode() {
		if (_applicantCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantCode;
		}
	}

	@Override
	public void setApplicantCode(String applicantCode) {
		_applicantCode = applicantCode;
	}

	@Override
	public long getSupplierId() {
		return _supplierId;
	}

	@Override
	public void setSupplierId(long supplierId) {
		_supplierId = supplierId;
	}

	@Override
	public String getSupplierName() {
		if (_supplierName == null) {
			return StringPool.BLANK;
		}
		else {
			return _supplierName;
		}
	}

	@Override
	public void setSupplierName(String supplierName) {
		_supplierName = supplierName;
	}

	@Override
	public String getSupplierAddress() {
		if (_supplierAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _supplierAddress;
		}
	}

	@Override
	public void setSupplierAddress(String supplierAddress) {
		_supplierAddress = supplierAddress;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VRProductionPlantSupplier.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VRProductionPlantSupplier toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VRProductionPlantSupplier)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VRProductionPlantSupplierImpl vrProductionPlantSupplierImpl = new VRProductionPlantSupplierImpl();

		vrProductionPlantSupplierImpl.setId(getId());
		vrProductionPlantSupplierImpl.setMtCore(getMtCore());
		vrProductionPlantSupplierImpl.setCorporationCode(getCorporationCode());
		vrProductionPlantSupplierImpl.setCorporationName(getCorporationName());
		vrProductionPlantSupplierImpl.setCorporationAddress(getCorporationAddress());
		vrProductionPlantSupplierImpl.setProductionPlantCode(getProductionPlantCode());
		vrProductionPlantSupplierImpl.setModifyDate(getModifyDate());
		vrProductionPlantSupplierImpl.setSyncDate(getSyncDate());
		vrProductionPlantSupplierImpl.setProductionPlantId(getProductionPlantId());
		vrProductionPlantSupplierImpl.setApplicantProfileId(getApplicantProfileId());
		vrProductionPlantSupplierImpl.setApplicantCode(getApplicantCode());
		vrProductionPlantSupplierImpl.setSupplierId(getSupplierId());
		vrProductionPlantSupplierImpl.setSupplierName(getSupplierName());
		vrProductionPlantSupplierImpl.setSupplierAddress(getSupplierAddress());

		vrProductionPlantSupplierImpl.resetOriginalValues();

		return vrProductionPlantSupplierImpl;
	}

	@Override
	public int compareTo(VRProductionPlantSupplier vrProductionPlantSupplier) {
		int value = 0;

		value = DateUtil.compareTo(getModifyDate(),
				vrProductionPlantSupplier.getModifyDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VRProductionPlantSupplier)) {
			return false;
		}

		VRProductionPlantSupplier vrProductionPlantSupplier = (VRProductionPlantSupplier)obj;

		long primaryKey = vrProductionPlantSupplier.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VRProductionPlantSupplierModelImpl vrProductionPlantSupplierModelImpl = this;

		vrProductionPlantSupplierModelImpl._originalCorporationCode = vrProductionPlantSupplierModelImpl._corporationCode;

		vrProductionPlantSupplierModelImpl._originalProductionPlantCode = vrProductionPlantSupplierModelImpl._productionPlantCode;

		vrProductionPlantSupplierModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VRProductionPlantSupplier> toCacheModel() {
		VRProductionPlantSupplierCacheModel vrProductionPlantSupplierCacheModel = new VRProductionPlantSupplierCacheModel();

		vrProductionPlantSupplierCacheModel.id = getId();

		vrProductionPlantSupplierCacheModel.mtCore = getMtCore();

		vrProductionPlantSupplierCacheModel.corporationCode = getCorporationCode();

		String corporationCode = vrProductionPlantSupplierCacheModel.corporationCode;

		if ((corporationCode != null) && (corporationCode.length() == 0)) {
			vrProductionPlantSupplierCacheModel.corporationCode = null;
		}

		vrProductionPlantSupplierCacheModel.corporationName = getCorporationName();

		String corporationName = vrProductionPlantSupplierCacheModel.corporationName;

		if ((corporationName != null) && (corporationName.length() == 0)) {
			vrProductionPlantSupplierCacheModel.corporationName = null;
		}

		vrProductionPlantSupplierCacheModel.corporationAddress = getCorporationAddress();

		String corporationAddress = vrProductionPlantSupplierCacheModel.corporationAddress;

		if ((corporationAddress != null) && (corporationAddress.length() == 0)) {
			vrProductionPlantSupplierCacheModel.corporationAddress = null;
		}

		vrProductionPlantSupplierCacheModel.productionPlantCode = getProductionPlantCode();

		String productionPlantCode = vrProductionPlantSupplierCacheModel.productionPlantCode;

		if ((productionPlantCode != null) &&
				(productionPlantCode.length() == 0)) {
			vrProductionPlantSupplierCacheModel.productionPlantCode = null;
		}

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			vrProductionPlantSupplierCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			vrProductionPlantSupplierCacheModel.modifyDate = Long.MIN_VALUE;
		}

		Date syncDate = getSyncDate();

		if (syncDate != null) {
			vrProductionPlantSupplierCacheModel.syncDate = syncDate.getTime();
		}
		else {
			vrProductionPlantSupplierCacheModel.syncDate = Long.MIN_VALUE;
		}

		vrProductionPlantSupplierCacheModel.productionPlantId = getProductionPlantId();

		vrProductionPlantSupplierCacheModel.applicantProfileId = getApplicantProfileId();

		vrProductionPlantSupplierCacheModel.applicantCode = getApplicantCode();

		String applicantCode = vrProductionPlantSupplierCacheModel.applicantCode;

		if ((applicantCode != null) && (applicantCode.length() == 0)) {
			vrProductionPlantSupplierCacheModel.applicantCode = null;
		}

		vrProductionPlantSupplierCacheModel.supplierId = getSupplierId();

		vrProductionPlantSupplierCacheModel.supplierName = getSupplierName();

		String supplierName = vrProductionPlantSupplierCacheModel.supplierName;

		if ((supplierName != null) && (supplierName.length() == 0)) {
			vrProductionPlantSupplierCacheModel.supplierName = null;
		}

		vrProductionPlantSupplierCacheModel.supplierAddress = getSupplierAddress();

		String supplierAddress = vrProductionPlantSupplierCacheModel.supplierAddress;

		if ((supplierAddress != null) && (supplierAddress.length() == 0)) {
			vrProductionPlantSupplierCacheModel.supplierAddress = null;
		}

		return vrProductionPlantSupplierCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", mtCore=");
		sb.append(getMtCore());
		sb.append(", corporationCode=");
		sb.append(getCorporationCode());
		sb.append(", corporationName=");
		sb.append(getCorporationName());
		sb.append(", corporationAddress=");
		sb.append(getCorporationAddress());
		sb.append(", productionPlantCode=");
		sb.append(getProductionPlantCode());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append(", syncDate=");
		sb.append(getSyncDate());
		sb.append(", productionPlantId=");
		sb.append(getProductionPlantId());
		sb.append(", applicantProfileId=");
		sb.append(getApplicantProfileId());
		sb.append(", applicantCode=");
		sb.append(getApplicantCode());
		sb.append(", supplierId=");
		sb.append(getSupplierId());
		sb.append(", supplierName=");
		sb.append(getSupplierName());
		sb.append(", supplierAddress=");
		sb.append(getSupplierAddress());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.fds.vr.business.model.VRProductionPlantSupplier");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mtCore</column-name><column-value><![CDATA[");
		sb.append(getMtCore());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporationCode</column-name><column-value><![CDATA[");
		sb.append(getCorporationCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporationName</column-name><column-value><![CDATA[");
		sb.append(getCorporationName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporationAddress</column-name><column-value><![CDATA[");
		sb.append(getCorporationAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantCode</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>syncDate</column-name><column-value><![CDATA[");
		sb.append(getSyncDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantId</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantProfileId</column-name><column-value><![CDATA[");
		sb.append(getApplicantProfileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantCode</column-name><column-value><![CDATA[");
		sb.append(getApplicantCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierId</column-name><column-value><![CDATA[");
		sb.append(getSupplierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierName</column-name><column-value><![CDATA[");
		sb.append(getSupplierName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierAddress</column-name><column-value><![CDATA[");
		sb.append(getSupplierAddress());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VRProductionPlantSupplier.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VRProductionPlantSupplier.class
		};
	private long _id;
	private long _mtCore;
	private String _corporationCode;
	private String _originalCorporationCode;
	private String _corporationName;
	private String _corporationAddress;
	private String _productionPlantCode;
	private String _originalProductionPlantCode;
	private Date _modifyDate;
	private Date _syncDate;
	private long _productionPlantId;
	private long _applicantProfileId;
	private String _applicantCode;
	private long _supplierId;
	private String _supplierName;
	private String _supplierAddress;
	private long _columnBitmask;
	private VRProductionPlantSupplier _escapedModel;
}