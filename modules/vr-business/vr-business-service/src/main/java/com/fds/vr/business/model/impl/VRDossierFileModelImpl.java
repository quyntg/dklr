/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.vr.business.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.fds.vr.business.model.VRDossierFile;
import com.fds.vr.business.model.VRDossierFileModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VRDossierFile service. Represents a row in the &quot;opencps_dossierfile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VRDossierFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VRDossierFileImpl}.
 * </p>
 *
 * @author LamTV
 * @see VRDossierFileImpl
 * @see VRDossierFile
 * @see VRDossierFileModel
 * @generated
 */
@ProviderType
public class VRDossierFileModelImpl extends BaseModelImpl<VRDossierFile>
	implements VRDossierFileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vr dossier file model instance should use the {@link VRDossierFile} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_dossierfile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "dossierFileId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierId", Types.BIGINT },
			{ "referenceUid", Types.VARCHAR },
			{ "dossierTemplateNo", Types.VARCHAR },
			{ "dossierPartNo", Types.VARCHAR },
			{ "dossierPartType", Types.INTEGER },
			{ "fileTemplateNo", Types.VARCHAR },
			{ "displayName", Types.VARCHAR },
			{ "formData", Types.VARCHAR },
			{ "formDataDossierFile", Types.BIGINT },
			{ "fileEntryId", Types.BIGINT },
			{ "original", Types.BOOLEAN },
			{ "eForm", Types.BOOLEAN },
			{ "isNew", Types.BOOLEAN },
			{ "removed", Types.BOOLEAN },
			{ "signCheck", Types.INTEGER },
			{ "signInfo", Types.VARCHAR },
			{ "formScript", Types.VARCHAR },
			{ "formReport", Types.VARCHAR },
			{ "formSchema", Types.VARCHAR },
			{ "deliverableCode", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierFileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("referenceUid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierTemplateNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierPartNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierPartType", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("fileTemplateNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("displayName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formData", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formDataDossierFile", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("fileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("original", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("eForm", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("isNew", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("removed", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("signCheck", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("signInfo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formScript", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formReport", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("formSchema", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("deliverableCode", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_dossierfile (uuid_ VARCHAR(75) null,dossierFileId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,dossierId LONG,referenceUid VARCHAR(75) null,dossierTemplateNo VARCHAR(75) null,dossierPartNo VARCHAR(75) null,dossierPartType INTEGER,fileTemplateNo VARCHAR(75) null,displayName VARCHAR(75) null,formData VARCHAR(75) null,formDataDossierFile LONG,fileEntryId LONG,original BOOLEAN,eForm BOOLEAN,isNew BOOLEAN,removed BOOLEAN,signCheck INTEGER,signInfo VARCHAR(75) null,formScript VARCHAR(75) null,formReport VARCHAR(75) null,formSchema VARCHAR(75) null,deliverableCode VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_dossierfile";
	public static final String ORDER_BY_JPQL = " ORDER BY vrDossierFile.modifiedDate DESC, vrDossierFile.dossierPartNo ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_dossierfile.modifiedDate DESC, opencps_dossierfile.dossierPartNo ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fds.vr.business.model.VRDossierFile"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fds.vr.business.model.VRDossierFile"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.fds.vr.business.model.VRDossierFile"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long DELIVERABLECODE_COLUMN_BITMASK = 2L;
	public static final long DOSSIERFILEID_COLUMN_BITMASK = 4L;
	public static final long DOSSIERID_COLUMN_BITMASK = 8L;
	public static final long DOSSIERPARTNO_COLUMN_BITMASK = 16L;
	public static final long DOSSIERPARTTYPE_COLUMN_BITMASK = 32L;
	public static final long FILEENTRYID_COLUMN_BITMASK = 64L;
	public static final long FILETEMPLATENO_COLUMN_BITMASK = 128L;
	public static final long GROUPID_COLUMN_BITMASK = 256L;
	public static final long ISNEW_COLUMN_BITMASK = 512L;
	public static final long REFERENCEUID_COLUMN_BITMASK = 1024L;
	public static final long REMOVED_COLUMN_BITMASK = 2048L;
	public static final long UUID_COLUMN_BITMASK = 4096L;
	public static final long MODIFIEDDATE_COLUMN_BITMASK = 8192L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.fds.vr.service.util.ServiceProps.get(
				"lock.expiration.time.com.fds.vr.business.model.VRDossierFile"));

	public VRDossierFileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierFileId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierFileId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierFileId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VRDossierFile.class;
	}

	@Override
	public String getModelClassName() {
		return VRDossierFile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("dossierFileId", getDossierFileId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierId", getDossierId());
		attributes.put("referenceUid", getReferenceUid());
		attributes.put("dossierTemplateNo", getDossierTemplateNo());
		attributes.put("dossierPartNo", getDossierPartNo());
		attributes.put("dossierPartType", getDossierPartType());
		attributes.put("fileTemplateNo", getFileTemplateNo());
		attributes.put("displayName", getDisplayName());
		attributes.put("formData", getFormData());
		attributes.put("formDataDossierFile", getFormDataDossierFile());
		attributes.put("fileEntryId", getFileEntryId());
		attributes.put("original", getOriginal());
		attributes.put("eForm", getEForm());
		attributes.put("isNew", getIsNew());
		attributes.put("removed", getRemoved());
		attributes.put("signCheck", getSignCheck());
		attributes.put("signInfo", getSignInfo());
		attributes.put("formScript", getFormScript());
		attributes.put("formReport", getFormReport());
		attributes.put("formSchema", getFormSchema());
		attributes.put("deliverableCode", getDeliverableCode());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long dossierFileId = (Long)attributes.get("dossierFileId");

		if (dossierFileId != null) {
			setDossierFileId(dossierFileId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		String referenceUid = (String)attributes.get("referenceUid");

		if (referenceUid != null) {
			setReferenceUid(referenceUid);
		}

		String dossierTemplateNo = (String)attributes.get("dossierTemplateNo");

		if (dossierTemplateNo != null) {
			setDossierTemplateNo(dossierTemplateNo);
		}

		String dossierPartNo = (String)attributes.get("dossierPartNo");

		if (dossierPartNo != null) {
			setDossierPartNo(dossierPartNo);
		}

		Integer dossierPartType = (Integer)attributes.get("dossierPartType");

		if (dossierPartType != null) {
			setDossierPartType(dossierPartType);
		}

		String fileTemplateNo = (String)attributes.get("fileTemplateNo");

		if (fileTemplateNo != null) {
			setFileTemplateNo(fileTemplateNo);
		}

		String displayName = (String)attributes.get("displayName");

		if (displayName != null) {
			setDisplayName(displayName);
		}

		String formData = (String)attributes.get("formData");

		if (formData != null) {
			setFormData(formData);
		}

		Long formDataDossierFile = (Long)attributes.get("formDataDossierFile");

		if (formDataDossierFile != null) {
			setFormDataDossierFile(formDataDossierFile);
		}

		Long fileEntryId = (Long)attributes.get("fileEntryId");

		if (fileEntryId != null) {
			setFileEntryId(fileEntryId);
		}

		Boolean original = (Boolean)attributes.get("original");

		if (original != null) {
			setOriginal(original);
		}

		Boolean eForm = (Boolean)attributes.get("eForm");

		if (eForm != null) {
			setEForm(eForm);
		}

		Boolean isNew = (Boolean)attributes.get("isNew");

		if (isNew != null) {
			setIsNew(isNew);
		}

		Boolean removed = (Boolean)attributes.get("removed");

		if (removed != null) {
			setRemoved(removed);
		}

		Integer signCheck = (Integer)attributes.get("signCheck");

		if (signCheck != null) {
			setSignCheck(signCheck);
		}

		String signInfo = (String)attributes.get("signInfo");

		if (signInfo != null) {
			setSignInfo(signInfo);
		}

		String formScript = (String)attributes.get("formScript");

		if (formScript != null) {
			setFormScript(formScript);
		}

		String formReport = (String)attributes.get("formReport");

		if (formReport != null) {
			setFormReport(formReport);
		}

		String formSchema = (String)attributes.get("formSchema");

		if (formSchema != null) {
			setFormSchema(formSchema);
		}

		String deliverableCode = (String)attributes.get("deliverableCode");

		if (deliverableCode != null) {
			setDeliverableCode(deliverableCode);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getDossierFileId() {
		return _dossierFileId;
	}

	@Override
	public void setDossierFileId(long dossierFileId) {
		_columnBitmask |= DOSSIERFILEID_COLUMN_BITMASK;

		if (!_setOriginalDossierFileId) {
			_setOriginalDossierFileId = true;

			_originalDossierFileId = _dossierFileId;
		}

		_dossierFileId = dossierFileId;
	}

	public long getOriginalDossierFileId() {
		return _originalDossierFileId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_columnBitmask = -1L;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_columnBitmask |= DOSSIERID_COLUMN_BITMASK;

		if (!_setOriginalDossierId) {
			_setOriginalDossierId = true;

			_originalDossierId = _dossierId;
		}

		_dossierId = dossierId;
	}

	public long getOriginalDossierId() {
		return _originalDossierId;
	}

	@Override
	public String getReferenceUid() {
		if (_referenceUid == null) {
			return StringPool.BLANK;
		}
		else {
			return _referenceUid;
		}
	}

	@Override
	public void setReferenceUid(String referenceUid) {
		_columnBitmask |= REFERENCEUID_COLUMN_BITMASK;

		if (_originalReferenceUid == null) {
			_originalReferenceUid = _referenceUid;
		}

		_referenceUid = referenceUid;
	}

	public String getOriginalReferenceUid() {
		return GetterUtil.getString(_originalReferenceUid);
	}

	@Override
	public String getDossierTemplateNo() {
		if (_dossierTemplateNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierTemplateNo;
		}
	}

	@Override
	public void setDossierTemplateNo(String dossierTemplateNo) {
		_dossierTemplateNo = dossierTemplateNo;
	}

	@Override
	public String getDossierPartNo() {
		if (_dossierPartNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierPartNo;
		}
	}

	@Override
	public void setDossierPartNo(String dossierPartNo) {
		_columnBitmask = -1L;

		if (_originalDossierPartNo == null) {
			_originalDossierPartNo = _dossierPartNo;
		}

		_dossierPartNo = dossierPartNo;
	}

	public String getOriginalDossierPartNo() {
		return GetterUtil.getString(_originalDossierPartNo);
	}

	@Override
	public int getDossierPartType() {
		return _dossierPartType;
	}

	@Override
	public void setDossierPartType(int dossierPartType) {
		_columnBitmask |= DOSSIERPARTTYPE_COLUMN_BITMASK;

		if (!_setOriginalDossierPartType) {
			_setOriginalDossierPartType = true;

			_originalDossierPartType = _dossierPartType;
		}

		_dossierPartType = dossierPartType;
	}

	public int getOriginalDossierPartType() {
		return _originalDossierPartType;
	}

	@Override
	public String getFileTemplateNo() {
		if (_fileTemplateNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _fileTemplateNo;
		}
	}

	@Override
	public void setFileTemplateNo(String fileTemplateNo) {
		_columnBitmask |= FILETEMPLATENO_COLUMN_BITMASK;

		if (_originalFileTemplateNo == null) {
			_originalFileTemplateNo = _fileTemplateNo;
		}

		_fileTemplateNo = fileTemplateNo;
	}

	public String getOriginalFileTemplateNo() {
		return GetterUtil.getString(_originalFileTemplateNo);
	}

	@Override
	public String getDisplayName() {
		if (_displayName == null) {
			return StringPool.BLANK;
		}
		else {
			return _displayName;
		}
	}

	@Override
	public void setDisplayName(String displayName) {
		_displayName = displayName;
	}

	@Override
	public String getFormData() {
		if (_formData == null) {
			return StringPool.BLANK;
		}
		else {
			return _formData;
		}
	}

	@Override
	public void setFormData(String formData) {
		_formData = formData;
	}

	@Override
	public long getFormDataDossierFile() {
		return _formDataDossierFile;
	}

	@Override
	public void setFormDataDossierFile(long formDataDossierFile) {
		_formDataDossierFile = formDataDossierFile;
	}

	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_columnBitmask |= FILEENTRYID_COLUMN_BITMASK;

		if (!_setOriginalFileEntryId) {
			_setOriginalFileEntryId = true;

			_originalFileEntryId = _fileEntryId;
		}

		_fileEntryId = fileEntryId;
	}

	public long getOriginalFileEntryId() {
		return _originalFileEntryId;
	}

	@Override
	public boolean getOriginal() {
		return _original;
	}

	@Override
	public boolean isOriginal() {
		return _original;
	}

	@Override
	public void setOriginal(boolean original) {
		_original = original;
	}

	@Override
	public boolean getEForm() {
		return _eForm;
	}

	@Override
	public boolean isEForm() {
		return _eForm;
	}

	@Override
	public void setEForm(boolean eForm) {
		_eForm = eForm;
	}

	@Override
	public boolean getIsNew() {
		return _isNew;
	}

	@Override
	public boolean isIsNew() {
		return _isNew;
	}

	@Override
	public void setIsNew(boolean isNew) {
		_columnBitmask |= ISNEW_COLUMN_BITMASK;

		if (!_setOriginalIsNew) {
			_setOriginalIsNew = true;

			_originalIsNew = _isNew;
		}

		_isNew = isNew;
	}

	public boolean getOriginalIsNew() {
		return _originalIsNew;
	}

	@Override
	public boolean getRemoved() {
		return _removed;
	}

	@Override
	public boolean isRemoved() {
		return _removed;
	}

	@Override
	public void setRemoved(boolean removed) {
		_columnBitmask |= REMOVED_COLUMN_BITMASK;

		if (!_setOriginalRemoved) {
			_setOriginalRemoved = true;

			_originalRemoved = _removed;
		}

		_removed = removed;
	}

	public boolean getOriginalRemoved() {
		return _originalRemoved;
	}

	@Override
	public int getSignCheck() {
		return _signCheck;
	}

	@Override
	public void setSignCheck(int signCheck) {
		_signCheck = signCheck;
	}

	@Override
	public String getSignInfo() {
		if (_signInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _signInfo;
		}
	}

	@Override
	public void setSignInfo(String signInfo) {
		_signInfo = signInfo;
	}

	@Override
	public String getFormScript() {
		if (_formScript == null) {
			return StringPool.BLANK;
		}
		else {
			return _formScript;
		}
	}

	@Override
	public void setFormScript(String formScript) {
		_formScript = formScript;
	}

	@Override
	public String getFormReport() {
		if (_formReport == null) {
			return StringPool.BLANK;
		}
		else {
			return _formReport;
		}
	}

	@Override
	public void setFormReport(String formReport) {
		_formReport = formReport;
	}

	@Override
	public String getFormSchema() {
		if (_formSchema == null) {
			return StringPool.BLANK;
		}
		else {
			return _formSchema;
		}
	}

	@Override
	public void setFormSchema(String formSchema) {
		_formSchema = formSchema;
	}

	@Override
	public String getDeliverableCode() {
		if (_deliverableCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _deliverableCode;
		}
	}

	@Override
	public void setDeliverableCode(String deliverableCode) {
		_columnBitmask |= DELIVERABLECODE_COLUMN_BITMASK;

		if (_originalDeliverableCode == null) {
			_originalDeliverableCode = _deliverableCode;
		}

		_deliverableCode = deliverableCode;
	}

	public String getOriginalDeliverableCode() {
		return GetterUtil.getString(_originalDeliverableCode);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				VRDossierFile.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			VRDossierFile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VRDossierFile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VRDossierFile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VRDossierFileImpl vrDossierFileImpl = new VRDossierFileImpl();

		vrDossierFileImpl.setUuid(getUuid());
		vrDossierFileImpl.setDossierFileId(getDossierFileId());
		vrDossierFileImpl.setGroupId(getGroupId());
		vrDossierFileImpl.setCompanyId(getCompanyId());
		vrDossierFileImpl.setUserId(getUserId());
		vrDossierFileImpl.setUserName(getUserName());
		vrDossierFileImpl.setCreateDate(getCreateDate());
		vrDossierFileImpl.setModifiedDate(getModifiedDate());
		vrDossierFileImpl.setDossierId(getDossierId());
		vrDossierFileImpl.setReferenceUid(getReferenceUid());
		vrDossierFileImpl.setDossierTemplateNo(getDossierTemplateNo());
		vrDossierFileImpl.setDossierPartNo(getDossierPartNo());
		vrDossierFileImpl.setDossierPartType(getDossierPartType());
		vrDossierFileImpl.setFileTemplateNo(getFileTemplateNo());
		vrDossierFileImpl.setDisplayName(getDisplayName());
		vrDossierFileImpl.setFormData(getFormData());
		vrDossierFileImpl.setFormDataDossierFile(getFormDataDossierFile());
		vrDossierFileImpl.setFileEntryId(getFileEntryId());
		vrDossierFileImpl.setOriginal(getOriginal());
		vrDossierFileImpl.setEForm(getEForm());
		vrDossierFileImpl.setIsNew(getIsNew());
		vrDossierFileImpl.setRemoved(getRemoved());
		vrDossierFileImpl.setSignCheck(getSignCheck());
		vrDossierFileImpl.setSignInfo(getSignInfo());
		vrDossierFileImpl.setFormScript(getFormScript());
		vrDossierFileImpl.setFormReport(getFormReport());
		vrDossierFileImpl.setFormSchema(getFormSchema());
		vrDossierFileImpl.setDeliverableCode(getDeliverableCode());

		vrDossierFileImpl.resetOriginalValues();

		return vrDossierFileImpl;
	}

	@Override
	public int compareTo(VRDossierFile vrDossierFile) {
		int value = 0;

		value = DateUtil.compareTo(getModifiedDate(),
				vrDossierFile.getModifiedDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		value = getDossierPartNo().compareTo(vrDossierFile.getDossierPartNo());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VRDossierFile)) {
			return false;
		}

		VRDossierFile vrDossierFile = (VRDossierFile)obj;

		long primaryKey = vrDossierFile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VRDossierFileModelImpl vrDossierFileModelImpl = this;

		vrDossierFileModelImpl._originalUuid = vrDossierFileModelImpl._uuid;

		vrDossierFileModelImpl._originalDossierFileId = vrDossierFileModelImpl._dossierFileId;

		vrDossierFileModelImpl._setOriginalDossierFileId = false;

		vrDossierFileModelImpl._originalGroupId = vrDossierFileModelImpl._groupId;

		vrDossierFileModelImpl._setOriginalGroupId = false;

		vrDossierFileModelImpl._originalCompanyId = vrDossierFileModelImpl._companyId;

		vrDossierFileModelImpl._setOriginalCompanyId = false;

		vrDossierFileModelImpl._setModifiedDate = false;

		vrDossierFileModelImpl._originalDossierId = vrDossierFileModelImpl._dossierId;

		vrDossierFileModelImpl._setOriginalDossierId = false;

		vrDossierFileModelImpl._originalReferenceUid = vrDossierFileModelImpl._referenceUid;

		vrDossierFileModelImpl._originalDossierPartNo = vrDossierFileModelImpl._dossierPartNo;

		vrDossierFileModelImpl._originalDossierPartType = vrDossierFileModelImpl._dossierPartType;

		vrDossierFileModelImpl._setOriginalDossierPartType = false;

		vrDossierFileModelImpl._originalFileTemplateNo = vrDossierFileModelImpl._fileTemplateNo;

		vrDossierFileModelImpl._originalFileEntryId = vrDossierFileModelImpl._fileEntryId;

		vrDossierFileModelImpl._setOriginalFileEntryId = false;

		vrDossierFileModelImpl._originalIsNew = vrDossierFileModelImpl._isNew;

		vrDossierFileModelImpl._setOriginalIsNew = false;

		vrDossierFileModelImpl._originalRemoved = vrDossierFileModelImpl._removed;

		vrDossierFileModelImpl._setOriginalRemoved = false;

		vrDossierFileModelImpl._originalDeliverableCode = vrDossierFileModelImpl._deliverableCode;

		vrDossierFileModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VRDossierFile> toCacheModel() {
		VRDossierFileCacheModel vrDossierFileCacheModel = new VRDossierFileCacheModel();

		vrDossierFileCacheModel.uuid = getUuid();

		String uuid = vrDossierFileCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			vrDossierFileCacheModel.uuid = null;
		}

		vrDossierFileCacheModel.dossierFileId = getDossierFileId();

		vrDossierFileCacheModel.groupId = getGroupId();

		vrDossierFileCacheModel.companyId = getCompanyId();

		vrDossierFileCacheModel.userId = getUserId();

		vrDossierFileCacheModel.userName = getUserName();

		String userName = vrDossierFileCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			vrDossierFileCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			vrDossierFileCacheModel.createDate = createDate.getTime();
		}
		else {
			vrDossierFileCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			vrDossierFileCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			vrDossierFileCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		vrDossierFileCacheModel.dossierId = getDossierId();

		vrDossierFileCacheModel.referenceUid = getReferenceUid();

		String referenceUid = vrDossierFileCacheModel.referenceUid;

		if ((referenceUid != null) && (referenceUid.length() == 0)) {
			vrDossierFileCacheModel.referenceUid = null;
		}

		vrDossierFileCacheModel.dossierTemplateNo = getDossierTemplateNo();

		String dossierTemplateNo = vrDossierFileCacheModel.dossierTemplateNo;

		if ((dossierTemplateNo != null) && (dossierTemplateNo.length() == 0)) {
			vrDossierFileCacheModel.dossierTemplateNo = null;
		}

		vrDossierFileCacheModel.dossierPartNo = getDossierPartNo();

		String dossierPartNo = vrDossierFileCacheModel.dossierPartNo;

		if ((dossierPartNo != null) && (dossierPartNo.length() == 0)) {
			vrDossierFileCacheModel.dossierPartNo = null;
		}

		vrDossierFileCacheModel.dossierPartType = getDossierPartType();

		vrDossierFileCacheModel.fileTemplateNo = getFileTemplateNo();

		String fileTemplateNo = vrDossierFileCacheModel.fileTemplateNo;

		if ((fileTemplateNo != null) && (fileTemplateNo.length() == 0)) {
			vrDossierFileCacheModel.fileTemplateNo = null;
		}

		vrDossierFileCacheModel.displayName = getDisplayName();

		String displayName = vrDossierFileCacheModel.displayName;

		if ((displayName != null) && (displayName.length() == 0)) {
			vrDossierFileCacheModel.displayName = null;
		}

		vrDossierFileCacheModel.formData = getFormData();

		String formData = vrDossierFileCacheModel.formData;

		if ((formData != null) && (formData.length() == 0)) {
			vrDossierFileCacheModel.formData = null;
		}

		vrDossierFileCacheModel.formDataDossierFile = getFormDataDossierFile();

		vrDossierFileCacheModel.fileEntryId = getFileEntryId();

		vrDossierFileCacheModel.original = getOriginal();

		vrDossierFileCacheModel.eForm = getEForm();

		vrDossierFileCacheModel.isNew = getIsNew();

		vrDossierFileCacheModel.removed = getRemoved();

		vrDossierFileCacheModel.signCheck = getSignCheck();

		vrDossierFileCacheModel.signInfo = getSignInfo();

		String signInfo = vrDossierFileCacheModel.signInfo;

		if ((signInfo != null) && (signInfo.length() == 0)) {
			vrDossierFileCacheModel.signInfo = null;
		}

		vrDossierFileCacheModel.formScript = getFormScript();

		String formScript = vrDossierFileCacheModel.formScript;

		if ((formScript != null) && (formScript.length() == 0)) {
			vrDossierFileCacheModel.formScript = null;
		}

		vrDossierFileCacheModel.formReport = getFormReport();

		String formReport = vrDossierFileCacheModel.formReport;

		if ((formReport != null) && (formReport.length() == 0)) {
			vrDossierFileCacheModel.formReport = null;
		}

		vrDossierFileCacheModel.formSchema = getFormSchema();

		String formSchema = vrDossierFileCacheModel.formSchema;

		if ((formSchema != null) && (formSchema.length() == 0)) {
			vrDossierFileCacheModel.formSchema = null;
		}

		vrDossierFileCacheModel.deliverableCode = getDeliverableCode();

		String deliverableCode = vrDossierFileCacheModel.deliverableCode;

		if ((deliverableCode != null) && (deliverableCode.length() == 0)) {
			vrDossierFileCacheModel.deliverableCode = null;
		}

		return vrDossierFileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(57);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", dossierFileId=");
		sb.append(getDossierFileId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", referenceUid=");
		sb.append(getReferenceUid());
		sb.append(", dossierTemplateNo=");
		sb.append(getDossierTemplateNo());
		sb.append(", dossierPartNo=");
		sb.append(getDossierPartNo());
		sb.append(", dossierPartType=");
		sb.append(getDossierPartType());
		sb.append(", fileTemplateNo=");
		sb.append(getFileTemplateNo());
		sb.append(", displayName=");
		sb.append(getDisplayName());
		sb.append(", formData=");
		sb.append(getFormData());
		sb.append(", formDataDossierFile=");
		sb.append(getFormDataDossierFile());
		sb.append(", fileEntryId=");
		sb.append(getFileEntryId());
		sb.append(", original=");
		sb.append(getOriginal());
		sb.append(", eForm=");
		sb.append(getEForm());
		sb.append(", isNew=");
		sb.append(getIsNew());
		sb.append(", removed=");
		sb.append(getRemoved());
		sb.append(", signCheck=");
		sb.append(getSignCheck());
		sb.append(", signInfo=");
		sb.append(getSignInfo());
		sb.append(", formScript=");
		sb.append(getFormScript());
		sb.append(", formReport=");
		sb.append(getFormReport());
		sb.append(", formSchema=");
		sb.append(getFormSchema());
		sb.append(", deliverableCode=");
		sb.append(getDeliverableCode());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(88);

		sb.append("<model><model-name>");
		sb.append("com.fds.vr.business.model.VRDossierFile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierFileId</column-name><column-value><![CDATA[");
		sb.append(getDossierFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>referenceUid</column-name><column-value><![CDATA[");
		sb.append(getReferenceUid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierTemplateNo</column-name><column-value><![CDATA[");
		sb.append(getDossierTemplateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierPartNo</column-name><column-value><![CDATA[");
		sb.append(getDossierPartNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierPartType</column-name><column-value><![CDATA[");
		sb.append(getDossierPartType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileTemplateNo</column-name><column-value><![CDATA[");
		sb.append(getFileTemplateNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>displayName</column-name><column-value><![CDATA[");
		sb.append(getDisplayName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formData</column-name><column-value><![CDATA[");
		sb.append(getFormData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formDataDossierFile</column-name><column-value><![CDATA[");
		sb.append(getFormDataDossierFile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
		sb.append(getFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>original</column-name><column-value><![CDATA[");
		sb.append(getOriginal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eForm</column-name><column-value><![CDATA[");
		sb.append(getEForm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isNew</column-name><column-value><![CDATA[");
		sb.append(getIsNew());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>removed</column-name><column-value><![CDATA[");
		sb.append(getRemoved());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signCheck</column-name><column-value><![CDATA[");
		sb.append(getSignCheck());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>signInfo</column-name><column-value><![CDATA[");
		sb.append(getSignInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formScript</column-name><column-value><![CDATA[");
		sb.append(getFormScript());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formReport</column-name><column-value><![CDATA[");
		sb.append(getFormReport());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formSchema</column-name><column-value><![CDATA[");
		sb.append(getFormSchema());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deliverableCode</column-name><column-value><![CDATA[");
		sb.append(getDeliverableCode());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VRDossierFile.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VRDossierFile.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _dossierFileId;
	private long _originalDossierFileId;
	private boolean _setOriginalDossierFileId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _dossierId;
	private long _originalDossierId;
	private boolean _setOriginalDossierId;
	private String _referenceUid;
	private String _originalReferenceUid;
	private String _dossierTemplateNo;
	private String _dossierPartNo;
	private String _originalDossierPartNo;
	private int _dossierPartType;
	private int _originalDossierPartType;
	private boolean _setOriginalDossierPartType;
	private String _fileTemplateNo;
	private String _originalFileTemplateNo;
	private String _displayName;
	private String _formData;
	private long _formDataDossierFile;
	private long _fileEntryId;
	private long _originalFileEntryId;
	private boolean _setOriginalFileEntryId;
	private boolean _original;
	private boolean _eForm;
	private boolean _isNew;
	private boolean _originalIsNew;
	private boolean _setOriginalIsNew;
	private boolean _removed;
	private boolean _originalRemoved;
	private boolean _setOriginalRemoved;
	private int _signCheck;
	private String _signInfo;
	private String _formScript;
	private String _formReport;
	private String _formSchema;
	private String _deliverableCode;
	private String _originalDeliverableCode;
	private long _columnBitmask;
	private VRDossierFile _escapedModel;
}