/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.vr.business.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.fds.vr.business.model.VRCFGStandard;
import com.fds.vr.business.model.VRCFGStandardModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VRCFGStandard service. Represents a row in the &quot;vr_cfg_standard&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VRCFGStandardModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VRCFGStandardImpl}.
 * </p>
 *
 * @author LamTV
 * @see VRCFGStandardImpl
 * @see VRCFGStandard
 * @see VRCFGStandardModel
 * @generated
 */
@ProviderType
public class VRCFGStandardModelImpl extends BaseModelImpl<VRCFGStandard>
	implements VRCFGStandardModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vrcfg standard model instance should use the {@link VRCFGStandard} interface instead.
	 */
	public static final String TABLE_NAME = "vr_cfg_standard";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "vehicleClass", Types.VARCHAR },
			{ "vehicleType", Types.VARCHAR },
			{ "standardCode", Types.VARCHAR },
			{ "standardName", Types.VARCHAR },
			{ "standardDescription", Types.VARCHAR },
			{ "standardExpiredDate", Types.TIMESTAMP },
			{ "sequenceNo", Types.BIGINT },
			{ "standardType", Types.VARCHAR },
			{ "modifyDate", Types.TIMESTAMP },
			{ "syncDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("vehicleClass", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("vehicleType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("standardCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("standardName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("standardDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("standardExpiredDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("sequenceNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("standardType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifyDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("syncDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table vr_cfg_standard (id LONG not null primary key,vehicleClass VARCHAR(75) null,vehicleType VARCHAR(75) null,standardCode VARCHAR(75) null,standardName VARCHAR(75) null,standardDescription VARCHAR(75) null,standardExpiredDate DATE null,sequenceNo LONG,standardType VARCHAR(75) null,modifyDate DATE null,syncDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table vr_cfg_standard";
	public static final String ORDER_BY_JPQL = " ORDER BY vrcfgStandard.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vr_cfg_standard.id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fds.vr.business.model.VRCFGStandard"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fds.vr.business.model.VRCFGStandard"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.fds.vr.service.util.ServiceProps.get(
				"lock.expiration.time.com.fds.vr.business.model.VRCFGStandard"));

	public VRCFGStandardModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VRCFGStandard.class;
	}

	@Override
	public String getModelClassName() {
		return VRCFGStandard.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("vehicleClass", getVehicleClass());
		attributes.put("vehicleType", getVehicleType());
		attributes.put("standardCode", getStandardCode());
		attributes.put("standardName", getStandardName());
		attributes.put("standardDescription", getStandardDescription());
		attributes.put("standardExpiredDate", getStandardExpiredDate());
		attributes.put("sequenceNo", getSequenceNo());
		attributes.put("standardType", getStandardType());
		attributes.put("modifyDate", getModifyDate());
		attributes.put("syncDate", getSyncDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String vehicleClass = (String)attributes.get("vehicleClass");

		if (vehicleClass != null) {
			setVehicleClass(vehicleClass);
		}

		String vehicleType = (String)attributes.get("vehicleType");

		if (vehicleType != null) {
			setVehicleType(vehicleType);
		}

		String standardCode = (String)attributes.get("standardCode");

		if (standardCode != null) {
			setStandardCode(standardCode);
		}

		String standardName = (String)attributes.get("standardName");

		if (standardName != null) {
			setStandardName(standardName);
		}

		String standardDescription = (String)attributes.get(
				"standardDescription");

		if (standardDescription != null) {
			setStandardDescription(standardDescription);
		}

		Date standardExpiredDate = (Date)attributes.get("standardExpiredDate");

		if (standardExpiredDate != null) {
			setStandardExpiredDate(standardExpiredDate);
		}

		Long sequenceNo = (Long)attributes.get("sequenceNo");

		if (sequenceNo != null) {
			setSequenceNo(sequenceNo);
		}

		String standardType = (String)attributes.get("standardType");

		if (standardType != null) {
			setStandardType(standardType);
		}

		Date modifyDate = (Date)attributes.get("modifyDate");

		if (modifyDate != null) {
			setModifyDate(modifyDate);
		}

		Date syncDate = (Date)attributes.get("syncDate");

		if (syncDate != null) {
			setSyncDate(syncDate);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public String getVehicleClass() {
		if (_vehicleClass == null) {
			return StringPool.BLANK;
		}
		else {
			return _vehicleClass;
		}
	}

	@Override
	public void setVehicleClass(String vehicleClass) {
		_vehicleClass = vehicleClass;
	}

	@Override
	public String getVehicleType() {
		if (_vehicleType == null) {
			return StringPool.BLANK;
		}
		else {
			return _vehicleType;
		}
	}

	@Override
	public void setVehicleType(String vehicleType) {
		_vehicleType = vehicleType;
	}

	@Override
	public String getStandardCode() {
		if (_standardCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _standardCode;
		}
	}

	@Override
	public void setStandardCode(String standardCode) {
		_standardCode = standardCode;
	}

	@Override
	public String getStandardName() {
		if (_standardName == null) {
			return StringPool.BLANK;
		}
		else {
			return _standardName;
		}
	}

	@Override
	public void setStandardName(String standardName) {
		_standardName = standardName;
	}

	@Override
	public String getStandardDescription() {
		if (_standardDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _standardDescription;
		}
	}

	@Override
	public void setStandardDescription(String standardDescription) {
		_standardDescription = standardDescription;
	}

	@Override
	public Date getStandardExpiredDate() {
		return _standardExpiredDate;
	}

	@Override
	public void setStandardExpiredDate(Date standardExpiredDate) {
		_standardExpiredDate = standardExpiredDate;
	}

	@Override
	public long getSequenceNo() {
		return _sequenceNo;
	}

	@Override
	public void setSequenceNo(long sequenceNo) {
		_sequenceNo = sequenceNo;
	}

	@Override
	public String getStandardType() {
		if (_standardType == null) {
			return StringPool.BLANK;
		}
		else {
			return _standardType;
		}
	}

	@Override
	public void setStandardType(String standardType) {
		_standardType = standardType;
	}

	@Override
	public Date getModifyDate() {
		return _modifyDate;
	}

	@Override
	public void setModifyDate(Date modifyDate) {
		_modifyDate = modifyDate;
	}

	@Override
	public Date getSyncDate() {
		return _syncDate;
	}

	@Override
	public void setSyncDate(Date syncDate) {
		_syncDate = syncDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VRCFGStandard.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VRCFGStandard toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VRCFGStandard)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VRCFGStandardImpl vrcfgStandardImpl = new VRCFGStandardImpl();

		vrcfgStandardImpl.setId(getId());
		vrcfgStandardImpl.setVehicleClass(getVehicleClass());
		vrcfgStandardImpl.setVehicleType(getVehicleType());
		vrcfgStandardImpl.setStandardCode(getStandardCode());
		vrcfgStandardImpl.setStandardName(getStandardName());
		vrcfgStandardImpl.setStandardDescription(getStandardDescription());
		vrcfgStandardImpl.setStandardExpiredDate(getStandardExpiredDate());
		vrcfgStandardImpl.setSequenceNo(getSequenceNo());
		vrcfgStandardImpl.setStandardType(getStandardType());
		vrcfgStandardImpl.setModifyDate(getModifyDate());
		vrcfgStandardImpl.setSyncDate(getSyncDate());

		vrcfgStandardImpl.resetOriginalValues();

		return vrcfgStandardImpl;
	}

	@Override
	public int compareTo(VRCFGStandard vrcfgStandard) {
		long primaryKey = vrcfgStandard.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VRCFGStandard)) {
			return false;
		}

		VRCFGStandard vrcfgStandard = (VRCFGStandard)obj;

		long primaryKey = vrcfgStandard.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<VRCFGStandard> toCacheModel() {
		VRCFGStandardCacheModel vrcfgStandardCacheModel = new VRCFGStandardCacheModel();

		vrcfgStandardCacheModel.id = getId();

		vrcfgStandardCacheModel.vehicleClass = getVehicleClass();

		String vehicleClass = vrcfgStandardCacheModel.vehicleClass;

		if ((vehicleClass != null) && (vehicleClass.length() == 0)) {
			vrcfgStandardCacheModel.vehicleClass = null;
		}

		vrcfgStandardCacheModel.vehicleType = getVehicleType();

		String vehicleType = vrcfgStandardCacheModel.vehicleType;

		if ((vehicleType != null) && (vehicleType.length() == 0)) {
			vrcfgStandardCacheModel.vehicleType = null;
		}

		vrcfgStandardCacheModel.standardCode = getStandardCode();

		String standardCode = vrcfgStandardCacheModel.standardCode;

		if ((standardCode != null) && (standardCode.length() == 0)) {
			vrcfgStandardCacheModel.standardCode = null;
		}

		vrcfgStandardCacheModel.standardName = getStandardName();

		String standardName = vrcfgStandardCacheModel.standardName;

		if ((standardName != null) && (standardName.length() == 0)) {
			vrcfgStandardCacheModel.standardName = null;
		}

		vrcfgStandardCacheModel.standardDescription = getStandardDescription();

		String standardDescription = vrcfgStandardCacheModel.standardDescription;

		if ((standardDescription != null) &&
				(standardDescription.length() == 0)) {
			vrcfgStandardCacheModel.standardDescription = null;
		}

		Date standardExpiredDate = getStandardExpiredDate();

		if (standardExpiredDate != null) {
			vrcfgStandardCacheModel.standardExpiredDate = standardExpiredDate.getTime();
		}
		else {
			vrcfgStandardCacheModel.standardExpiredDate = Long.MIN_VALUE;
		}

		vrcfgStandardCacheModel.sequenceNo = getSequenceNo();

		vrcfgStandardCacheModel.standardType = getStandardType();

		String standardType = vrcfgStandardCacheModel.standardType;

		if ((standardType != null) && (standardType.length() == 0)) {
			vrcfgStandardCacheModel.standardType = null;
		}

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			vrcfgStandardCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			vrcfgStandardCacheModel.modifyDate = Long.MIN_VALUE;
		}

		Date syncDate = getSyncDate();

		if (syncDate != null) {
			vrcfgStandardCacheModel.syncDate = syncDate.getTime();
		}
		else {
			vrcfgStandardCacheModel.syncDate = Long.MIN_VALUE;
		}

		return vrcfgStandardCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", vehicleClass=");
		sb.append(getVehicleClass());
		sb.append(", vehicleType=");
		sb.append(getVehicleType());
		sb.append(", standardCode=");
		sb.append(getStandardCode());
		sb.append(", standardName=");
		sb.append(getStandardName());
		sb.append(", standardDescription=");
		sb.append(getStandardDescription());
		sb.append(", standardExpiredDate=");
		sb.append(getStandardExpiredDate());
		sb.append(", sequenceNo=");
		sb.append(getSequenceNo());
		sb.append(", standardType=");
		sb.append(getStandardType());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append(", syncDate=");
		sb.append(getSyncDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.fds.vr.business.model.VRCFGStandard");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vehicleClass</column-name><column-value><![CDATA[");
		sb.append(getVehicleClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vehicleType</column-name><column-value><![CDATA[");
		sb.append(getVehicleType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>standardCode</column-name><column-value><![CDATA[");
		sb.append(getStandardCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>standardName</column-name><column-value><![CDATA[");
		sb.append(getStandardName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>standardDescription</column-name><column-value><![CDATA[");
		sb.append(getStandardDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>standardExpiredDate</column-name><column-value><![CDATA[");
		sb.append(getStandardExpiredDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sequenceNo</column-name><column-value><![CDATA[");
		sb.append(getSequenceNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>standardType</column-name><column-value><![CDATA[");
		sb.append(getStandardType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>syncDate</column-name><column-value><![CDATA[");
		sb.append(getSyncDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VRCFGStandard.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VRCFGStandard.class
		};
	private long _id;
	private String _vehicleClass;
	private String _vehicleType;
	private String _standardCode;
	private String _standardName;
	private String _standardDescription;
	private Date _standardExpiredDate;
	private long _sequenceNo;
	private String _standardType;
	private Date _modifyDate;
	private Date _syncDate;
	private VRCFGStandard _escapedModel;
}