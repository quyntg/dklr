/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.vr.business.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.fds.vr.business.model.VRProductionPlant;
import com.fds.vr.business.model.VRProductionPlantModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VRProductionPlant service. Represents a row in the &quot;vr_productionplant&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link VRProductionPlantModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VRProductionPlantImpl}.
 * </p>
 *
 * @author LamTV
 * @see VRProductionPlantImpl
 * @see VRProductionPlant
 * @see VRProductionPlantModel
 * @generated
 */
@ProviderType
public class VRProductionPlantModelImpl extends BaseModelImpl<VRProductionPlant>
	implements VRProductionPlantModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a vr production plant model instance should use the {@link VRProductionPlant} interface instead.
	 */
	public static final String TABLE_NAME = "vr_productionplant";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "mtCore", Types.BIGINT },
			{ "mappingMA_CTY", Types.VARCHAR },
			{ "mappingTEN_CTY", Types.VARCHAR },
			{ "mappingDIA_CHI_CTY", Types.VARCHAR },
			{ "mappingMA_XUONG_LR", Types.VARCHAR },
			{ "mappingTEN_XUONG_LR", Types.VARCHAR },
			{ "mappingDIA_CHI_XUONG_LR", Types.VARCHAR },
			{ "mappingNote", Types.VARCHAR },
			{ "mappingStatus", Types.VARCHAR },
			{ "productionPlantCode", Types.VARCHAR },
			{ "productionPlantName", Types.VARCHAR },
			{ "productionPlantAddress", Types.VARCHAR },
			{ "productionPlantRegion", Types.VARCHAR },
			{ "productionPlantRegionCode", Types.VARCHAR },
			{ "productionPlantStateCode", Types.VARCHAR },
			{ "productionPlantStateName", Types.VARCHAR },
			{ "productionPlantProvinceCode", Types.VARCHAR },
			{ "productionPlantProvinceName", Types.VARCHAR },
			{ "productionPlantDistrictCode", Types.VARCHAR },
			{ "productionPlantDistrictName", Types.VARCHAR },
			{ "productionPlantWardCode", Types.VARCHAR },
			{ "productionPlantWardName", Types.VARCHAR },
			{ "productionPlantEmail", Types.VARCHAR },
			{ "productionPlantPhone", Types.VARCHAR },
			{ "productionPlantFax", Types.VARCHAR },
			{ "productionPlantWebsite", Types.VARCHAR },
			{ "productionPlantRepresentativePhone", Types.VARCHAR },
			{ "productionPlantRepresentative", Types.VARCHAR },
			{ "productionPlantRepresentativeTitle", Types.VARCHAR },
			{ "productionPlantContactName", Types.VARCHAR },
			{ "productionPlantContactEmail", Types.VARCHAR },
			{ "productionPlantContactPhone", Types.VARCHAR },
			{ "productionPlantType", Types.VARCHAR },
			{ "productionPlantStatus", Types.VARCHAR },
			{ "productionManufacture", Types.VARCHAR },
			{ "productionMaintainer", Types.VARCHAR },
			{ "productionPlantIdentityNo", Types.VARCHAR },
			{ "productionPlantIdentityType", Types.VARCHAR },
			{ "productionPlantIdentityDescription", Types.VARCHAR },
			{ "productionPlantIdentityFileEntryId", Types.BIGINT },
			{ "productionPlantEmployeesNote", Types.VARCHAR },
			{ "productionPlantEquipmentsNote", Types.VARCHAR },
			{ "productionPlantProdEquipmentsNote", Types.VARCHAR },
			{ "productionIdentityFileName", Types.VARCHAR },
			{ "productionIdentityFileEntryId", Types.BIGINT },
			{ "applicantCode", Types.VARCHAR },
			{ "supplierName", Types.VARCHAR },
			{ "supplierAddress", Types.VARCHAR },
			{ "corporationCode", Types.VARCHAR },
			{ "corporationName", Types.VARCHAR },
			{ "corporationAddress", Types.VARCHAR },
			{ "productionPlantMetadata", Types.VARCHAR },
			{ "registrationId", Types.BIGINT },
			{ "registrationFormId", Types.BIGINT },
			{ "applicantProfileId", Types.BIGINT },
			{ "supplierId", Types.BIGINT },
			{ "modifyDate", Types.TIMESTAMP },
			{ "syncDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("mtCore", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("mappingMA_CTY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mappingTEN_CTY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mappingDIA_CHI_CTY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mappingMA_XUONG_LR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mappingTEN_XUONG_LR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mappingDIA_CHI_XUONG_LR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mappingNote", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mappingStatus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantRegion", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantRegionCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantStateCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantStateName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantProvinceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantProvinceName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantDistrictCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantDistrictName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantWardCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantWardName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantPhone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantFax", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantWebsite", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantRepresentativePhone",
			Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantRepresentative", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantRepresentativeTitle",
			Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantContactName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantContactEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantContactPhone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantStatus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionManufacture", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionMaintainer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantIdentityNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantIdentityType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantIdentityDescription",
			Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantIdentityFileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("productionPlantEmployeesNote", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantEquipmentsNote", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantProdEquipmentsNote", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionIdentityFileName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionIdentityFileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("applicantCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("supplierName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("supplierAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("corporationCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("corporationName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("corporationAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productionPlantMetadata", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("registrationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("registrationFormId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("applicantProfileId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("supplierId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifyDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("syncDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table vr_productionplant (id LONG not null primary key,mtCore LONG,mappingMA_CTY VARCHAR(75) null,mappingTEN_CTY VARCHAR(75) null,mappingDIA_CHI_CTY VARCHAR(75) null,mappingMA_XUONG_LR VARCHAR(75) null,mappingTEN_XUONG_LR VARCHAR(75) null,mappingDIA_CHI_XUONG_LR VARCHAR(75) null,mappingNote VARCHAR(75) null,mappingStatus VARCHAR(75) null,productionPlantCode VARCHAR(75) null,productionPlantName VARCHAR(75) null,productionPlantAddress VARCHAR(75) null,productionPlantRegion VARCHAR(75) null,productionPlantRegionCode VARCHAR(75) null,productionPlantStateCode VARCHAR(75) null,productionPlantStateName VARCHAR(75) null,productionPlantProvinceCode VARCHAR(75) null,productionPlantProvinceName VARCHAR(75) null,productionPlantDistrictCode VARCHAR(75) null,productionPlantDistrictName VARCHAR(75) null,productionPlantWardCode VARCHAR(75) null,productionPlantWardName VARCHAR(75) null,productionPlantEmail VARCHAR(75) null,productionPlantPhone VARCHAR(75) null,productionPlantFax VARCHAR(75) null,productionPlantWebsite VARCHAR(75) null,productionPlantRepresentativePhone VARCHAR(75) null,productionPlantRepresentative VARCHAR(75) null,productionPlantRepresentativeTitle VARCHAR(75) null,productionPlantContactName VARCHAR(75) null,productionPlantContactEmail VARCHAR(75) null,productionPlantContactPhone VARCHAR(75) null,productionPlantType VARCHAR(75) null,productionPlantStatus VARCHAR(75) null,productionManufacture VARCHAR(75) null,productionMaintainer VARCHAR(75) null,productionPlantIdentityNo VARCHAR(75) null,productionPlantIdentityType VARCHAR(75) null,productionPlantIdentityDescription VARCHAR(75) null,productionPlantIdentityFileEntryId LONG,productionPlantEmployeesNote VARCHAR(75) null,productionPlantEquipmentsNote VARCHAR(75) null,productionPlantProdEquipmentsNote VARCHAR(75) null,productionIdentityFileName VARCHAR(75) null,productionIdentityFileEntryId LONG,applicantCode VARCHAR(75) null,supplierName VARCHAR(75) null,supplierAddress VARCHAR(75) null,corporationCode VARCHAR(75) null,corporationName VARCHAR(75) null,corporationAddress VARCHAR(75) null,productionPlantMetadata VARCHAR(75) null,registrationId LONG,registrationFormId LONG,applicantProfileId LONG,supplierId LONG,modifyDate DATE null,syncDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table vr_productionplant";
	public static final String ORDER_BY_JPQL = " ORDER BY vrProductionPlant.modifyDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY vr_productionplant.modifyDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.fds.vr.business.model.VRProductionPlant"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.fds.vr.business.model.VRProductionPlant"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.fds.vr.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.fds.vr.business.model.VRProductionPlant"),
			true);
	public static final long APPLICANTCODE_COLUMN_BITMASK = 1L;
	public static final long APPLICANTPROFILEID_COLUMN_BITMASK = 2L;
	public static final long MAPPINGMA_CTY_COLUMN_BITMASK = 4L;
	public static final long MAPPINGMA_XUONG_LR_COLUMN_BITMASK = 8L;
	public static final long MAPPINGSTATUS_COLUMN_BITMASK = 16L;
	public static final long MTCORE_COLUMN_BITMASK = 32L;
	public static final long PRODUCTIONPLANTADDRESS_COLUMN_BITMASK = 64L;
	public static final long PRODUCTIONPLANTCODE_COLUMN_BITMASK = 128L;
	public static final long PRODUCTIONPLANTNAME_COLUMN_BITMASK = 256L;
	public static final long PRODUCTIONPLANTREPRESENTATIVE_COLUMN_BITMASK = 512L;
	public static final long PRODUCTIONPLANTSTATUS_COLUMN_BITMASK = 1024L;
	public static final long PRODUCTIONPLANTTYPE_COLUMN_BITMASK = 2048L;
	public static final long REGISTRATIONFORMID_COLUMN_BITMASK = 4096L;
	public static final long REGISTRATIONID_COLUMN_BITMASK = 8192L;
	public static final long MODIFYDATE_COLUMN_BITMASK = 16384L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.fds.vr.service.util.ServiceProps.get(
				"lock.expiration.time.com.fds.vr.business.model.VRProductionPlant"));

	public VRProductionPlantModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VRProductionPlant.class;
	}

	@Override
	public String getModelClassName() {
		return VRProductionPlant.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("mtCore", getMtCore());
		attributes.put("mappingMA_CTY", getMappingMA_CTY());
		attributes.put("mappingTEN_CTY", getMappingTEN_CTY());
		attributes.put("mappingDIA_CHI_CTY", getMappingDIA_CHI_CTY());
		attributes.put("mappingMA_XUONG_LR", getMappingMA_XUONG_LR());
		attributes.put("mappingTEN_XUONG_LR", getMappingTEN_XUONG_LR());
		attributes.put("mappingDIA_CHI_XUONG_LR", getMappingDIA_CHI_XUONG_LR());
		attributes.put("mappingNote", getMappingNote());
		attributes.put("mappingStatus", getMappingStatus());
		attributes.put("productionPlantCode", getProductionPlantCode());
		attributes.put("productionPlantName", getProductionPlantName());
		attributes.put("productionPlantAddress", getProductionPlantAddress());
		attributes.put("productionPlantRegion", getProductionPlantRegion());
		attributes.put("productionPlantRegionCode",
			getProductionPlantRegionCode());
		attributes.put("productionPlantStateCode", getProductionPlantStateCode());
		attributes.put("productionPlantStateName", getProductionPlantStateName());
		attributes.put("productionPlantProvinceCode",
			getProductionPlantProvinceCode());
		attributes.put("productionPlantProvinceName",
			getProductionPlantProvinceName());
		attributes.put("productionPlantDistrictCode",
			getProductionPlantDistrictCode());
		attributes.put("productionPlantDistrictName",
			getProductionPlantDistrictName());
		attributes.put("productionPlantWardCode", getProductionPlantWardCode());
		attributes.put("productionPlantWardName", getProductionPlantWardName());
		attributes.put("productionPlantEmail", getProductionPlantEmail());
		attributes.put("productionPlantPhone", getProductionPlantPhone());
		attributes.put("productionPlantFax", getProductionPlantFax());
		attributes.put("productionPlantWebsite", getProductionPlantWebsite());
		attributes.put("productionPlantRepresentativePhone",
			getProductionPlantRepresentativePhone());
		attributes.put("productionPlantRepresentative",
			getProductionPlantRepresentative());
		attributes.put("productionPlantRepresentativeTitle",
			getProductionPlantRepresentativeTitle());
		attributes.put("productionPlantContactName",
			getProductionPlantContactName());
		attributes.put("productionPlantContactEmail",
			getProductionPlantContactEmail());
		attributes.put("productionPlantContactPhone",
			getProductionPlantContactPhone());
		attributes.put("productionPlantType", getProductionPlantType());
		attributes.put("productionPlantStatus", getProductionPlantStatus());
		attributes.put("productionManufacture", getProductionManufacture());
		attributes.put("productionMaintainer", getProductionMaintainer());
		attributes.put("productionPlantIdentityNo",
			getProductionPlantIdentityNo());
		attributes.put("productionPlantIdentityType",
			getProductionPlantIdentityType());
		attributes.put("productionPlantIdentityDescription",
			getProductionPlantIdentityDescription());
		attributes.put("productionPlantIdentityFileEntryId",
			getProductionPlantIdentityFileEntryId());
		attributes.put("productionPlantEmployeesNote",
			getProductionPlantEmployeesNote());
		attributes.put("productionPlantEquipmentsNote",
			getProductionPlantEquipmentsNote());
		attributes.put("productionPlantProdEquipmentsNote",
			getProductionPlantProdEquipmentsNote());
		attributes.put("productionIdentityFileName",
			getProductionIdentityFileName());
		attributes.put("productionIdentityFileEntryId",
			getProductionIdentityFileEntryId());
		attributes.put("applicantCode", getApplicantCode());
		attributes.put("supplierName", getSupplierName());
		attributes.put("supplierAddress", getSupplierAddress());
		attributes.put("corporationCode", getCorporationCode());
		attributes.put("corporationName", getCorporationName());
		attributes.put("corporationAddress", getCorporationAddress());
		attributes.put("productionPlantMetadata", getProductionPlantMetadata());
		attributes.put("registrationId", getRegistrationId());
		attributes.put("registrationFormId", getRegistrationFormId());
		attributes.put("applicantProfileId", getApplicantProfileId());
		attributes.put("supplierId", getSupplierId());
		attributes.put("modifyDate", getModifyDate());
		attributes.put("syncDate", getSyncDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long mtCore = (Long)attributes.get("mtCore");

		if (mtCore != null) {
			setMtCore(mtCore);
		}

		String mappingMA_CTY = (String)attributes.get("mappingMA_CTY");

		if (mappingMA_CTY != null) {
			setMappingMA_CTY(mappingMA_CTY);
		}

		String mappingTEN_CTY = (String)attributes.get("mappingTEN_CTY");

		if (mappingTEN_CTY != null) {
			setMappingTEN_CTY(mappingTEN_CTY);
		}

		String mappingDIA_CHI_CTY = (String)attributes.get("mappingDIA_CHI_CTY");

		if (mappingDIA_CHI_CTY != null) {
			setMappingDIA_CHI_CTY(mappingDIA_CHI_CTY);
		}

		String mappingMA_XUONG_LR = (String)attributes.get("mappingMA_XUONG_LR");

		if (mappingMA_XUONG_LR != null) {
			setMappingMA_XUONG_LR(mappingMA_XUONG_LR);
		}

		String mappingTEN_XUONG_LR = (String)attributes.get(
				"mappingTEN_XUONG_LR");

		if (mappingTEN_XUONG_LR != null) {
			setMappingTEN_XUONG_LR(mappingTEN_XUONG_LR);
		}

		String mappingDIA_CHI_XUONG_LR = (String)attributes.get(
				"mappingDIA_CHI_XUONG_LR");

		if (mappingDIA_CHI_XUONG_LR != null) {
			setMappingDIA_CHI_XUONG_LR(mappingDIA_CHI_XUONG_LR);
		}

		String mappingNote = (String)attributes.get("mappingNote");

		if (mappingNote != null) {
			setMappingNote(mappingNote);
		}

		String mappingStatus = (String)attributes.get("mappingStatus");

		if (mappingStatus != null) {
			setMappingStatus(mappingStatus);
		}

		String productionPlantCode = (String)attributes.get(
				"productionPlantCode");

		if (productionPlantCode != null) {
			setProductionPlantCode(productionPlantCode);
		}

		String productionPlantName = (String)attributes.get(
				"productionPlantName");

		if (productionPlantName != null) {
			setProductionPlantName(productionPlantName);
		}

		String productionPlantAddress = (String)attributes.get(
				"productionPlantAddress");

		if (productionPlantAddress != null) {
			setProductionPlantAddress(productionPlantAddress);
		}

		String productionPlantRegion = (String)attributes.get(
				"productionPlantRegion");

		if (productionPlantRegion != null) {
			setProductionPlantRegion(productionPlantRegion);
		}

		String productionPlantRegionCode = (String)attributes.get(
				"productionPlantRegionCode");

		if (productionPlantRegionCode != null) {
			setProductionPlantRegionCode(productionPlantRegionCode);
		}

		String productionPlantStateCode = (String)attributes.get(
				"productionPlantStateCode");

		if (productionPlantStateCode != null) {
			setProductionPlantStateCode(productionPlantStateCode);
		}

		String productionPlantStateName = (String)attributes.get(
				"productionPlantStateName");

		if (productionPlantStateName != null) {
			setProductionPlantStateName(productionPlantStateName);
		}

		String productionPlantProvinceCode = (String)attributes.get(
				"productionPlantProvinceCode");

		if (productionPlantProvinceCode != null) {
			setProductionPlantProvinceCode(productionPlantProvinceCode);
		}

		String productionPlantProvinceName = (String)attributes.get(
				"productionPlantProvinceName");

		if (productionPlantProvinceName != null) {
			setProductionPlantProvinceName(productionPlantProvinceName);
		}

		String productionPlantDistrictCode = (String)attributes.get(
				"productionPlantDistrictCode");

		if (productionPlantDistrictCode != null) {
			setProductionPlantDistrictCode(productionPlantDistrictCode);
		}

		String productionPlantDistrictName = (String)attributes.get(
				"productionPlantDistrictName");

		if (productionPlantDistrictName != null) {
			setProductionPlantDistrictName(productionPlantDistrictName);
		}

		String productionPlantWardCode = (String)attributes.get(
				"productionPlantWardCode");

		if (productionPlantWardCode != null) {
			setProductionPlantWardCode(productionPlantWardCode);
		}

		String productionPlantWardName = (String)attributes.get(
				"productionPlantWardName");

		if (productionPlantWardName != null) {
			setProductionPlantWardName(productionPlantWardName);
		}

		String productionPlantEmail = (String)attributes.get(
				"productionPlantEmail");

		if (productionPlantEmail != null) {
			setProductionPlantEmail(productionPlantEmail);
		}

		String productionPlantPhone = (String)attributes.get(
				"productionPlantPhone");

		if (productionPlantPhone != null) {
			setProductionPlantPhone(productionPlantPhone);
		}

		String productionPlantFax = (String)attributes.get("productionPlantFax");

		if (productionPlantFax != null) {
			setProductionPlantFax(productionPlantFax);
		}

		String productionPlantWebsite = (String)attributes.get(
				"productionPlantWebsite");

		if (productionPlantWebsite != null) {
			setProductionPlantWebsite(productionPlantWebsite);
		}

		String productionPlantRepresentativePhone = (String)attributes.get(
				"productionPlantRepresentativePhone");

		if (productionPlantRepresentativePhone != null) {
			setProductionPlantRepresentativePhone(productionPlantRepresentativePhone);
		}

		String productionPlantRepresentative = (String)attributes.get(
				"productionPlantRepresentative");

		if (productionPlantRepresentative != null) {
			setProductionPlantRepresentative(productionPlantRepresentative);
		}

		String productionPlantRepresentativeTitle = (String)attributes.get(
				"productionPlantRepresentativeTitle");

		if (productionPlantRepresentativeTitle != null) {
			setProductionPlantRepresentativeTitle(productionPlantRepresentativeTitle);
		}

		String productionPlantContactName = (String)attributes.get(
				"productionPlantContactName");

		if (productionPlantContactName != null) {
			setProductionPlantContactName(productionPlantContactName);
		}

		String productionPlantContactEmail = (String)attributes.get(
				"productionPlantContactEmail");

		if (productionPlantContactEmail != null) {
			setProductionPlantContactEmail(productionPlantContactEmail);
		}

		String productionPlantContactPhone = (String)attributes.get(
				"productionPlantContactPhone");

		if (productionPlantContactPhone != null) {
			setProductionPlantContactPhone(productionPlantContactPhone);
		}

		String productionPlantType = (String)attributes.get(
				"productionPlantType");

		if (productionPlantType != null) {
			setProductionPlantType(productionPlantType);
		}

		String productionPlantStatus = (String)attributes.get(
				"productionPlantStatus");

		if (productionPlantStatus != null) {
			setProductionPlantStatus(productionPlantStatus);
		}

		String productionManufacture = (String)attributes.get(
				"productionManufacture");

		if (productionManufacture != null) {
			setProductionManufacture(productionManufacture);
		}

		String productionMaintainer = (String)attributes.get(
				"productionMaintainer");

		if (productionMaintainer != null) {
			setProductionMaintainer(productionMaintainer);
		}

		String productionPlantIdentityNo = (String)attributes.get(
				"productionPlantIdentityNo");

		if (productionPlantIdentityNo != null) {
			setProductionPlantIdentityNo(productionPlantIdentityNo);
		}

		String productionPlantIdentityType = (String)attributes.get(
				"productionPlantIdentityType");

		if (productionPlantIdentityType != null) {
			setProductionPlantIdentityType(productionPlantIdentityType);
		}

		String productionPlantIdentityDescription = (String)attributes.get(
				"productionPlantIdentityDescription");

		if (productionPlantIdentityDescription != null) {
			setProductionPlantIdentityDescription(productionPlantIdentityDescription);
		}

		Long productionPlantIdentityFileEntryId = (Long)attributes.get(
				"productionPlantIdentityFileEntryId");

		if (productionPlantIdentityFileEntryId != null) {
			setProductionPlantIdentityFileEntryId(productionPlantIdentityFileEntryId);
		}

		String productionPlantEmployeesNote = (String)attributes.get(
				"productionPlantEmployeesNote");

		if (productionPlantEmployeesNote != null) {
			setProductionPlantEmployeesNote(productionPlantEmployeesNote);
		}

		String productionPlantEquipmentsNote = (String)attributes.get(
				"productionPlantEquipmentsNote");

		if (productionPlantEquipmentsNote != null) {
			setProductionPlantEquipmentsNote(productionPlantEquipmentsNote);
		}

		String productionPlantProdEquipmentsNote = (String)attributes.get(
				"productionPlantProdEquipmentsNote");

		if (productionPlantProdEquipmentsNote != null) {
			setProductionPlantProdEquipmentsNote(productionPlantProdEquipmentsNote);
		}

		String productionIdentityFileName = (String)attributes.get(
				"productionIdentityFileName");

		if (productionIdentityFileName != null) {
			setProductionIdentityFileName(productionIdentityFileName);
		}

		Long productionIdentityFileEntryId = (Long)attributes.get(
				"productionIdentityFileEntryId");

		if (productionIdentityFileEntryId != null) {
			setProductionIdentityFileEntryId(productionIdentityFileEntryId);
		}

		String applicantCode = (String)attributes.get("applicantCode");

		if (applicantCode != null) {
			setApplicantCode(applicantCode);
		}

		String supplierName = (String)attributes.get("supplierName");

		if (supplierName != null) {
			setSupplierName(supplierName);
		}

		String supplierAddress = (String)attributes.get("supplierAddress");

		if (supplierAddress != null) {
			setSupplierAddress(supplierAddress);
		}

		String corporationCode = (String)attributes.get("corporationCode");

		if (corporationCode != null) {
			setCorporationCode(corporationCode);
		}

		String corporationName = (String)attributes.get("corporationName");

		if (corporationName != null) {
			setCorporationName(corporationName);
		}

		String corporationAddress = (String)attributes.get("corporationAddress");

		if (corporationAddress != null) {
			setCorporationAddress(corporationAddress);
		}

		String productionPlantMetadata = (String)attributes.get(
				"productionPlantMetadata");

		if (productionPlantMetadata != null) {
			setProductionPlantMetadata(productionPlantMetadata);
		}

		Long registrationId = (Long)attributes.get("registrationId");

		if (registrationId != null) {
			setRegistrationId(registrationId);
		}

		Long registrationFormId = (Long)attributes.get("registrationFormId");

		if (registrationFormId != null) {
			setRegistrationFormId(registrationFormId);
		}

		Long applicantProfileId = (Long)attributes.get("applicantProfileId");

		if (applicantProfileId != null) {
			setApplicantProfileId(applicantProfileId);
		}

		Long supplierId = (Long)attributes.get("supplierId");

		if (supplierId != null) {
			setSupplierId(supplierId);
		}

		Date modifyDate = (Date)attributes.get("modifyDate");

		if (modifyDate != null) {
			setModifyDate(modifyDate);
		}

		Date syncDate = (Date)attributes.get("syncDate");

		if (syncDate != null) {
			setSyncDate(syncDate);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getMtCore() {
		return _mtCore;
	}

	@Override
	public void setMtCore(long mtCore) {
		_columnBitmask |= MTCORE_COLUMN_BITMASK;

		if (!_setOriginalMtCore) {
			_setOriginalMtCore = true;

			_originalMtCore = _mtCore;
		}

		_mtCore = mtCore;
	}

	public long getOriginalMtCore() {
		return _originalMtCore;
	}

	@Override
	public String getMappingMA_CTY() {
		if (_mappingMA_CTY == null) {
			return StringPool.BLANK;
		}
		else {
			return _mappingMA_CTY;
		}
	}

	@Override
	public void setMappingMA_CTY(String mappingMA_CTY) {
		_columnBitmask |= MAPPINGMA_CTY_COLUMN_BITMASK;

		if (_originalMappingMA_CTY == null) {
			_originalMappingMA_CTY = _mappingMA_CTY;
		}

		_mappingMA_CTY = mappingMA_CTY;
	}

	public String getOriginalMappingMA_CTY() {
		return GetterUtil.getString(_originalMappingMA_CTY);
	}

	@Override
	public String getMappingTEN_CTY() {
		if (_mappingTEN_CTY == null) {
			return StringPool.BLANK;
		}
		else {
			return _mappingTEN_CTY;
		}
	}

	@Override
	public void setMappingTEN_CTY(String mappingTEN_CTY) {
		_mappingTEN_CTY = mappingTEN_CTY;
	}

	@Override
	public String getMappingDIA_CHI_CTY() {
		if (_mappingDIA_CHI_CTY == null) {
			return StringPool.BLANK;
		}
		else {
			return _mappingDIA_CHI_CTY;
		}
	}

	@Override
	public void setMappingDIA_CHI_CTY(String mappingDIA_CHI_CTY) {
		_mappingDIA_CHI_CTY = mappingDIA_CHI_CTY;
	}

	@Override
	public String getMappingMA_XUONG_LR() {
		if (_mappingMA_XUONG_LR == null) {
			return StringPool.BLANK;
		}
		else {
			return _mappingMA_XUONG_LR;
		}
	}

	@Override
	public void setMappingMA_XUONG_LR(String mappingMA_XUONG_LR) {
		_columnBitmask |= MAPPINGMA_XUONG_LR_COLUMN_BITMASK;

		if (_originalMappingMA_XUONG_LR == null) {
			_originalMappingMA_XUONG_LR = _mappingMA_XUONG_LR;
		}

		_mappingMA_XUONG_LR = mappingMA_XUONG_LR;
	}

	public String getOriginalMappingMA_XUONG_LR() {
		return GetterUtil.getString(_originalMappingMA_XUONG_LR);
	}

	@Override
	public String getMappingTEN_XUONG_LR() {
		if (_mappingTEN_XUONG_LR == null) {
			return StringPool.BLANK;
		}
		else {
			return _mappingTEN_XUONG_LR;
		}
	}

	@Override
	public void setMappingTEN_XUONG_LR(String mappingTEN_XUONG_LR) {
		_mappingTEN_XUONG_LR = mappingTEN_XUONG_LR;
	}

	@Override
	public String getMappingDIA_CHI_XUONG_LR() {
		if (_mappingDIA_CHI_XUONG_LR == null) {
			return StringPool.BLANK;
		}
		else {
			return _mappingDIA_CHI_XUONG_LR;
		}
	}

	@Override
	public void setMappingDIA_CHI_XUONG_LR(String mappingDIA_CHI_XUONG_LR) {
		_mappingDIA_CHI_XUONG_LR = mappingDIA_CHI_XUONG_LR;
	}

	@Override
	public String getMappingNote() {
		if (_mappingNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _mappingNote;
		}
	}

	@Override
	public void setMappingNote(String mappingNote) {
		_mappingNote = mappingNote;
	}

	@Override
	public String getMappingStatus() {
		if (_mappingStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _mappingStatus;
		}
	}

	@Override
	public void setMappingStatus(String mappingStatus) {
		_columnBitmask |= MAPPINGSTATUS_COLUMN_BITMASK;

		if (_originalMappingStatus == null) {
			_originalMappingStatus = _mappingStatus;
		}

		_mappingStatus = mappingStatus;
	}

	public String getOriginalMappingStatus() {
		return GetterUtil.getString(_originalMappingStatus);
	}

	@Override
	public String getProductionPlantCode() {
		if (_productionPlantCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantCode;
		}
	}

	@Override
	public void setProductionPlantCode(String productionPlantCode) {
		_columnBitmask |= PRODUCTIONPLANTCODE_COLUMN_BITMASK;

		if (_originalProductionPlantCode == null) {
			_originalProductionPlantCode = _productionPlantCode;
		}

		_productionPlantCode = productionPlantCode;
	}

	public String getOriginalProductionPlantCode() {
		return GetterUtil.getString(_originalProductionPlantCode);
	}

	@Override
	public String getProductionPlantName() {
		if (_productionPlantName == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantName;
		}
	}

	@Override
	public void setProductionPlantName(String productionPlantName) {
		_columnBitmask |= PRODUCTIONPLANTNAME_COLUMN_BITMASK;

		if (_originalProductionPlantName == null) {
			_originalProductionPlantName = _productionPlantName;
		}

		_productionPlantName = productionPlantName;
	}

	public String getOriginalProductionPlantName() {
		return GetterUtil.getString(_originalProductionPlantName);
	}

	@Override
	public String getProductionPlantAddress() {
		if (_productionPlantAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantAddress;
		}
	}

	@Override
	public void setProductionPlantAddress(String productionPlantAddress) {
		_columnBitmask |= PRODUCTIONPLANTADDRESS_COLUMN_BITMASK;

		if (_originalProductionPlantAddress == null) {
			_originalProductionPlantAddress = _productionPlantAddress;
		}

		_productionPlantAddress = productionPlantAddress;
	}

	public String getOriginalProductionPlantAddress() {
		return GetterUtil.getString(_originalProductionPlantAddress);
	}

	@Override
	public String getProductionPlantRegion() {
		if (_productionPlantRegion == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantRegion;
		}
	}

	@Override
	public void setProductionPlantRegion(String productionPlantRegion) {
		_productionPlantRegion = productionPlantRegion;
	}

	@Override
	public String getProductionPlantRegionCode() {
		if (_productionPlantRegionCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantRegionCode;
		}
	}

	@Override
	public void setProductionPlantRegionCode(String productionPlantRegionCode) {
		_productionPlantRegionCode = productionPlantRegionCode;
	}

	@Override
	public String getProductionPlantStateCode() {
		if (_productionPlantStateCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantStateCode;
		}
	}

	@Override
	public void setProductionPlantStateCode(String productionPlantStateCode) {
		_productionPlantStateCode = productionPlantStateCode;
	}

	@Override
	public String getProductionPlantStateName() {
		if (_productionPlantStateName == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantStateName;
		}
	}

	@Override
	public void setProductionPlantStateName(String productionPlantStateName) {
		_productionPlantStateName = productionPlantStateName;
	}

	@Override
	public String getProductionPlantProvinceCode() {
		if (_productionPlantProvinceCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantProvinceCode;
		}
	}

	@Override
	public void setProductionPlantProvinceCode(
		String productionPlantProvinceCode) {
		_productionPlantProvinceCode = productionPlantProvinceCode;
	}

	@Override
	public String getProductionPlantProvinceName() {
		if (_productionPlantProvinceName == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantProvinceName;
		}
	}

	@Override
	public void setProductionPlantProvinceName(
		String productionPlantProvinceName) {
		_productionPlantProvinceName = productionPlantProvinceName;
	}

	@Override
	public String getProductionPlantDistrictCode() {
		if (_productionPlantDistrictCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantDistrictCode;
		}
	}

	@Override
	public void setProductionPlantDistrictCode(
		String productionPlantDistrictCode) {
		_productionPlantDistrictCode = productionPlantDistrictCode;
	}

	@Override
	public String getProductionPlantDistrictName() {
		if (_productionPlantDistrictName == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantDistrictName;
		}
	}

	@Override
	public void setProductionPlantDistrictName(
		String productionPlantDistrictName) {
		_productionPlantDistrictName = productionPlantDistrictName;
	}

	@Override
	public String getProductionPlantWardCode() {
		if (_productionPlantWardCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantWardCode;
		}
	}

	@Override
	public void setProductionPlantWardCode(String productionPlantWardCode) {
		_productionPlantWardCode = productionPlantWardCode;
	}

	@Override
	public String getProductionPlantWardName() {
		if (_productionPlantWardName == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantWardName;
		}
	}

	@Override
	public void setProductionPlantWardName(String productionPlantWardName) {
		_productionPlantWardName = productionPlantWardName;
	}

	@Override
	public String getProductionPlantEmail() {
		if (_productionPlantEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantEmail;
		}
	}

	@Override
	public void setProductionPlantEmail(String productionPlantEmail) {
		_productionPlantEmail = productionPlantEmail;
	}

	@Override
	public String getProductionPlantPhone() {
		if (_productionPlantPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantPhone;
		}
	}

	@Override
	public void setProductionPlantPhone(String productionPlantPhone) {
		_productionPlantPhone = productionPlantPhone;
	}

	@Override
	public String getProductionPlantFax() {
		if (_productionPlantFax == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantFax;
		}
	}

	@Override
	public void setProductionPlantFax(String productionPlantFax) {
		_productionPlantFax = productionPlantFax;
	}

	@Override
	public String getProductionPlantWebsite() {
		if (_productionPlantWebsite == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantWebsite;
		}
	}

	@Override
	public void setProductionPlantWebsite(String productionPlantWebsite) {
		_productionPlantWebsite = productionPlantWebsite;
	}

	@Override
	public String getProductionPlantRepresentativePhone() {
		if (_productionPlantRepresentativePhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantRepresentativePhone;
		}
	}

	@Override
	public void setProductionPlantRepresentativePhone(
		String productionPlantRepresentativePhone) {
		_productionPlantRepresentativePhone = productionPlantRepresentativePhone;
	}

	@Override
	public String getProductionPlantRepresentative() {
		if (_productionPlantRepresentative == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantRepresentative;
		}
	}

	@Override
	public void setProductionPlantRepresentative(
		String productionPlantRepresentative) {
		_columnBitmask |= PRODUCTIONPLANTREPRESENTATIVE_COLUMN_BITMASK;

		if (_originalProductionPlantRepresentative == null) {
			_originalProductionPlantRepresentative = _productionPlantRepresentative;
		}

		_productionPlantRepresentative = productionPlantRepresentative;
	}

	public String getOriginalProductionPlantRepresentative() {
		return GetterUtil.getString(_originalProductionPlantRepresentative);
	}

	@Override
	public String getProductionPlantRepresentativeTitle() {
		if (_productionPlantRepresentativeTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantRepresentativeTitle;
		}
	}

	@Override
	public void setProductionPlantRepresentativeTitle(
		String productionPlantRepresentativeTitle) {
		_productionPlantRepresentativeTitle = productionPlantRepresentativeTitle;
	}

	@Override
	public String getProductionPlantContactName() {
		if (_productionPlantContactName == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantContactName;
		}
	}

	@Override
	public void setProductionPlantContactName(String productionPlantContactName) {
		_productionPlantContactName = productionPlantContactName;
	}

	@Override
	public String getProductionPlantContactEmail() {
		if (_productionPlantContactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantContactEmail;
		}
	}

	@Override
	public void setProductionPlantContactEmail(
		String productionPlantContactEmail) {
		_productionPlantContactEmail = productionPlantContactEmail;
	}

	@Override
	public String getProductionPlantContactPhone() {
		if (_productionPlantContactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantContactPhone;
		}
	}

	@Override
	public void setProductionPlantContactPhone(
		String productionPlantContactPhone) {
		_productionPlantContactPhone = productionPlantContactPhone;
	}

	@Override
	public String getProductionPlantType() {
		if (_productionPlantType == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantType;
		}
	}

	@Override
	public void setProductionPlantType(String productionPlantType) {
		_columnBitmask |= PRODUCTIONPLANTTYPE_COLUMN_BITMASK;

		if (_originalProductionPlantType == null) {
			_originalProductionPlantType = _productionPlantType;
		}

		_productionPlantType = productionPlantType;
	}

	public String getOriginalProductionPlantType() {
		return GetterUtil.getString(_originalProductionPlantType);
	}

	@Override
	public String getProductionPlantStatus() {
		if (_productionPlantStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantStatus;
		}
	}

	@Override
	public void setProductionPlantStatus(String productionPlantStatus) {
		_columnBitmask |= PRODUCTIONPLANTSTATUS_COLUMN_BITMASK;

		if (_originalProductionPlantStatus == null) {
			_originalProductionPlantStatus = _productionPlantStatus;
		}

		_productionPlantStatus = productionPlantStatus;
	}

	public String getOriginalProductionPlantStatus() {
		return GetterUtil.getString(_originalProductionPlantStatus);
	}

	@Override
	public String getProductionManufacture() {
		if (_productionManufacture == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionManufacture;
		}
	}

	@Override
	public void setProductionManufacture(String productionManufacture) {
		_productionManufacture = productionManufacture;
	}

	@Override
	public String getProductionMaintainer() {
		if (_productionMaintainer == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionMaintainer;
		}
	}

	@Override
	public void setProductionMaintainer(String productionMaintainer) {
		_productionMaintainer = productionMaintainer;
	}

	@Override
	public String getProductionPlantIdentityNo() {
		if (_productionPlantIdentityNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantIdentityNo;
		}
	}

	@Override
	public void setProductionPlantIdentityNo(String productionPlantIdentityNo) {
		_productionPlantIdentityNo = productionPlantIdentityNo;
	}

	@Override
	public String getProductionPlantIdentityType() {
		if (_productionPlantIdentityType == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantIdentityType;
		}
	}

	@Override
	public void setProductionPlantIdentityType(
		String productionPlantIdentityType) {
		_productionPlantIdentityType = productionPlantIdentityType;
	}

	@Override
	public String getProductionPlantIdentityDescription() {
		if (_productionPlantIdentityDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantIdentityDescription;
		}
	}

	@Override
	public void setProductionPlantIdentityDescription(
		String productionPlantIdentityDescription) {
		_productionPlantIdentityDescription = productionPlantIdentityDescription;
	}

	@Override
	public long getProductionPlantIdentityFileEntryId() {
		return _productionPlantIdentityFileEntryId;
	}

	@Override
	public void setProductionPlantIdentityFileEntryId(
		long productionPlantIdentityFileEntryId) {
		_productionPlantIdentityFileEntryId = productionPlantIdentityFileEntryId;
	}

	@Override
	public String getProductionPlantEmployeesNote() {
		if (_productionPlantEmployeesNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantEmployeesNote;
		}
	}

	@Override
	public void setProductionPlantEmployeesNote(
		String productionPlantEmployeesNote) {
		_productionPlantEmployeesNote = productionPlantEmployeesNote;
	}

	@Override
	public String getProductionPlantEquipmentsNote() {
		if (_productionPlantEquipmentsNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantEquipmentsNote;
		}
	}

	@Override
	public void setProductionPlantEquipmentsNote(
		String productionPlantEquipmentsNote) {
		_productionPlantEquipmentsNote = productionPlantEquipmentsNote;
	}

	@Override
	public String getProductionPlantProdEquipmentsNote() {
		if (_productionPlantProdEquipmentsNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantProdEquipmentsNote;
		}
	}

	@Override
	public void setProductionPlantProdEquipmentsNote(
		String productionPlantProdEquipmentsNote) {
		_productionPlantProdEquipmentsNote = productionPlantProdEquipmentsNote;
	}

	@Override
	public String getProductionIdentityFileName() {
		if (_productionIdentityFileName == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionIdentityFileName;
		}
	}

	@Override
	public void setProductionIdentityFileName(String productionIdentityFileName) {
		_productionIdentityFileName = productionIdentityFileName;
	}

	@Override
	public long getProductionIdentityFileEntryId() {
		return _productionIdentityFileEntryId;
	}

	@Override
	public void setProductionIdentityFileEntryId(
		long productionIdentityFileEntryId) {
		_productionIdentityFileEntryId = productionIdentityFileEntryId;
	}

	@Override
	public String getApplicantCode() {
		if (_applicantCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantCode;
		}
	}

	@Override
	public void setApplicantCode(String applicantCode) {
		_columnBitmask |= APPLICANTCODE_COLUMN_BITMASK;

		if (_originalApplicantCode == null) {
			_originalApplicantCode = _applicantCode;
		}

		_applicantCode = applicantCode;
	}

	public String getOriginalApplicantCode() {
		return GetterUtil.getString(_originalApplicantCode);
	}

	@Override
	public String getSupplierName() {
		if (_supplierName == null) {
			return StringPool.BLANK;
		}
		else {
			return _supplierName;
		}
	}

	@Override
	public void setSupplierName(String supplierName) {
		_supplierName = supplierName;
	}

	@Override
	public String getSupplierAddress() {
		if (_supplierAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _supplierAddress;
		}
	}

	@Override
	public void setSupplierAddress(String supplierAddress) {
		_supplierAddress = supplierAddress;
	}

	@Override
	public String getCorporationCode() {
		if (_corporationCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporationCode;
		}
	}

	@Override
	public void setCorporationCode(String corporationCode) {
		_corporationCode = corporationCode;
	}

	@Override
	public String getCorporationName() {
		if (_corporationName == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporationName;
		}
	}

	@Override
	public void setCorporationName(String corporationName) {
		_corporationName = corporationName;
	}

	@Override
	public String getCorporationAddress() {
		if (_corporationAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _corporationAddress;
		}
	}

	@Override
	public void setCorporationAddress(String corporationAddress) {
		_corporationAddress = corporationAddress;
	}

	@Override
	public String getProductionPlantMetadata() {
		if (_productionPlantMetadata == null) {
			return StringPool.BLANK;
		}
		else {
			return _productionPlantMetadata;
		}
	}

	@Override
	public void setProductionPlantMetadata(String productionPlantMetadata) {
		_productionPlantMetadata = productionPlantMetadata;
	}

	@Override
	public long getRegistrationId() {
		return _registrationId;
	}

	@Override
	public void setRegistrationId(long registrationId) {
		_columnBitmask |= REGISTRATIONID_COLUMN_BITMASK;

		if (!_setOriginalRegistrationId) {
			_setOriginalRegistrationId = true;

			_originalRegistrationId = _registrationId;
		}

		_registrationId = registrationId;
	}

	public long getOriginalRegistrationId() {
		return _originalRegistrationId;
	}

	@Override
	public long getRegistrationFormId() {
		return _registrationFormId;
	}

	@Override
	public void setRegistrationFormId(long registrationFormId) {
		_columnBitmask |= REGISTRATIONFORMID_COLUMN_BITMASK;

		if (!_setOriginalRegistrationFormId) {
			_setOriginalRegistrationFormId = true;

			_originalRegistrationFormId = _registrationFormId;
		}

		_registrationFormId = registrationFormId;
	}

	public long getOriginalRegistrationFormId() {
		return _originalRegistrationFormId;
	}

	@Override
	public long getApplicantProfileId() {
		return _applicantProfileId;
	}

	@Override
	public void setApplicantProfileId(long applicantProfileId) {
		_columnBitmask |= APPLICANTPROFILEID_COLUMN_BITMASK;

		if (!_setOriginalApplicantProfileId) {
			_setOriginalApplicantProfileId = true;

			_originalApplicantProfileId = _applicantProfileId;
		}

		_applicantProfileId = applicantProfileId;
	}

	public long getOriginalApplicantProfileId() {
		return _originalApplicantProfileId;
	}

	@Override
	public long getSupplierId() {
		return _supplierId;
	}

	@Override
	public void setSupplierId(long supplierId) {
		_supplierId = supplierId;
	}

	@Override
	public Date getModifyDate() {
		return _modifyDate;
	}

	@Override
	public void setModifyDate(Date modifyDate) {
		_columnBitmask = -1L;

		_modifyDate = modifyDate;
	}

	@Override
	public Date getSyncDate() {
		return _syncDate;
	}

	@Override
	public void setSyncDate(Date syncDate) {
		_syncDate = syncDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VRProductionPlant.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VRProductionPlant toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VRProductionPlant)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VRProductionPlantImpl vrProductionPlantImpl = new VRProductionPlantImpl();

		vrProductionPlantImpl.setId(getId());
		vrProductionPlantImpl.setMtCore(getMtCore());
		vrProductionPlantImpl.setMappingMA_CTY(getMappingMA_CTY());
		vrProductionPlantImpl.setMappingTEN_CTY(getMappingTEN_CTY());
		vrProductionPlantImpl.setMappingDIA_CHI_CTY(getMappingDIA_CHI_CTY());
		vrProductionPlantImpl.setMappingMA_XUONG_LR(getMappingMA_XUONG_LR());
		vrProductionPlantImpl.setMappingTEN_XUONG_LR(getMappingTEN_XUONG_LR());
		vrProductionPlantImpl.setMappingDIA_CHI_XUONG_LR(getMappingDIA_CHI_XUONG_LR());
		vrProductionPlantImpl.setMappingNote(getMappingNote());
		vrProductionPlantImpl.setMappingStatus(getMappingStatus());
		vrProductionPlantImpl.setProductionPlantCode(getProductionPlantCode());
		vrProductionPlantImpl.setProductionPlantName(getProductionPlantName());
		vrProductionPlantImpl.setProductionPlantAddress(getProductionPlantAddress());
		vrProductionPlantImpl.setProductionPlantRegion(getProductionPlantRegion());
		vrProductionPlantImpl.setProductionPlantRegionCode(getProductionPlantRegionCode());
		vrProductionPlantImpl.setProductionPlantStateCode(getProductionPlantStateCode());
		vrProductionPlantImpl.setProductionPlantStateName(getProductionPlantStateName());
		vrProductionPlantImpl.setProductionPlantProvinceCode(getProductionPlantProvinceCode());
		vrProductionPlantImpl.setProductionPlantProvinceName(getProductionPlantProvinceName());
		vrProductionPlantImpl.setProductionPlantDistrictCode(getProductionPlantDistrictCode());
		vrProductionPlantImpl.setProductionPlantDistrictName(getProductionPlantDistrictName());
		vrProductionPlantImpl.setProductionPlantWardCode(getProductionPlantWardCode());
		vrProductionPlantImpl.setProductionPlantWardName(getProductionPlantWardName());
		vrProductionPlantImpl.setProductionPlantEmail(getProductionPlantEmail());
		vrProductionPlantImpl.setProductionPlantPhone(getProductionPlantPhone());
		vrProductionPlantImpl.setProductionPlantFax(getProductionPlantFax());
		vrProductionPlantImpl.setProductionPlantWebsite(getProductionPlantWebsite());
		vrProductionPlantImpl.setProductionPlantRepresentativePhone(getProductionPlantRepresentativePhone());
		vrProductionPlantImpl.setProductionPlantRepresentative(getProductionPlantRepresentative());
		vrProductionPlantImpl.setProductionPlantRepresentativeTitle(getProductionPlantRepresentativeTitle());
		vrProductionPlantImpl.setProductionPlantContactName(getProductionPlantContactName());
		vrProductionPlantImpl.setProductionPlantContactEmail(getProductionPlantContactEmail());
		vrProductionPlantImpl.setProductionPlantContactPhone(getProductionPlantContactPhone());
		vrProductionPlantImpl.setProductionPlantType(getProductionPlantType());
		vrProductionPlantImpl.setProductionPlantStatus(getProductionPlantStatus());
		vrProductionPlantImpl.setProductionManufacture(getProductionManufacture());
		vrProductionPlantImpl.setProductionMaintainer(getProductionMaintainer());
		vrProductionPlantImpl.setProductionPlantIdentityNo(getProductionPlantIdentityNo());
		vrProductionPlantImpl.setProductionPlantIdentityType(getProductionPlantIdentityType());
		vrProductionPlantImpl.setProductionPlantIdentityDescription(getProductionPlantIdentityDescription());
		vrProductionPlantImpl.setProductionPlantIdentityFileEntryId(getProductionPlantIdentityFileEntryId());
		vrProductionPlantImpl.setProductionPlantEmployeesNote(getProductionPlantEmployeesNote());
		vrProductionPlantImpl.setProductionPlantEquipmentsNote(getProductionPlantEquipmentsNote());
		vrProductionPlantImpl.setProductionPlantProdEquipmentsNote(getProductionPlantProdEquipmentsNote());
		vrProductionPlantImpl.setProductionIdentityFileName(getProductionIdentityFileName());
		vrProductionPlantImpl.setProductionIdentityFileEntryId(getProductionIdentityFileEntryId());
		vrProductionPlantImpl.setApplicantCode(getApplicantCode());
		vrProductionPlantImpl.setSupplierName(getSupplierName());
		vrProductionPlantImpl.setSupplierAddress(getSupplierAddress());
		vrProductionPlantImpl.setCorporationCode(getCorporationCode());
		vrProductionPlantImpl.setCorporationName(getCorporationName());
		vrProductionPlantImpl.setCorporationAddress(getCorporationAddress());
		vrProductionPlantImpl.setProductionPlantMetadata(getProductionPlantMetadata());
		vrProductionPlantImpl.setRegistrationId(getRegistrationId());
		vrProductionPlantImpl.setRegistrationFormId(getRegistrationFormId());
		vrProductionPlantImpl.setApplicantProfileId(getApplicantProfileId());
		vrProductionPlantImpl.setSupplierId(getSupplierId());
		vrProductionPlantImpl.setModifyDate(getModifyDate());
		vrProductionPlantImpl.setSyncDate(getSyncDate());

		vrProductionPlantImpl.resetOriginalValues();

		return vrProductionPlantImpl;
	}

	@Override
	public int compareTo(VRProductionPlant vrProductionPlant) {
		int value = 0;

		value = DateUtil.compareTo(getModifyDate(),
				vrProductionPlant.getModifyDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VRProductionPlant)) {
			return false;
		}

		VRProductionPlant vrProductionPlant = (VRProductionPlant)obj;

		long primaryKey = vrProductionPlant.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		VRProductionPlantModelImpl vrProductionPlantModelImpl = this;

		vrProductionPlantModelImpl._originalMtCore = vrProductionPlantModelImpl._mtCore;

		vrProductionPlantModelImpl._setOriginalMtCore = false;

		vrProductionPlantModelImpl._originalMappingMA_CTY = vrProductionPlantModelImpl._mappingMA_CTY;

		vrProductionPlantModelImpl._originalMappingMA_XUONG_LR = vrProductionPlantModelImpl._mappingMA_XUONG_LR;

		vrProductionPlantModelImpl._originalMappingStatus = vrProductionPlantModelImpl._mappingStatus;

		vrProductionPlantModelImpl._originalProductionPlantCode = vrProductionPlantModelImpl._productionPlantCode;

		vrProductionPlantModelImpl._originalProductionPlantName = vrProductionPlantModelImpl._productionPlantName;

		vrProductionPlantModelImpl._originalProductionPlantAddress = vrProductionPlantModelImpl._productionPlantAddress;

		vrProductionPlantModelImpl._originalProductionPlantRepresentative = vrProductionPlantModelImpl._productionPlantRepresentative;

		vrProductionPlantModelImpl._originalProductionPlantType = vrProductionPlantModelImpl._productionPlantType;

		vrProductionPlantModelImpl._originalProductionPlantStatus = vrProductionPlantModelImpl._productionPlantStatus;

		vrProductionPlantModelImpl._originalApplicantCode = vrProductionPlantModelImpl._applicantCode;

		vrProductionPlantModelImpl._originalRegistrationId = vrProductionPlantModelImpl._registrationId;

		vrProductionPlantModelImpl._setOriginalRegistrationId = false;

		vrProductionPlantModelImpl._originalRegistrationFormId = vrProductionPlantModelImpl._registrationFormId;

		vrProductionPlantModelImpl._setOriginalRegistrationFormId = false;

		vrProductionPlantModelImpl._originalApplicantProfileId = vrProductionPlantModelImpl._applicantProfileId;

		vrProductionPlantModelImpl._setOriginalApplicantProfileId = false;

		vrProductionPlantModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VRProductionPlant> toCacheModel() {
		VRProductionPlantCacheModel vrProductionPlantCacheModel = new VRProductionPlantCacheModel();

		vrProductionPlantCacheModel.id = getId();

		vrProductionPlantCacheModel.mtCore = getMtCore();

		vrProductionPlantCacheModel.mappingMA_CTY = getMappingMA_CTY();

		String mappingMA_CTY = vrProductionPlantCacheModel.mappingMA_CTY;

		if ((mappingMA_CTY != null) && (mappingMA_CTY.length() == 0)) {
			vrProductionPlantCacheModel.mappingMA_CTY = null;
		}

		vrProductionPlantCacheModel.mappingTEN_CTY = getMappingTEN_CTY();

		String mappingTEN_CTY = vrProductionPlantCacheModel.mappingTEN_CTY;

		if ((mappingTEN_CTY != null) && (mappingTEN_CTY.length() == 0)) {
			vrProductionPlantCacheModel.mappingTEN_CTY = null;
		}

		vrProductionPlantCacheModel.mappingDIA_CHI_CTY = getMappingDIA_CHI_CTY();

		String mappingDIA_CHI_CTY = vrProductionPlantCacheModel.mappingDIA_CHI_CTY;

		if ((mappingDIA_CHI_CTY != null) && (mappingDIA_CHI_CTY.length() == 0)) {
			vrProductionPlantCacheModel.mappingDIA_CHI_CTY = null;
		}

		vrProductionPlantCacheModel.mappingMA_XUONG_LR = getMappingMA_XUONG_LR();

		String mappingMA_XUONG_LR = vrProductionPlantCacheModel.mappingMA_XUONG_LR;

		if ((mappingMA_XUONG_LR != null) && (mappingMA_XUONG_LR.length() == 0)) {
			vrProductionPlantCacheModel.mappingMA_XUONG_LR = null;
		}

		vrProductionPlantCacheModel.mappingTEN_XUONG_LR = getMappingTEN_XUONG_LR();

		String mappingTEN_XUONG_LR = vrProductionPlantCacheModel.mappingTEN_XUONG_LR;

		if ((mappingTEN_XUONG_LR != null) &&
				(mappingTEN_XUONG_LR.length() == 0)) {
			vrProductionPlantCacheModel.mappingTEN_XUONG_LR = null;
		}

		vrProductionPlantCacheModel.mappingDIA_CHI_XUONG_LR = getMappingDIA_CHI_XUONG_LR();

		String mappingDIA_CHI_XUONG_LR = vrProductionPlantCacheModel.mappingDIA_CHI_XUONG_LR;

		if ((mappingDIA_CHI_XUONG_LR != null) &&
				(mappingDIA_CHI_XUONG_LR.length() == 0)) {
			vrProductionPlantCacheModel.mappingDIA_CHI_XUONG_LR = null;
		}

		vrProductionPlantCacheModel.mappingNote = getMappingNote();

		String mappingNote = vrProductionPlantCacheModel.mappingNote;

		if ((mappingNote != null) && (mappingNote.length() == 0)) {
			vrProductionPlantCacheModel.mappingNote = null;
		}

		vrProductionPlantCacheModel.mappingStatus = getMappingStatus();

		String mappingStatus = vrProductionPlantCacheModel.mappingStatus;

		if ((mappingStatus != null) && (mappingStatus.length() == 0)) {
			vrProductionPlantCacheModel.mappingStatus = null;
		}

		vrProductionPlantCacheModel.productionPlantCode = getProductionPlantCode();

		String productionPlantCode = vrProductionPlantCacheModel.productionPlantCode;

		if ((productionPlantCode != null) &&
				(productionPlantCode.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantCode = null;
		}

		vrProductionPlantCacheModel.productionPlantName = getProductionPlantName();

		String productionPlantName = vrProductionPlantCacheModel.productionPlantName;

		if ((productionPlantName != null) &&
				(productionPlantName.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantName = null;
		}

		vrProductionPlantCacheModel.productionPlantAddress = getProductionPlantAddress();

		String productionPlantAddress = vrProductionPlantCacheModel.productionPlantAddress;

		if ((productionPlantAddress != null) &&
				(productionPlantAddress.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantAddress = null;
		}

		vrProductionPlantCacheModel.productionPlantRegion = getProductionPlantRegion();

		String productionPlantRegion = vrProductionPlantCacheModel.productionPlantRegion;

		if ((productionPlantRegion != null) &&
				(productionPlantRegion.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantRegion = null;
		}

		vrProductionPlantCacheModel.productionPlantRegionCode = getProductionPlantRegionCode();

		String productionPlantRegionCode = vrProductionPlantCacheModel.productionPlantRegionCode;

		if ((productionPlantRegionCode != null) &&
				(productionPlantRegionCode.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantRegionCode = null;
		}

		vrProductionPlantCacheModel.productionPlantStateCode = getProductionPlantStateCode();

		String productionPlantStateCode = vrProductionPlantCacheModel.productionPlantStateCode;

		if ((productionPlantStateCode != null) &&
				(productionPlantStateCode.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantStateCode = null;
		}

		vrProductionPlantCacheModel.productionPlantStateName = getProductionPlantStateName();

		String productionPlantStateName = vrProductionPlantCacheModel.productionPlantStateName;

		if ((productionPlantStateName != null) &&
				(productionPlantStateName.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantStateName = null;
		}

		vrProductionPlantCacheModel.productionPlantProvinceCode = getProductionPlantProvinceCode();

		String productionPlantProvinceCode = vrProductionPlantCacheModel.productionPlantProvinceCode;

		if ((productionPlantProvinceCode != null) &&
				(productionPlantProvinceCode.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantProvinceCode = null;
		}

		vrProductionPlantCacheModel.productionPlantProvinceName = getProductionPlantProvinceName();

		String productionPlantProvinceName = vrProductionPlantCacheModel.productionPlantProvinceName;

		if ((productionPlantProvinceName != null) &&
				(productionPlantProvinceName.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantProvinceName = null;
		}

		vrProductionPlantCacheModel.productionPlantDistrictCode = getProductionPlantDistrictCode();

		String productionPlantDistrictCode = vrProductionPlantCacheModel.productionPlantDistrictCode;

		if ((productionPlantDistrictCode != null) &&
				(productionPlantDistrictCode.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantDistrictCode = null;
		}

		vrProductionPlantCacheModel.productionPlantDistrictName = getProductionPlantDistrictName();

		String productionPlantDistrictName = vrProductionPlantCacheModel.productionPlantDistrictName;

		if ((productionPlantDistrictName != null) &&
				(productionPlantDistrictName.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantDistrictName = null;
		}

		vrProductionPlantCacheModel.productionPlantWardCode = getProductionPlantWardCode();

		String productionPlantWardCode = vrProductionPlantCacheModel.productionPlantWardCode;

		if ((productionPlantWardCode != null) &&
				(productionPlantWardCode.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantWardCode = null;
		}

		vrProductionPlantCacheModel.productionPlantWardName = getProductionPlantWardName();

		String productionPlantWardName = vrProductionPlantCacheModel.productionPlantWardName;

		if ((productionPlantWardName != null) &&
				(productionPlantWardName.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantWardName = null;
		}

		vrProductionPlantCacheModel.productionPlantEmail = getProductionPlantEmail();

		String productionPlantEmail = vrProductionPlantCacheModel.productionPlantEmail;

		if ((productionPlantEmail != null) &&
				(productionPlantEmail.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantEmail = null;
		}

		vrProductionPlantCacheModel.productionPlantPhone = getProductionPlantPhone();

		String productionPlantPhone = vrProductionPlantCacheModel.productionPlantPhone;

		if ((productionPlantPhone != null) &&
				(productionPlantPhone.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantPhone = null;
		}

		vrProductionPlantCacheModel.productionPlantFax = getProductionPlantFax();

		String productionPlantFax = vrProductionPlantCacheModel.productionPlantFax;

		if ((productionPlantFax != null) && (productionPlantFax.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantFax = null;
		}

		vrProductionPlantCacheModel.productionPlantWebsite = getProductionPlantWebsite();

		String productionPlantWebsite = vrProductionPlantCacheModel.productionPlantWebsite;

		if ((productionPlantWebsite != null) &&
				(productionPlantWebsite.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantWebsite = null;
		}

		vrProductionPlantCacheModel.productionPlantRepresentativePhone = getProductionPlantRepresentativePhone();

		String productionPlantRepresentativePhone = vrProductionPlantCacheModel.productionPlantRepresentativePhone;

		if ((productionPlantRepresentativePhone != null) &&
				(productionPlantRepresentativePhone.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantRepresentativePhone = null;
		}

		vrProductionPlantCacheModel.productionPlantRepresentative = getProductionPlantRepresentative();

		String productionPlantRepresentative = vrProductionPlantCacheModel.productionPlantRepresentative;

		if ((productionPlantRepresentative != null) &&
				(productionPlantRepresentative.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantRepresentative = null;
		}

		vrProductionPlantCacheModel.productionPlantRepresentativeTitle = getProductionPlantRepresentativeTitle();

		String productionPlantRepresentativeTitle = vrProductionPlantCacheModel.productionPlantRepresentativeTitle;

		if ((productionPlantRepresentativeTitle != null) &&
				(productionPlantRepresentativeTitle.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantRepresentativeTitle = null;
		}

		vrProductionPlantCacheModel.productionPlantContactName = getProductionPlantContactName();

		String productionPlantContactName = vrProductionPlantCacheModel.productionPlantContactName;

		if ((productionPlantContactName != null) &&
				(productionPlantContactName.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantContactName = null;
		}

		vrProductionPlantCacheModel.productionPlantContactEmail = getProductionPlantContactEmail();

		String productionPlantContactEmail = vrProductionPlantCacheModel.productionPlantContactEmail;

		if ((productionPlantContactEmail != null) &&
				(productionPlantContactEmail.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantContactEmail = null;
		}

		vrProductionPlantCacheModel.productionPlantContactPhone = getProductionPlantContactPhone();

		String productionPlantContactPhone = vrProductionPlantCacheModel.productionPlantContactPhone;

		if ((productionPlantContactPhone != null) &&
				(productionPlantContactPhone.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantContactPhone = null;
		}

		vrProductionPlantCacheModel.productionPlantType = getProductionPlantType();

		String productionPlantType = vrProductionPlantCacheModel.productionPlantType;

		if ((productionPlantType != null) &&
				(productionPlantType.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantType = null;
		}

		vrProductionPlantCacheModel.productionPlantStatus = getProductionPlantStatus();

		String productionPlantStatus = vrProductionPlantCacheModel.productionPlantStatus;

		if ((productionPlantStatus != null) &&
				(productionPlantStatus.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantStatus = null;
		}

		vrProductionPlantCacheModel.productionManufacture = getProductionManufacture();

		String productionManufacture = vrProductionPlantCacheModel.productionManufacture;

		if ((productionManufacture != null) &&
				(productionManufacture.length() == 0)) {
			vrProductionPlantCacheModel.productionManufacture = null;
		}

		vrProductionPlantCacheModel.productionMaintainer = getProductionMaintainer();

		String productionMaintainer = vrProductionPlantCacheModel.productionMaintainer;

		if ((productionMaintainer != null) &&
				(productionMaintainer.length() == 0)) {
			vrProductionPlantCacheModel.productionMaintainer = null;
		}

		vrProductionPlantCacheModel.productionPlantIdentityNo = getProductionPlantIdentityNo();

		String productionPlantIdentityNo = vrProductionPlantCacheModel.productionPlantIdentityNo;

		if ((productionPlantIdentityNo != null) &&
				(productionPlantIdentityNo.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantIdentityNo = null;
		}

		vrProductionPlantCacheModel.productionPlantIdentityType = getProductionPlantIdentityType();

		String productionPlantIdentityType = vrProductionPlantCacheModel.productionPlantIdentityType;

		if ((productionPlantIdentityType != null) &&
				(productionPlantIdentityType.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantIdentityType = null;
		}

		vrProductionPlantCacheModel.productionPlantIdentityDescription = getProductionPlantIdentityDescription();

		String productionPlantIdentityDescription = vrProductionPlantCacheModel.productionPlantIdentityDescription;

		if ((productionPlantIdentityDescription != null) &&
				(productionPlantIdentityDescription.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantIdentityDescription = null;
		}

		vrProductionPlantCacheModel.productionPlantIdentityFileEntryId = getProductionPlantIdentityFileEntryId();

		vrProductionPlantCacheModel.productionPlantEmployeesNote = getProductionPlantEmployeesNote();

		String productionPlantEmployeesNote = vrProductionPlantCacheModel.productionPlantEmployeesNote;

		if ((productionPlantEmployeesNote != null) &&
				(productionPlantEmployeesNote.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantEmployeesNote = null;
		}

		vrProductionPlantCacheModel.productionPlantEquipmentsNote = getProductionPlantEquipmentsNote();

		String productionPlantEquipmentsNote = vrProductionPlantCacheModel.productionPlantEquipmentsNote;

		if ((productionPlantEquipmentsNote != null) &&
				(productionPlantEquipmentsNote.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantEquipmentsNote = null;
		}

		vrProductionPlantCacheModel.productionPlantProdEquipmentsNote = getProductionPlantProdEquipmentsNote();

		String productionPlantProdEquipmentsNote = vrProductionPlantCacheModel.productionPlantProdEquipmentsNote;

		if ((productionPlantProdEquipmentsNote != null) &&
				(productionPlantProdEquipmentsNote.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantProdEquipmentsNote = null;
		}

		vrProductionPlantCacheModel.productionIdentityFileName = getProductionIdentityFileName();

		String productionIdentityFileName = vrProductionPlantCacheModel.productionIdentityFileName;

		if ((productionIdentityFileName != null) &&
				(productionIdentityFileName.length() == 0)) {
			vrProductionPlantCacheModel.productionIdentityFileName = null;
		}

		vrProductionPlantCacheModel.productionIdentityFileEntryId = getProductionIdentityFileEntryId();

		vrProductionPlantCacheModel.applicantCode = getApplicantCode();

		String applicantCode = vrProductionPlantCacheModel.applicantCode;

		if ((applicantCode != null) && (applicantCode.length() == 0)) {
			vrProductionPlantCacheModel.applicantCode = null;
		}

		vrProductionPlantCacheModel.supplierName = getSupplierName();

		String supplierName = vrProductionPlantCacheModel.supplierName;

		if ((supplierName != null) && (supplierName.length() == 0)) {
			vrProductionPlantCacheModel.supplierName = null;
		}

		vrProductionPlantCacheModel.supplierAddress = getSupplierAddress();

		String supplierAddress = vrProductionPlantCacheModel.supplierAddress;

		if ((supplierAddress != null) && (supplierAddress.length() == 0)) {
			vrProductionPlantCacheModel.supplierAddress = null;
		}

		vrProductionPlantCacheModel.corporationCode = getCorporationCode();

		String corporationCode = vrProductionPlantCacheModel.corporationCode;

		if ((corporationCode != null) && (corporationCode.length() == 0)) {
			vrProductionPlantCacheModel.corporationCode = null;
		}

		vrProductionPlantCacheModel.corporationName = getCorporationName();

		String corporationName = vrProductionPlantCacheModel.corporationName;

		if ((corporationName != null) && (corporationName.length() == 0)) {
			vrProductionPlantCacheModel.corporationName = null;
		}

		vrProductionPlantCacheModel.corporationAddress = getCorporationAddress();

		String corporationAddress = vrProductionPlantCacheModel.corporationAddress;

		if ((corporationAddress != null) && (corporationAddress.length() == 0)) {
			vrProductionPlantCacheModel.corporationAddress = null;
		}

		vrProductionPlantCacheModel.productionPlantMetadata = getProductionPlantMetadata();

		String productionPlantMetadata = vrProductionPlantCacheModel.productionPlantMetadata;

		if ((productionPlantMetadata != null) &&
				(productionPlantMetadata.length() == 0)) {
			vrProductionPlantCacheModel.productionPlantMetadata = null;
		}

		vrProductionPlantCacheModel.registrationId = getRegistrationId();

		vrProductionPlantCacheModel.registrationFormId = getRegistrationFormId();

		vrProductionPlantCacheModel.applicantProfileId = getApplicantProfileId();

		vrProductionPlantCacheModel.supplierId = getSupplierId();

		Date modifyDate = getModifyDate();

		if (modifyDate != null) {
			vrProductionPlantCacheModel.modifyDate = modifyDate.getTime();
		}
		else {
			vrProductionPlantCacheModel.modifyDate = Long.MIN_VALUE;
		}

		Date syncDate = getSyncDate();

		if (syncDate != null) {
			vrProductionPlantCacheModel.syncDate = syncDate.getTime();
		}
		else {
			vrProductionPlantCacheModel.syncDate = Long.MIN_VALUE;
		}

		return vrProductionPlantCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(119);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", mtCore=");
		sb.append(getMtCore());
		sb.append(", mappingMA_CTY=");
		sb.append(getMappingMA_CTY());
		sb.append(", mappingTEN_CTY=");
		sb.append(getMappingTEN_CTY());
		sb.append(", mappingDIA_CHI_CTY=");
		sb.append(getMappingDIA_CHI_CTY());
		sb.append(", mappingMA_XUONG_LR=");
		sb.append(getMappingMA_XUONG_LR());
		sb.append(", mappingTEN_XUONG_LR=");
		sb.append(getMappingTEN_XUONG_LR());
		sb.append(", mappingDIA_CHI_XUONG_LR=");
		sb.append(getMappingDIA_CHI_XUONG_LR());
		sb.append(", mappingNote=");
		sb.append(getMappingNote());
		sb.append(", mappingStatus=");
		sb.append(getMappingStatus());
		sb.append(", productionPlantCode=");
		sb.append(getProductionPlantCode());
		sb.append(", productionPlantName=");
		sb.append(getProductionPlantName());
		sb.append(", productionPlantAddress=");
		sb.append(getProductionPlantAddress());
		sb.append(", productionPlantRegion=");
		sb.append(getProductionPlantRegion());
		sb.append(", productionPlantRegionCode=");
		sb.append(getProductionPlantRegionCode());
		sb.append(", productionPlantStateCode=");
		sb.append(getProductionPlantStateCode());
		sb.append(", productionPlantStateName=");
		sb.append(getProductionPlantStateName());
		sb.append(", productionPlantProvinceCode=");
		sb.append(getProductionPlantProvinceCode());
		sb.append(", productionPlantProvinceName=");
		sb.append(getProductionPlantProvinceName());
		sb.append(", productionPlantDistrictCode=");
		sb.append(getProductionPlantDistrictCode());
		sb.append(", productionPlantDistrictName=");
		sb.append(getProductionPlantDistrictName());
		sb.append(", productionPlantWardCode=");
		sb.append(getProductionPlantWardCode());
		sb.append(", productionPlantWardName=");
		sb.append(getProductionPlantWardName());
		sb.append(", productionPlantEmail=");
		sb.append(getProductionPlantEmail());
		sb.append(", productionPlantPhone=");
		sb.append(getProductionPlantPhone());
		sb.append(", productionPlantFax=");
		sb.append(getProductionPlantFax());
		sb.append(", productionPlantWebsite=");
		sb.append(getProductionPlantWebsite());
		sb.append(", productionPlantRepresentativePhone=");
		sb.append(getProductionPlantRepresentativePhone());
		sb.append(", productionPlantRepresentative=");
		sb.append(getProductionPlantRepresentative());
		sb.append(", productionPlantRepresentativeTitle=");
		sb.append(getProductionPlantRepresentativeTitle());
		sb.append(", productionPlantContactName=");
		sb.append(getProductionPlantContactName());
		sb.append(", productionPlantContactEmail=");
		sb.append(getProductionPlantContactEmail());
		sb.append(", productionPlantContactPhone=");
		sb.append(getProductionPlantContactPhone());
		sb.append(", productionPlantType=");
		sb.append(getProductionPlantType());
		sb.append(", productionPlantStatus=");
		sb.append(getProductionPlantStatus());
		sb.append(", productionManufacture=");
		sb.append(getProductionManufacture());
		sb.append(", productionMaintainer=");
		sb.append(getProductionMaintainer());
		sb.append(", productionPlantIdentityNo=");
		sb.append(getProductionPlantIdentityNo());
		sb.append(", productionPlantIdentityType=");
		sb.append(getProductionPlantIdentityType());
		sb.append(", productionPlantIdentityDescription=");
		sb.append(getProductionPlantIdentityDescription());
		sb.append(", productionPlantIdentityFileEntryId=");
		sb.append(getProductionPlantIdentityFileEntryId());
		sb.append(", productionPlantEmployeesNote=");
		sb.append(getProductionPlantEmployeesNote());
		sb.append(", productionPlantEquipmentsNote=");
		sb.append(getProductionPlantEquipmentsNote());
		sb.append(", productionPlantProdEquipmentsNote=");
		sb.append(getProductionPlantProdEquipmentsNote());
		sb.append(", productionIdentityFileName=");
		sb.append(getProductionIdentityFileName());
		sb.append(", productionIdentityFileEntryId=");
		sb.append(getProductionIdentityFileEntryId());
		sb.append(", applicantCode=");
		sb.append(getApplicantCode());
		sb.append(", supplierName=");
		sb.append(getSupplierName());
		sb.append(", supplierAddress=");
		sb.append(getSupplierAddress());
		sb.append(", corporationCode=");
		sb.append(getCorporationCode());
		sb.append(", corporationName=");
		sb.append(getCorporationName());
		sb.append(", corporationAddress=");
		sb.append(getCorporationAddress());
		sb.append(", productionPlantMetadata=");
		sb.append(getProductionPlantMetadata());
		sb.append(", registrationId=");
		sb.append(getRegistrationId());
		sb.append(", registrationFormId=");
		sb.append(getRegistrationFormId());
		sb.append(", applicantProfileId=");
		sb.append(getApplicantProfileId());
		sb.append(", supplierId=");
		sb.append(getSupplierId());
		sb.append(", modifyDate=");
		sb.append(getModifyDate());
		sb.append(", syncDate=");
		sb.append(getSyncDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(181);

		sb.append("<model><model-name>");
		sb.append("com.fds.vr.business.model.VRProductionPlant");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mtCore</column-name><column-value><![CDATA[");
		sb.append(getMtCore());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingMA_CTY</column-name><column-value><![CDATA[");
		sb.append(getMappingMA_CTY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingTEN_CTY</column-name><column-value><![CDATA[");
		sb.append(getMappingTEN_CTY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingDIA_CHI_CTY</column-name><column-value><![CDATA[");
		sb.append(getMappingDIA_CHI_CTY());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingMA_XUONG_LR</column-name><column-value><![CDATA[");
		sb.append(getMappingMA_XUONG_LR());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingTEN_XUONG_LR</column-name><column-value><![CDATA[");
		sb.append(getMappingTEN_XUONG_LR());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingDIA_CHI_XUONG_LR</column-name><column-value><![CDATA[");
		sb.append(getMappingDIA_CHI_XUONG_LR());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingNote</column-name><column-value><![CDATA[");
		sb.append(getMappingNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingStatus</column-name><column-value><![CDATA[");
		sb.append(getMappingStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantCode</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantName</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantAddress</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantRegion</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantRegion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantRegionCode</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantRegionCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantStateCode</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantStateCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantStateName</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantStateName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantProvinceCode</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantProvinceCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantProvinceName</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantProvinceName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantDistrictCode</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantDistrictCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantDistrictName</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantDistrictName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantWardCode</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantWardCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantWardName</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantWardName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantEmail</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantPhone</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantFax</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantWebsite</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantWebsite());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantRepresentativePhone</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantRepresentativePhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantRepresentative</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantRepresentative());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantRepresentativeTitle</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantRepresentativeTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantContactName</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantContactName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantContactEmail</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantContactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantContactPhone</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantType</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantStatus</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionManufacture</column-name><column-value><![CDATA[");
		sb.append(getProductionManufacture());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionMaintainer</column-name><column-value><![CDATA[");
		sb.append(getProductionMaintainer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantIdentityNo</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantIdentityNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantIdentityType</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantIdentityType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantIdentityDescription</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantIdentityDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantIdentityFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantIdentityFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantEmployeesNote</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantEmployeesNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantEquipmentsNote</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantEquipmentsNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantProdEquipmentsNote</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantProdEquipmentsNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionIdentityFileName</column-name><column-value><![CDATA[");
		sb.append(getProductionIdentityFileName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionIdentityFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getProductionIdentityFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantCode</column-name><column-value><![CDATA[");
		sb.append(getApplicantCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierName</column-name><column-value><![CDATA[");
		sb.append(getSupplierName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierAddress</column-name><column-value><![CDATA[");
		sb.append(getSupplierAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporationCode</column-name><column-value><![CDATA[");
		sb.append(getCorporationCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporationName</column-name><column-value><![CDATA[");
		sb.append(getCorporationName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>corporationAddress</column-name><column-value><![CDATA[");
		sb.append(getCorporationAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productionPlantMetadata</column-name><column-value><![CDATA[");
		sb.append(getProductionPlantMetadata());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationId</column-name><column-value><![CDATA[");
		sb.append(getRegistrationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>registrationFormId</column-name><column-value><![CDATA[");
		sb.append(getRegistrationFormId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantProfileId</column-name><column-value><![CDATA[");
		sb.append(getApplicantProfileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supplierId</column-name><column-value><![CDATA[");
		sb.append(getSupplierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifyDate</column-name><column-value><![CDATA[");
		sb.append(getModifyDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>syncDate</column-name><column-value><![CDATA[");
		sb.append(getSyncDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = VRProductionPlant.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			VRProductionPlant.class
		};
	private long _id;
	private long _mtCore;
	private long _originalMtCore;
	private boolean _setOriginalMtCore;
	private String _mappingMA_CTY;
	private String _originalMappingMA_CTY;
	private String _mappingTEN_CTY;
	private String _mappingDIA_CHI_CTY;
	private String _mappingMA_XUONG_LR;
	private String _originalMappingMA_XUONG_LR;
	private String _mappingTEN_XUONG_LR;
	private String _mappingDIA_CHI_XUONG_LR;
	private String _mappingNote;
	private String _mappingStatus;
	private String _originalMappingStatus;
	private String _productionPlantCode;
	private String _originalProductionPlantCode;
	private String _productionPlantName;
	private String _originalProductionPlantName;
	private String _productionPlantAddress;
	private String _originalProductionPlantAddress;
	private String _productionPlantRegion;
	private String _productionPlantRegionCode;
	private String _productionPlantStateCode;
	private String _productionPlantStateName;
	private String _productionPlantProvinceCode;
	private String _productionPlantProvinceName;
	private String _productionPlantDistrictCode;
	private String _productionPlantDistrictName;
	private String _productionPlantWardCode;
	private String _productionPlantWardName;
	private String _productionPlantEmail;
	private String _productionPlantPhone;
	private String _productionPlantFax;
	private String _productionPlantWebsite;
	private String _productionPlantRepresentativePhone;
	private String _productionPlantRepresentative;
	private String _originalProductionPlantRepresentative;
	private String _productionPlantRepresentativeTitle;
	private String _productionPlantContactName;
	private String _productionPlantContactEmail;
	private String _productionPlantContactPhone;
	private String _productionPlantType;
	private String _originalProductionPlantType;
	private String _productionPlantStatus;
	private String _originalProductionPlantStatus;
	private String _productionManufacture;
	private String _productionMaintainer;
	private String _productionPlantIdentityNo;
	private String _productionPlantIdentityType;
	private String _productionPlantIdentityDescription;
	private long _productionPlantIdentityFileEntryId;
	private String _productionPlantEmployeesNote;
	private String _productionPlantEquipmentsNote;
	private String _productionPlantProdEquipmentsNote;
	private String _productionIdentityFileName;
	private long _productionIdentityFileEntryId;
	private String _applicantCode;
	private String _originalApplicantCode;
	private String _supplierName;
	private String _supplierAddress;
	private String _corporationCode;
	private String _corporationName;
	private String _corporationAddress;
	private String _productionPlantMetadata;
	private long _registrationId;
	private long _originalRegistrationId;
	private boolean _setOriginalRegistrationId;
	private long _registrationFormId;
	private long _originalRegistrationFormId;
	private boolean _setOriginalRegistrationFormId;
	private long _applicantProfileId;
	private long _originalApplicantProfileId;
	private boolean _setOriginalApplicantProfileId;
	private long _supplierId;
	private Date _modifyDate;
	private Date _syncDate;
	private long _columnBitmask;
	private VRProductionPlant _escapedModel;
}