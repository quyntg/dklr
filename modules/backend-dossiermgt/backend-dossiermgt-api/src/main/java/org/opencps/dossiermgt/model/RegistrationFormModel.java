/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the RegistrationForm service. Represents a row in the &quot;opencps_registrationform&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.opencps.dossiermgt.model.impl.RegistrationFormModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.opencps.dossiermgt.model.impl.RegistrationFormImpl}.
 * </p>
 *
 * @author huymq
 * @see RegistrationForm
 * @see org.opencps.dossiermgt.model.impl.RegistrationFormImpl
 * @see org.opencps.dossiermgt.model.impl.RegistrationFormModelImpl
 * @generated
 */
@ProviderType
public interface RegistrationFormModel extends BaseModel<RegistrationForm>,
	ShardedModel, StagedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a registration form model instance should use the {@link RegistrationForm} interface instead.
	 */

	/**
	 * Returns the primary key of this registration form.
	 *
	 * @return the primary key of this registration form
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this registration form.
	 *
	 * @param primaryKey the primary key of this registration form
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this registration form.
	 *
	 * @return the uuid of this registration form
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this registration form.
	 *
	 * @param uuid the uuid of this registration form
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the registration form ID of this registration form.
	 *
	 * @return the registration form ID of this registration form
	 */
	public long getRegistrationFormId();

	/**
	 * Sets the registration form ID of this registration form.
	 *
	 * @param registrationFormId the registration form ID of this registration form
	 */
	public void setRegistrationFormId(long registrationFormId);

	/**
	 * Returns the company ID of this registration form.
	 *
	 * @return the company ID of this registration form
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this registration form.
	 *
	 * @param companyId the company ID of this registration form
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the group ID of this registration form.
	 *
	 * @return the group ID of this registration form
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this registration form.
	 *
	 * @param groupId the group ID of this registration form
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the user ID of this registration form.
	 *
	 * @return the user ID of this registration form
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this registration form.
	 *
	 * @param userId the user ID of this registration form
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this registration form.
	 *
	 * @return the user uuid of this registration form
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this registration form.
	 *
	 * @param userUuid the user uuid of this registration form
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the create date of this registration form.
	 *
	 * @return the create date of this registration form
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this registration form.
	 *
	 * @param createDate the create date of this registration form
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this registration form.
	 *
	 * @return the modified date of this registration form
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this registration form.
	 *
	 * @param modifiedDate the modified date of this registration form
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the registration ID of this registration form.
	 *
	 * @return the registration ID of this registration form
	 */
	public long getRegistrationId();

	/**
	 * Sets the registration ID of this registration form.
	 *
	 * @param registrationId the registration ID of this registration form
	 */
	public void setRegistrationId(long registrationId);

	/**
	 * Returns the reference uid of this registration form.
	 *
	 * @return the reference uid of this registration form
	 */
	@AutoEscape
	public String getReferenceUid();

	/**
	 * Sets the reference uid of this registration form.
	 *
	 * @param referenceUid the reference uid of this registration form
	 */
	public void setReferenceUid(String referenceUid);

	/**
	 * Returns the form no of this registration form.
	 *
	 * @return the form no of this registration form
	 */
	@AutoEscape
	public String getFormNo();

	/**
	 * Sets the form no of this registration form.
	 *
	 * @param formNo the form no of this registration form
	 */
	public void setFormNo(String formNo);

	/**
	 * Returns the form name of this registration form.
	 *
	 * @return the form name of this registration form
	 */
	@AutoEscape
	public String getFormName();

	/**
	 * Sets the form name of this registration form.
	 *
	 * @param formName the form name of this registration form
	 */
	public void setFormName(String formName);

	/**
	 * Returns the form data of this registration form.
	 *
	 * @return the form data of this registration form
	 */
	@AutoEscape
	public String getFormData();

	/**
	 * Sets the form data of this registration form.
	 *
	 * @param formData the form data of this registration form
	 */
	public void setFormData(String formData);

	/**
	 * Returns the form script of this registration form.
	 *
	 * @return the form script of this registration form
	 */
	@AutoEscape
	public String getFormScript();

	/**
	 * Sets the form script of this registration form.
	 *
	 * @param formScript the form script of this registration form
	 */
	public void setFormScript(String formScript);

	/**
	 * Returns the form report of this registration form.
	 *
	 * @return the form report of this registration form
	 */
	@AutoEscape
	public String getFormReport();

	/**
	 * Sets the form report of this registration form.
	 *
	 * @param formReport the form report of this registration form
	 */
	public void setFormReport(String formReport);

	/**
	 * Returns the file entry ID of this registration form.
	 *
	 * @return the file entry ID of this registration form
	 */
	public long getFileEntryId();

	/**
	 * Sets the file entry ID of this registration form.
	 *
	 * @param fileEntryId the file entry ID of this registration form
	 */
	public void setFileEntryId(long fileEntryId);

	/**
	 * Returns the is new of this registration form.
	 *
	 * @return the is new of this registration form
	 */
	public boolean getIsNew();

	/**
	 * Returns <code>true</code> if this registration form is is new.
	 *
	 * @return <code>true</code> if this registration form is is new; <code>false</code> otherwise
	 */
	public boolean isIsNew();

	/**
	 * Sets whether this registration form is is new.
	 *
	 * @param isNew the is new of this registration form
	 */
	public void setIsNew(boolean isNew);

	/**
	 * Returns the removed of this registration form.
	 *
	 * @return the removed of this registration form
	 */
	public boolean getRemoved();

	/**
	 * Returns <code>true</code> if this registration form is removed.
	 *
	 * @return <code>true</code> if this registration form is removed; <code>false</code> otherwise
	 */
	public boolean isRemoved();

	/**
	 * Sets whether this registration form is removed.
	 *
	 * @param removed the removed of this registration form
	 */
	public void setRemoved(boolean removed);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(RegistrationForm registrationForm);

	@Override
	public int hashCode();

	@Override
	public CacheModel<RegistrationForm> toCacheModel();

	@Override
	public RegistrationForm toEscapedModel();

	@Override
	public RegistrationForm toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}