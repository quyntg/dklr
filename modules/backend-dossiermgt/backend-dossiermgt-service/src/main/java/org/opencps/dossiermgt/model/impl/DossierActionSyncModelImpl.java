/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import org.opencps.dossiermgt.model.DossierActionSync;
import org.opencps.dossiermgt.model.DossierActionSyncModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DossierActionSync service. Represents a row in the &quot;opencps_dossieractionsync&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link DossierActionSyncModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossierActionSyncImpl}.
 * </p>
 *
 * @author huymq
 * @see DossierActionSyncImpl
 * @see DossierActionSync
 * @see DossierActionSyncModel
 * @generated
 */
@ProviderType
public class DossierActionSyncModelImpl extends BaseModelImpl<DossierActionSync>
	implements DossierActionSyncModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossier action sync model instance should use the {@link DossierActionSync} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_dossieractionsync";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "dossierActionSyncId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierId", Types.BIGINT },
			{ "dossierActionId", Types.BIGINT },
			{ "createDossier", Types.BOOLEAN },
			{ "referenceUid", Types.VARCHAR },
			{ "actionCode", Types.VARCHAR },
			{ "actionUser", Types.VARCHAR },
			{ "actionNote", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dossierActionSyncId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dossierId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dossierActionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createDossier", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("referenceUid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("actionCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("actionUser", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("actionNote", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_dossieractionsync (uuid_ VARCHAR(75) null,dossierActionSyncId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,dossierId LONG,dossierActionId LONG,createDossier BOOLEAN,referenceUid VARCHAR(75) null,actionCode VARCHAR(75) null,actionUser VARCHAR(75) null,actionNote VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_dossieractionsync";
	public static final String ORDER_BY_JPQL = " ORDER BY dossierActionSync.dossierActionSyncId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_dossieractionsync.dossierActionSyncId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.DossierActionSync"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.DossierActionSync"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.DossierActionSync"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long DOSSIERACTIONID_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long UUID_COLUMN_BITMASK = 8L;
	public static final long DOSSIERACTIONSYNCID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.DossierActionSync"));

	public DossierActionSyncModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierActionSyncId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierActionSyncId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierActionSyncId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DossierActionSync.class;
	}

	@Override
	public String getModelClassName() {
		return DossierActionSync.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("dossierActionSyncId", getDossierActionSyncId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierId", getDossierId());
		attributes.put("dossierActionId", getDossierActionId());
		attributes.put("createDossier", getCreateDossier());
		attributes.put("referenceUid", getReferenceUid());
		attributes.put("actionCode", getActionCode());
		attributes.put("actionUser", getActionUser());
		attributes.put("actionNote", getActionNote());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long dossierActionSyncId = (Long)attributes.get("dossierActionSyncId");

		if (dossierActionSyncId != null) {
			setDossierActionSyncId(dossierActionSyncId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		Long dossierActionId = (Long)attributes.get("dossierActionId");

		if (dossierActionId != null) {
			setDossierActionId(dossierActionId);
		}

		Boolean createDossier = (Boolean)attributes.get("createDossier");

		if (createDossier != null) {
			setCreateDossier(createDossier);
		}

		String referenceUid = (String)attributes.get("referenceUid");

		if (referenceUid != null) {
			setReferenceUid(referenceUid);
		}

		String actionCode = (String)attributes.get("actionCode");

		if (actionCode != null) {
			setActionCode(actionCode);
		}

		String actionUser = (String)attributes.get("actionUser");

		if (actionUser != null) {
			setActionUser(actionUser);
		}

		String actionNote = (String)attributes.get("actionNote");

		if (actionNote != null) {
			setActionNote(actionNote);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getDossierActionSyncId() {
		return _dossierActionSyncId;
	}

	@Override
	public void setDossierActionSyncId(long dossierActionSyncId) {
		_dossierActionSyncId = dossierActionSyncId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_dossierId = dossierId;
	}

	@Override
	public long getDossierActionId() {
		return _dossierActionId;
	}

	@Override
	public void setDossierActionId(long dossierActionId) {
		_columnBitmask |= DOSSIERACTIONID_COLUMN_BITMASK;

		if (!_setOriginalDossierActionId) {
			_setOriginalDossierActionId = true;

			_originalDossierActionId = _dossierActionId;
		}

		_dossierActionId = dossierActionId;
	}

	public long getOriginalDossierActionId() {
		return _originalDossierActionId;
	}

	@Override
	public boolean getCreateDossier() {
		return _createDossier;
	}

	@Override
	public boolean isCreateDossier() {
		return _createDossier;
	}

	@Override
	public void setCreateDossier(boolean createDossier) {
		_createDossier = createDossier;
	}

	@Override
	public String getReferenceUid() {
		if (_referenceUid == null) {
			return StringPool.BLANK;
		}
		else {
			return _referenceUid;
		}
	}

	@Override
	public void setReferenceUid(String referenceUid) {
		_referenceUid = referenceUid;
	}

	@Override
	public String getActionCode() {
		if (_actionCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _actionCode;
		}
	}

	@Override
	public void setActionCode(String actionCode) {
		_actionCode = actionCode;
	}

	@Override
	public String getActionUser() {
		if (_actionUser == null) {
			return StringPool.BLANK;
		}
		else {
			return _actionUser;
		}
	}

	@Override
	public void setActionUser(String actionUser) {
		_actionUser = actionUser;
	}

	@Override
	public String getActionNote() {
		if (_actionNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _actionNote;
		}
	}

	@Override
	public void setActionNote(String actionNote) {
		_actionNote = actionNote;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				DossierActionSync.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DossierActionSync.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DossierActionSync toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DossierActionSync)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossierActionSyncImpl dossierActionSyncImpl = new DossierActionSyncImpl();

		dossierActionSyncImpl.setUuid(getUuid());
		dossierActionSyncImpl.setDossierActionSyncId(getDossierActionSyncId());
		dossierActionSyncImpl.setCompanyId(getCompanyId());
		dossierActionSyncImpl.setGroupId(getGroupId());
		dossierActionSyncImpl.setUserId(getUserId());
		dossierActionSyncImpl.setUserName(getUserName());
		dossierActionSyncImpl.setCreateDate(getCreateDate());
		dossierActionSyncImpl.setModifiedDate(getModifiedDate());
		dossierActionSyncImpl.setDossierId(getDossierId());
		dossierActionSyncImpl.setDossierActionId(getDossierActionId());
		dossierActionSyncImpl.setCreateDossier(getCreateDossier());
		dossierActionSyncImpl.setReferenceUid(getReferenceUid());
		dossierActionSyncImpl.setActionCode(getActionCode());
		dossierActionSyncImpl.setActionUser(getActionUser());
		dossierActionSyncImpl.setActionNote(getActionNote());

		dossierActionSyncImpl.resetOriginalValues();

		return dossierActionSyncImpl;
	}

	@Override
	public int compareTo(DossierActionSync dossierActionSync) {
		long primaryKey = dossierActionSync.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DossierActionSync)) {
			return false;
		}

		DossierActionSync dossierActionSync = (DossierActionSync)obj;

		long primaryKey = dossierActionSync.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		DossierActionSyncModelImpl dossierActionSyncModelImpl = this;

		dossierActionSyncModelImpl._originalUuid = dossierActionSyncModelImpl._uuid;

		dossierActionSyncModelImpl._originalCompanyId = dossierActionSyncModelImpl._companyId;

		dossierActionSyncModelImpl._setOriginalCompanyId = false;

		dossierActionSyncModelImpl._originalGroupId = dossierActionSyncModelImpl._groupId;

		dossierActionSyncModelImpl._setOriginalGroupId = false;

		dossierActionSyncModelImpl._setModifiedDate = false;

		dossierActionSyncModelImpl._originalDossierActionId = dossierActionSyncModelImpl._dossierActionId;

		dossierActionSyncModelImpl._setOriginalDossierActionId = false;

		dossierActionSyncModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DossierActionSync> toCacheModel() {
		DossierActionSyncCacheModel dossierActionSyncCacheModel = new DossierActionSyncCacheModel();

		dossierActionSyncCacheModel.uuid = getUuid();

		String uuid = dossierActionSyncCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			dossierActionSyncCacheModel.uuid = null;
		}

		dossierActionSyncCacheModel.dossierActionSyncId = getDossierActionSyncId();

		dossierActionSyncCacheModel.companyId = getCompanyId();

		dossierActionSyncCacheModel.groupId = getGroupId();

		dossierActionSyncCacheModel.userId = getUserId();

		dossierActionSyncCacheModel.userName = getUserName();

		String userName = dossierActionSyncCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			dossierActionSyncCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			dossierActionSyncCacheModel.createDate = createDate.getTime();
		}
		else {
			dossierActionSyncCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dossierActionSyncCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dossierActionSyncCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dossierActionSyncCacheModel.dossierId = getDossierId();

		dossierActionSyncCacheModel.dossierActionId = getDossierActionId();

		dossierActionSyncCacheModel.createDossier = getCreateDossier();

		dossierActionSyncCacheModel.referenceUid = getReferenceUid();

		String referenceUid = dossierActionSyncCacheModel.referenceUid;

		if ((referenceUid != null) && (referenceUid.length() == 0)) {
			dossierActionSyncCacheModel.referenceUid = null;
		}

		dossierActionSyncCacheModel.actionCode = getActionCode();

		String actionCode = dossierActionSyncCacheModel.actionCode;

		if ((actionCode != null) && (actionCode.length() == 0)) {
			dossierActionSyncCacheModel.actionCode = null;
		}

		dossierActionSyncCacheModel.actionUser = getActionUser();

		String actionUser = dossierActionSyncCacheModel.actionUser;

		if ((actionUser != null) && (actionUser.length() == 0)) {
			dossierActionSyncCacheModel.actionUser = null;
		}

		dossierActionSyncCacheModel.actionNote = getActionNote();

		String actionNote = dossierActionSyncCacheModel.actionNote;

		if ((actionNote != null) && (actionNote.length() == 0)) {
			dossierActionSyncCacheModel.actionNote = null;
		}

		return dossierActionSyncCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", dossierActionSyncId=");
		sb.append(getDossierActionSyncId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", dossierActionId=");
		sb.append(getDossierActionId());
		sb.append(", createDossier=");
		sb.append(getCreateDossier());
		sb.append(", referenceUid=");
		sb.append(getReferenceUid());
		sb.append(", actionCode=");
		sb.append(getActionCode());
		sb.append(", actionUser=");
		sb.append(getActionUser());
		sb.append(", actionNote=");
		sb.append(getActionNote());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.DossierActionSync");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierActionSyncId</column-name><column-value><![CDATA[");
		sb.append(getDossierActionSyncId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierActionId</column-name><column-value><![CDATA[");
		sb.append(getDossierActionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDossier</column-name><column-value><![CDATA[");
		sb.append(getCreateDossier());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>referenceUid</column-name><column-value><![CDATA[");
		sb.append(getReferenceUid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionCode</column-name><column-value><![CDATA[");
		sb.append(getActionCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionUser</column-name><column-value><![CDATA[");
		sb.append(getActionUser());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionNote</column-name><column-value><![CDATA[");
		sb.append(getActionNote());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = DossierActionSync.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			DossierActionSync.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _dossierActionSyncId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _dossierId;
	private long _dossierActionId;
	private long _originalDossierActionId;
	private boolean _setOriginalDossierActionId;
	private boolean _createDossier;
	private String _referenceUid;
	private String _actionCode;
	private String _actionUser;
	private String _actionNote;
	private long _columnBitmask;
	private DossierActionSync _escapedModel;
}