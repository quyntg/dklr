/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.dossiermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import org.opencps.dossiermgt.model.ServiceProcess;
import org.opencps.dossiermgt.model.ServiceProcessModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ServiceProcess service. Represents a row in the &quot;opencps_serviceprocess&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ServiceProcessModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ServiceProcessImpl}.
 * </p>
 *
 * @author huymq
 * @see ServiceProcessImpl
 * @see ServiceProcess
 * @see ServiceProcessModel
 * @generated
 */
@ProviderType
public class ServiceProcessModelImpl extends BaseModelImpl<ServiceProcess>
	implements ServiceProcessModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a service process model instance should use the {@link ServiceProcess} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_serviceprocess";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "serviceProcessId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "processNo", Types.VARCHAR },
			{ "processName", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "durationCount", Types.INTEGER },
			{ "durationUnit", Types.INTEGER },
			{ "counter", Types.BIGINT },
			{ "generateDossierNo", Types.BOOLEAN },
			{ "dossierNoPattern", Types.VARCHAR },
			{ "generateDueDate", Types.BOOLEAN },
			{ "dueDatePattern", Types.VARCHAR },
			{ "generatePassword", Types.BOOLEAN },
			{ "directNotification", Types.BOOLEAN },
			{ "serverNo", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceProcessId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("processNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("processName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("durationCount", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("durationUnit", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("counter", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("generateDossierNo", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("dossierNoPattern", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("generateDueDate", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("dueDatePattern", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("generatePassword", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("directNotification", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("serverNo", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_serviceprocess (uuid_ VARCHAR(75) null,serviceProcessId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,processNo VARCHAR(75) null,processName VARCHAR(75) null,description VARCHAR(75) null,durationCount INTEGER,durationUnit INTEGER,counter LONG,generateDossierNo BOOLEAN,dossierNoPattern VARCHAR(75) null,generateDueDate BOOLEAN,dueDatePattern VARCHAR(75) null,generatePassword BOOLEAN,directNotification BOOLEAN,serverNo VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_serviceprocess";
	public static final String ORDER_BY_JPQL = " ORDER BY serviceProcess.serviceProcessId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_serviceprocess.serviceProcessId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.dossiermgt.model.ServiceProcess"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.dossiermgt.model.ServiceProcess"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.dossiermgt.model.ServiceProcess"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long PROCESSNAME_COLUMN_BITMASK = 4L;
	public static final long PROCESSNO_COLUMN_BITMASK = 8L;
	public static final long SERVERNO_COLUMN_BITMASK = 16L;
	public static final long UUID_COLUMN_BITMASK = 32L;
	public static final long SERVICEPROCESSID_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.dossiermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.dossiermgt.model.ServiceProcess"));

	public ServiceProcessModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _serviceProcessId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setServiceProcessId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _serviceProcessId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ServiceProcess.class;
	}

	@Override
	public String getModelClassName() {
		return ServiceProcess.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("serviceProcessId", getServiceProcessId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("processNo", getProcessNo());
		attributes.put("processName", getProcessName());
		attributes.put("description", getDescription());
		attributes.put("durationCount", getDurationCount());
		attributes.put("durationUnit", getDurationUnit());
		attributes.put("counter", getCounter());
		attributes.put("generateDossierNo", getGenerateDossierNo());
		attributes.put("dossierNoPattern", getDossierNoPattern());
		attributes.put("generateDueDate", getGenerateDueDate());
		attributes.put("dueDatePattern", getDueDatePattern());
		attributes.put("generatePassword", getGeneratePassword());
		attributes.put("directNotification", getDirectNotification());
		attributes.put("serverNo", getServerNo());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long serviceProcessId = (Long)attributes.get("serviceProcessId");

		if (serviceProcessId != null) {
			setServiceProcessId(serviceProcessId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String processNo = (String)attributes.get("processNo");

		if (processNo != null) {
			setProcessNo(processNo);
		}

		String processName = (String)attributes.get("processName");

		if (processName != null) {
			setProcessName(processName);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Integer durationCount = (Integer)attributes.get("durationCount");

		if (durationCount != null) {
			setDurationCount(durationCount);
		}

		Integer durationUnit = (Integer)attributes.get("durationUnit");

		if (durationUnit != null) {
			setDurationUnit(durationUnit);
		}

		Long counter = (Long)attributes.get("counter");

		if (counter != null) {
			setCounter(counter);
		}

		Boolean generateDossierNo = (Boolean)attributes.get("generateDossierNo");

		if (generateDossierNo != null) {
			setGenerateDossierNo(generateDossierNo);
		}

		String dossierNoPattern = (String)attributes.get("dossierNoPattern");

		if (dossierNoPattern != null) {
			setDossierNoPattern(dossierNoPattern);
		}

		Boolean generateDueDate = (Boolean)attributes.get("generateDueDate");

		if (generateDueDate != null) {
			setGenerateDueDate(generateDueDate);
		}

		String dueDatePattern = (String)attributes.get("dueDatePattern");

		if (dueDatePattern != null) {
			setDueDatePattern(dueDatePattern);
		}

		Boolean generatePassword = (Boolean)attributes.get("generatePassword");

		if (generatePassword != null) {
			setGeneratePassword(generatePassword);
		}

		Boolean directNotification = (Boolean)attributes.get(
				"directNotification");

		if (directNotification != null) {
			setDirectNotification(directNotification);
		}

		String serverNo = (String)attributes.get("serverNo");

		if (serverNo != null) {
			setServerNo(serverNo);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getServiceProcessId() {
		return _serviceProcessId;
	}

	@Override
	public void setServiceProcessId(long serviceProcessId) {
		_serviceProcessId = serviceProcessId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getProcessNo() {
		if (_processNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _processNo;
		}
	}

	@Override
	public void setProcessNo(String processNo) {
		_columnBitmask |= PROCESSNO_COLUMN_BITMASK;

		if (_originalProcessNo == null) {
			_originalProcessNo = _processNo;
		}

		_processNo = processNo;
	}

	public String getOriginalProcessNo() {
		return GetterUtil.getString(_originalProcessNo);
	}

	@Override
	public String getProcessName() {
		if (_processName == null) {
			return StringPool.BLANK;
		}
		else {
			return _processName;
		}
	}

	@Override
	public void setProcessName(String processName) {
		_columnBitmask |= PROCESSNAME_COLUMN_BITMASK;

		if (_originalProcessName == null) {
			_originalProcessName = _processName;
		}

		_processName = processName;
	}

	public String getOriginalProcessName() {
		return GetterUtil.getString(_originalProcessName);
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public int getDurationCount() {
		return _durationCount;
	}

	@Override
	public void setDurationCount(int durationCount) {
		_durationCount = durationCount;
	}

	@Override
	public int getDurationUnit() {
		return _durationUnit;
	}

	@Override
	public void setDurationUnit(int durationUnit) {
		_durationUnit = durationUnit;
	}

	@Override
	public long getCounter() {
		return _counter;
	}

	@Override
	public void setCounter(long counter) {
		_counter = counter;
	}

	@Override
	public boolean getGenerateDossierNo() {
		return _generateDossierNo;
	}

	@Override
	public boolean isGenerateDossierNo() {
		return _generateDossierNo;
	}

	@Override
	public void setGenerateDossierNo(boolean generateDossierNo) {
		_generateDossierNo = generateDossierNo;
	}

	@Override
	public String getDossierNoPattern() {
		if (_dossierNoPattern == null) {
			return StringPool.BLANK;
		}
		else {
			return _dossierNoPattern;
		}
	}

	@Override
	public void setDossierNoPattern(String dossierNoPattern) {
		_dossierNoPattern = dossierNoPattern;
	}

	@Override
	public boolean getGenerateDueDate() {
		return _generateDueDate;
	}

	@Override
	public boolean isGenerateDueDate() {
		return _generateDueDate;
	}

	@Override
	public void setGenerateDueDate(boolean generateDueDate) {
		_generateDueDate = generateDueDate;
	}

	@Override
	public String getDueDatePattern() {
		if (_dueDatePattern == null) {
			return StringPool.BLANK;
		}
		else {
			return _dueDatePattern;
		}
	}

	@Override
	public void setDueDatePattern(String dueDatePattern) {
		_dueDatePattern = dueDatePattern;
	}

	@Override
	public boolean getGeneratePassword() {
		return _generatePassword;
	}

	@Override
	public boolean isGeneratePassword() {
		return _generatePassword;
	}

	@Override
	public void setGeneratePassword(boolean generatePassword) {
		_generatePassword = generatePassword;
	}

	@Override
	public boolean getDirectNotification() {
		return _directNotification;
	}

	@Override
	public boolean isDirectNotification() {
		return _directNotification;
	}

	@Override
	public void setDirectNotification(boolean directNotification) {
		_directNotification = directNotification;
	}

	@Override
	public String getServerNo() {
		if (_serverNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _serverNo;
		}
	}

	@Override
	public void setServerNo(String serverNo) {
		_columnBitmask |= SERVERNO_COLUMN_BITMASK;

		if (_originalServerNo == null) {
			_originalServerNo = _serverNo;
		}

		_serverNo = serverNo;
	}

	public String getOriginalServerNo() {
		return GetterUtil.getString(_originalServerNo);
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				ServiceProcess.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			ServiceProcess.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ServiceProcess toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ServiceProcess)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ServiceProcessImpl serviceProcessImpl = new ServiceProcessImpl();

		serviceProcessImpl.setUuid(getUuid());
		serviceProcessImpl.setServiceProcessId(getServiceProcessId());
		serviceProcessImpl.setCompanyId(getCompanyId());
		serviceProcessImpl.setGroupId(getGroupId());
		serviceProcessImpl.setUserId(getUserId());
		serviceProcessImpl.setUserName(getUserName());
		serviceProcessImpl.setCreateDate(getCreateDate());
		serviceProcessImpl.setModifiedDate(getModifiedDate());
		serviceProcessImpl.setProcessNo(getProcessNo());
		serviceProcessImpl.setProcessName(getProcessName());
		serviceProcessImpl.setDescription(getDescription());
		serviceProcessImpl.setDurationCount(getDurationCount());
		serviceProcessImpl.setDurationUnit(getDurationUnit());
		serviceProcessImpl.setCounter(getCounter());
		serviceProcessImpl.setGenerateDossierNo(getGenerateDossierNo());
		serviceProcessImpl.setDossierNoPattern(getDossierNoPattern());
		serviceProcessImpl.setGenerateDueDate(getGenerateDueDate());
		serviceProcessImpl.setDueDatePattern(getDueDatePattern());
		serviceProcessImpl.setGeneratePassword(getGeneratePassword());
		serviceProcessImpl.setDirectNotification(getDirectNotification());
		serviceProcessImpl.setServerNo(getServerNo());

		serviceProcessImpl.resetOriginalValues();

		return serviceProcessImpl;
	}

	@Override
	public int compareTo(ServiceProcess serviceProcess) {
		long primaryKey = serviceProcess.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ServiceProcess)) {
			return false;
		}

		ServiceProcess serviceProcess = (ServiceProcess)obj;

		long primaryKey = serviceProcess.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ServiceProcessModelImpl serviceProcessModelImpl = this;

		serviceProcessModelImpl._originalUuid = serviceProcessModelImpl._uuid;

		serviceProcessModelImpl._originalCompanyId = serviceProcessModelImpl._companyId;

		serviceProcessModelImpl._setOriginalCompanyId = false;

		serviceProcessModelImpl._originalGroupId = serviceProcessModelImpl._groupId;

		serviceProcessModelImpl._setOriginalGroupId = false;

		serviceProcessModelImpl._setModifiedDate = false;

		serviceProcessModelImpl._originalProcessNo = serviceProcessModelImpl._processNo;

		serviceProcessModelImpl._originalProcessName = serviceProcessModelImpl._processName;

		serviceProcessModelImpl._originalServerNo = serviceProcessModelImpl._serverNo;

		serviceProcessModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ServiceProcess> toCacheModel() {
		ServiceProcessCacheModel serviceProcessCacheModel = new ServiceProcessCacheModel();

		serviceProcessCacheModel.uuid = getUuid();

		String uuid = serviceProcessCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			serviceProcessCacheModel.uuid = null;
		}

		serviceProcessCacheModel.serviceProcessId = getServiceProcessId();

		serviceProcessCacheModel.companyId = getCompanyId();

		serviceProcessCacheModel.groupId = getGroupId();

		serviceProcessCacheModel.userId = getUserId();

		serviceProcessCacheModel.userName = getUserName();

		String userName = serviceProcessCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			serviceProcessCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			serviceProcessCacheModel.createDate = createDate.getTime();
		}
		else {
			serviceProcessCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			serviceProcessCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			serviceProcessCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		serviceProcessCacheModel.processNo = getProcessNo();

		String processNo = serviceProcessCacheModel.processNo;

		if ((processNo != null) && (processNo.length() == 0)) {
			serviceProcessCacheModel.processNo = null;
		}

		serviceProcessCacheModel.processName = getProcessName();

		String processName = serviceProcessCacheModel.processName;

		if ((processName != null) && (processName.length() == 0)) {
			serviceProcessCacheModel.processName = null;
		}

		serviceProcessCacheModel.description = getDescription();

		String description = serviceProcessCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			serviceProcessCacheModel.description = null;
		}

		serviceProcessCacheModel.durationCount = getDurationCount();

		serviceProcessCacheModel.durationUnit = getDurationUnit();

		serviceProcessCacheModel.counter = getCounter();

		serviceProcessCacheModel.generateDossierNo = getGenerateDossierNo();

		serviceProcessCacheModel.dossierNoPattern = getDossierNoPattern();

		String dossierNoPattern = serviceProcessCacheModel.dossierNoPattern;

		if ((dossierNoPattern != null) && (dossierNoPattern.length() == 0)) {
			serviceProcessCacheModel.dossierNoPattern = null;
		}

		serviceProcessCacheModel.generateDueDate = getGenerateDueDate();

		serviceProcessCacheModel.dueDatePattern = getDueDatePattern();

		String dueDatePattern = serviceProcessCacheModel.dueDatePattern;

		if ((dueDatePattern != null) && (dueDatePattern.length() == 0)) {
			serviceProcessCacheModel.dueDatePattern = null;
		}

		serviceProcessCacheModel.generatePassword = getGeneratePassword();

		serviceProcessCacheModel.directNotification = getDirectNotification();

		serviceProcessCacheModel.serverNo = getServerNo();

		String serverNo = serviceProcessCacheModel.serverNo;

		if ((serverNo != null) && (serverNo.length() == 0)) {
			serviceProcessCacheModel.serverNo = null;
		}

		return serviceProcessCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(43);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", serviceProcessId=");
		sb.append(getServiceProcessId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", processNo=");
		sb.append(getProcessNo());
		sb.append(", processName=");
		sb.append(getProcessName());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", durationCount=");
		sb.append(getDurationCount());
		sb.append(", durationUnit=");
		sb.append(getDurationUnit());
		sb.append(", counter=");
		sb.append(getCounter());
		sb.append(", generateDossierNo=");
		sb.append(getGenerateDossierNo());
		sb.append(", dossierNoPattern=");
		sb.append(getDossierNoPattern());
		sb.append(", generateDueDate=");
		sb.append(getGenerateDueDate());
		sb.append(", dueDatePattern=");
		sb.append(getDueDatePattern());
		sb.append(", generatePassword=");
		sb.append(getGeneratePassword());
		sb.append(", directNotification=");
		sb.append(getDirectNotification());
		sb.append(", serverNo=");
		sb.append(getServerNo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(67);

		sb.append("<model><model-name>");
		sb.append("org.opencps.dossiermgt.model.ServiceProcess");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceProcessId</column-name><column-value><![CDATA[");
		sb.append(getServiceProcessId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processNo</column-name><column-value><![CDATA[");
		sb.append(getProcessNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processName</column-name><column-value><![CDATA[");
		sb.append(getProcessName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>durationCount</column-name><column-value><![CDATA[");
		sb.append(getDurationCount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>durationUnit</column-name><column-value><![CDATA[");
		sb.append(getDurationUnit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>counter</column-name><column-value><![CDATA[");
		sb.append(getCounter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>generateDossierNo</column-name><column-value><![CDATA[");
		sb.append(getGenerateDossierNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierNoPattern</column-name><column-value><![CDATA[");
		sb.append(getDossierNoPattern());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>generateDueDate</column-name><column-value><![CDATA[");
		sb.append(getGenerateDueDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dueDatePattern</column-name><column-value><![CDATA[");
		sb.append(getDueDatePattern());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>generatePassword</column-name><column-value><![CDATA[");
		sb.append(getGeneratePassword());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>directNotification</column-name><column-value><![CDATA[");
		sb.append(getDirectNotification());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serverNo</column-name><column-value><![CDATA[");
		sb.append(getServerNo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ServiceProcess.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ServiceProcess.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _serviceProcessId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _processNo;
	private String _originalProcessNo;
	private String _processName;
	private String _originalProcessName;
	private String _description;
	private int _durationCount;
	private int _durationUnit;
	private long _counter;
	private boolean _generateDossierNo;
	private String _dossierNoPattern;
	private boolean _generateDueDate;
	private String _dueDatePattern;
	private boolean _generatePassword;
	private boolean _directNotification;
	private String _serverNo;
	private String _originalServerNo;
	private long _columnBitmask;
	private ServiceProcess _escapedModel;
}