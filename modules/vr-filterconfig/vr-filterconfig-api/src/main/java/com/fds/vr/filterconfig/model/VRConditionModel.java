/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.fds.vr.filterconfig.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the VRCondition service. Represents a row in the &quot;vr_condition&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.fds.vr.filterconfig.model.impl.VRConditionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.fds.vr.filterconfig.model.impl.VRConditionImpl}.
 * </p>
 *
 * @author NhanHoang
 * @see VRCondition
 * @see com.fds.vr.filterconfig.model.impl.VRConditionImpl
 * @see com.fds.vr.filterconfig.model.impl.VRConditionModelImpl
 * @generated
 */
@ProviderType
public interface VRConditionModel extends BaseModel<VRCondition> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a vr condition model instance should use the {@link VRCondition} interface instead.
	 */

	/**
	 * Returns the primary key of this vr condition.
	 *
	 * @return the primary key of this vr condition
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this vr condition.
	 *
	 * @param primaryKey the primary key of this vr condition
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this vr condition.
	 *
	 * @return the ID of this vr condition
	 */
	public long getId();

	/**
	 * Sets the ID of this vr condition.
	 *
	 * @param id the ID of this vr condition
	 */
	public void setId(long id);

	/**
	 * Returns the filter module code of this vr condition.
	 *
	 * @return the filter module code of this vr condition
	 */
	@AutoEscape
	public String getFilterModuleCode();

	/**
	 * Sets the filter module code of this vr condition.
	 *
	 * @param filterModuleCode the filter module code of this vr condition
	 */
	public void setFilterModuleCode(String filterModuleCode);

	/**
	 * Returns the filter table field of this vr condition.
	 *
	 * @return the filter table field of this vr condition
	 */
	@AutoEscape
	public String getFilterTableField();

	/**
	 * Sets the filter table field of this vr condition.
	 *
	 * @param filterTableField the filter table field of this vr condition
	 */
	public void setFilterTableField(String filterTableField);

	/**
	 * Returns the filter table name of this vr condition.
	 *
	 * @return the filter table name of this vr condition
	 */
	@AutoEscape
	public String getFilterTableName();

	/**
	 * Sets the filter table name of this vr condition.
	 *
	 * @param filterTableName the filter table name of this vr condition
	 */
	public void setFilterTableName(String filterTableName);

	/**
	 * Returns the specification code of this vr condition.
	 *
	 * @return the specification code of this vr condition
	 */
	@AutoEscape
	public String getSpecificationCode();

	/**
	 * Sets the specification code of this vr condition.
	 *
	 * @param specificationCode the specification code of this vr condition
	 */
	public void setSpecificationCode(String specificationCode);

	/**
	 * Returns the specification display name of this vr condition.
	 *
	 * @return the specification display name of this vr condition
	 */
	@AutoEscape
	public String getSpecificationDisplayName();

	/**
	 * Sets the specification display name of this vr condition.
	 *
	 * @param specificationDisplayName the specification display name of this vr condition
	 */
	public void setSpecificationDisplayName(String specificationDisplayName);

	/**
	 * Returns the specification data collection ID of this vr condition.
	 *
	 * @return the specification data collection ID of this vr condition
	 */
	@AutoEscape
	public String getSpecificationDataCollectionID();

	/**
	 * Sets the specification data collection ID of this vr condition.
	 *
	 * @param specificationDataCollectionID the specification data collection ID of this vr condition
	 */
	public void setSpecificationDataCollectionID(
		String specificationDataCollectionID);

	/**
	 * Returns the sequence no of this vr condition.
	 *
	 * @return the sequence no of this vr condition
	 */
	public long getSequenceNo();

	/**
	 * Sets the sequence no of this vr condition.
	 *
	 * @param sequenceNo the sequence no of this vr condition
	 */
	public void setSequenceNo(long sequenceNo);

	/**
	 * Returns the specification basic unit of this vr condition.
	 *
	 * @return the specification basic unit of this vr condition
	 */
	@AutoEscape
	public String getSpecificationBasicUnit();

	/**
	 * Sets the specification basic unit of this vr condition.
	 *
	 * @param specificationBasicUnit the specification basic unit of this vr condition
	 */
	public void setSpecificationBasicUnit(String specificationBasicUnit);

	/**
	 * Returns the specification standard of this vr condition.
	 *
	 * @return the specification standard of this vr condition
	 */
	@AutoEscape
	public String getSpecificationStandard();

	/**
	 * Sets the specification standard of this vr condition.
	 *
	 * @param specificationStandard the specification standard of this vr condition
	 */
	public void setSpecificationStandard(String specificationStandard);

	/**
	 * Returns the specification group of this vr condition.
	 *
	 * @return the specification group of this vr condition
	 */
	@AutoEscape
	public String getSpecificationGroup();

	/**
	 * Sets the specification group of this vr condition.
	 *
	 * @param specificationGroup the specification group of this vr condition
	 */
	public void setSpecificationGroup(String specificationGroup);

	/**
	 * Returns the modify date of this vr condition.
	 *
	 * @return the modify date of this vr condition
	 */
	public Date getModifyDate();

	/**
	 * Sets the modify date of this vr condition.
	 *
	 * @param modifyDate the modify date of this vr condition
	 */
	public void setModifyDate(Date modifyDate);

	/**
	 * Returns the sync date of this vr condition.
	 *
	 * @return the sync date of this vr condition
	 */
	public Date getSyncDate();

	/**
	 * Sets the sync date of this vr condition.
	 *
	 * @param syncDate the sync date of this vr condition
	 */
	public void setSyncDate(Date syncDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(VRCondition vrCondition);

	@Override
	public int hashCode();

	@Override
	public CacheModel<VRCondition> toCacheModel();

	@Override
	public VRCondition toEscapedModel();

	@Override
	public VRCondition toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}