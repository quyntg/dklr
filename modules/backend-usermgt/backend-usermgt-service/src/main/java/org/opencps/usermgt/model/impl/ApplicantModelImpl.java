/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.usermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import org.opencps.usermgt.model.Applicant;
import org.opencps.usermgt.model.ApplicantModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Applicant service. Represents a row in the &quot;opencps_applicant&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ApplicantModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ApplicantImpl}.
 * </p>
 *
 * @author khoavu
 * @see ApplicantImpl
 * @see Applicant
 * @see ApplicantModel
 * @generated
 */
@ProviderType
public class ApplicantModelImpl extends BaseModelImpl<Applicant>
	implements ApplicantModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a applicant model instance should use the {@link Applicant} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_applicant";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "applicantId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "applicantName", Types.VARCHAR },
			{ "applicantIdType", Types.VARCHAR },
			{ "applicantIdNo", Types.VARCHAR },
			{ "applicantIdDate", Types.TIMESTAMP },
			{ "address", Types.VARCHAR },
			{ "cityCode", Types.VARCHAR },
			{ "cityName", Types.VARCHAR },
			{ "districtCode", Types.VARCHAR },
			{ "districtName", Types.VARCHAR },
			{ "wardCode", Types.VARCHAR },
			{ "wardName", Types.VARCHAR },
			{ "contactName", Types.VARCHAR },
			{ "contactTelNo", Types.VARCHAR },
			{ "contactEmail", Types.VARCHAR },
			{ "mappingUserId", Types.BIGINT },
			{ "activationCode", Types.VARCHAR },
			{ "lock_", Types.BOOLEAN },
			{ "profile", Types.VARCHAR },
			{ "tmpPass", Types.VARCHAR },
			{ "representativeEnterprise", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("applicantName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantIdType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantIdNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("applicantIdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cityCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cityName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("districtCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("districtName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("wardCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("wardName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactTelNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mappingUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("activationCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lock_", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("profile", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tmpPass", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("representativeEnterprise", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_applicant (uuid_ VARCHAR(75) null,applicantId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,applicantName VARCHAR(75) null,applicantIdType VARCHAR(75) null,applicantIdNo VARCHAR(75) null,applicantIdDate DATE null,address VARCHAR(75) null,cityCode VARCHAR(75) null,cityName VARCHAR(75) null,districtCode VARCHAR(75) null,districtName VARCHAR(75) null,wardCode VARCHAR(75) null,wardName VARCHAR(75) null,contactName VARCHAR(75) null,contactTelNo VARCHAR(75) null,contactEmail VARCHAR(75) null,mappingUserId LONG,activationCode VARCHAR(75) null,lock_ BOOLEAN,profile VARCHAR(75) null,tmpPass VARCHAR(75) null,representativeEnterprise VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_applicant";
	public static final String ORDER_BY_JPQL = " ORDER BY applicant.applicantName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_applicant.applicantName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.usermgt.model.Applicant"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.usermgt.model.Applicant"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.usermgt.model.Applicant"),
			true);
	public static final long APPLICANTIDNO_COLUMN_BITMASK = 1L;
	public static final long COMPANYID_COLUMN_BITMASK = 2L;
	public static final long CONTACTEMAIL_COLUMN_BITMASK = 4L;
	public static final long CONTACTTELNO_COLUMN_BITMASK = 8L;
	public static final long GROUPID_COLUMN_BITMASK = 16L;
	public static final long MAPPINGUSERID_COLUMN_BITMASK = 32L;
	public static final long UUID_COLUMN_BITMASK = 64L;
	public static final long APPLICANTNAME_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.usermgt.model.Applicant"));

	public ApplicantModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _applicantId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setApplicantId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _applicantId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Applicant.class;
	}

	@Override
	public String getModelClassName() {
		return Applicant.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("applicantId", getApplicantId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("applicantName", getApplicantName());
		attributes.put("applicantIdType", getApplicantIdType());
		attributes.put("applicantIdNo", getApplicantIdNo());
		attributes.put("applicantIdDate", getApplicantIdDate());
		attributes.put("address", getAddress());
		attributes.put("cityCode", getCityCode());
		attributes.put("cityName", getCityName());
		attributes.put("districtCode", getDistrictCode());
		attributes.put("districtName", getDistrictName());
		attributes.put("wardCode", getWardCode());
		attributes.put("wardName", getWardName());
		attributes.put("contactName", getContactName());
		attributes.put("contactTelNo", getContactTelNo());
		attributes.put("contactEmail", getContactEmail());
		attributes.put("mappingUserId", getMappingUserId());
		attributes.put("activationCode", getActivationCode());
		attributes.put("lock_", getLock_());
		attributes.put("profile", getProfile());
		attributes.put("tmpPass", getTmpPass());
		attributes.put("representativeEnterprise", getRepresentativeEnterprise());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long applicantId = (Long)attributes.get("applicantId");

		if (applicantId != null) {
			setApplicantId(applicantId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String applicantName = (String)attributes.get("applicantName");

		if (applicantName != null) {
			setApplicantName(applicantName);
		}

		String applicantIdType = (String)attributes.get("applicantIdType");

		if (applicantIdType != null) {
			setApplicantIdType(applicantIdType);
		}

		String applicantIdNo = (String)attributes.get("applicantIdNo");

		if (applicantIdNo != null) {
			setApplicantIdNo(applicantIdNo);
		}

		Date applicantIdDate = (Date)attributes.get("applicantIdDate");

		if (applicantIdDate != null) {
			setApplicantIdDate(applicantIdDate);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String cityCode = (String)attributes.get("cityCode");

		if (cityCode != null) {
			setCityCode(cityCode);
		}

		String cityName = (String)attributes.get("cityName");

		if (cityName != null) {
			setCityName(cityName);
		}

		String districtCode = (String)attributes.get("districtCode");

		if (districtCode != null) {
			setDistrictCode(districtCode);
		}

		String districtName = (String)attributes.get("districtName");

		if (districtName != null) {
			setDistrictName(districtName);
		}

		String wardCode = (String)attributes.get("wardCode");

		if (wardCode != null) {
			setWardCode(wardCode);
		}

		String wardName = (String)attributes.get("wardName");

		if (wardName != null) {
			setWardName(wardName);
		}

		String contactName = (String)attributes.get("contactName");

		if (contactName != null) {
			setContactName(contactName);
		}

		String contactTelNo = (String)attributes.get("contactTelNo");

		if (contactTelNo != null) {
			setContactTelNo(contactTelNo);
		}

		String contactEmail = (String)attributes.get("contactEmail");

		if (contactEmail != null) {
			setContactEmail(contactEmail);
		}

		Long mappingUserId = (Long)attributes.get("mappingUserId");

		if (mappingUserId != null) {
			setMappingUserId(mappingUserId);
		}

		String activationCode = (String)attributes.get("activationCode");

		if (activationCode != null) {
			setActivationCode(activationCode);
		}

		Boolean lock_ = (Boolean)attributes.get("lock_");

		if (lock_ != null) {
			setLock_(lock_);
		}

		String profile = (String)attributes.get("profile");

		if (profile != null) {
			setProfile(profile);
		}

		String tmpPass = (String)attributes.get("tmpPass");

		if (tmpPass != null) {
			setTmpPass(tmpPass);
		}

		String representativeEnterprise = (String)attributes.get(
				"representativeEnterprise");

		if (representativeEnterprise != null) {
			setRepresentativeEnterprise(representativeEnterprise);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getApplicantId() {
		return _applicantId;
	}

	@Override
	public void setApplicantId(long applicantId) {
		_applicantId = applicantId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getApplicantName() {
		if (_applicantName == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantName;
		}
	}

	@Override
	public void setApplicantName(String applicantName) {
		_columnBitmask = -1L;

		_applicantName = applicantName;
	}

	@Override
	public String getApplicantIdType() {
		if (_applicantIdType == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantIdType;
		}
	}

	@Override
	public void setApplicantIdType(String applicantIdType) {
		_applicantIdType = applicantIdType;
	}

	@Override
	public String getApplicantIdNo() {
		if (_applicantIdNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicantIdNo;
		}
	}

	@Override
	public void setApplicantIdNo(String applicantIdNo) {
		_columnBitmask |= APPLICANTIDNO_COLUMN_BITMASK;

		if (_originalApplicantIdNo == null) {
			_originalApplicantIdNo = _applicantIdNo;
		}

		_applicantIdNo = applicantIdNo;
	}

	public String getOriginalApplicantIdNo() {
		return GetterUtil.getString(_originalApplicantIdNo);
	}

	@Override
	public Date getApplicantIdDate() {
		return _applicantIdDate;
	}

	@Override
	public void setApplicantIdDate(Date applicantIdDate) {
		_applicantIdDate = applicantIdDate;
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getCityCode() {
		if (_cityCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityCode;
		}
	}

	@Override
	public void setCityCode(String cityCode) {
		_cityCode = cityCode;
	}

	@Override
	public String getCityName() {
		if (_cityName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityName;
		}
	}

	@Override
	public void setCityName(String cityName) {
		_cityName = cityName;
	}

	@Override
	public String getDistrictCode() {
		if (_districtCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtCode;
		}
	}

	@Override
	public void setDistrictCode(String districtCode) {
		_districtCode = districtCode;
	}

	@Override
	public String getDistrictName() {
		if (_districtName == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtName;
		}
	}

	@Override
	public void setDistrictName(String districtName) {
		_districtName = districtName;
	}

	@Override
	public String getWardCode() {
		if (_wardCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardCode;
		}
	}

	@Override
	public void setWardCode(String wardCode) {
		_wardCode = wardCode;
	}

	@Override
	public String getWardName() {
		if (_wardName == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardName;
		}
	}

	@Override
	public void setWardName(String wardName) {
		_wardName = wardName;
	}

	@Override
	public String getContactName() {
		if (_contactName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactName;
		}
	}

	@Override
	public void setContactName(String contactName) {
		_contactName = contactName;
	}

	@Override
	public String getContactTelNo() {
		if (_contactTelNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactTelNo;
		}
	}

	@Override
	public void setContactTelNo(String contactTelNo) {
		_columnBitmask |= CONTACTTELNO_COLUMN_BITMASK;

		if (_originalContactTelNo == null) {
			_originalContactTelNo = _contactTelNo;
		}

		_contactTelNo = contactTelNo;
	}

	public String getOriginalContactTelNo() {
		return GetterUtil.getString(_originalContactTelNo);
	}

	@Override
	public String getContactEmail() {
		if (_contactEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactEmail;
		}
	}

	@Override
	public void setContactEmail(String contactEmail) {
		_columnBitmask |= CONTACTEMAIL_COLUMN_BITMASK;

		if (_originalContactEmail == null) {
			_originalContactEmail = _contactEmail;
		}

		_contactEmail = contactEmail;
	}

	public String getOriginalContactEmail() {
		return GetterUtil.getString(_originalContactEmail);
	}

	@Override
	public long getMappingUserId() {
		return _mappingUserId;
	}

	@Override
	public void setMappingUserId(long mappingUserId) {
		_columnBitmask |= MAPPINGUSERID_COLUMN_BITMASK;

		if (!_setOriginalMappingUserId) {
			_setOriginalMappingUserId = true;

			_originalMappingUserId = _mappingUserId;
		}

		_mappingUserId = mappingUserId;
	}

	@Override
	public String getMappingUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getMappingUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setMappingUserUuid(String mappingUserUuid) {
	}

	public long getOriginalMappingUserId() {
		return _originalMappingUserId;
	}

	@Override
	public String getActivationCode() {
		if (_activationCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _activationCode;
		}
	}

	@Override
	public void setActivationCode(String activationCode) {
		_activationCode = activationCode;
	}

	@Override
	public boolean getLock_() {
		return _lock_;
	}

	@Override
	public boolean isLock_() {
		return _lock_;
	}

	@Override
	public void setLock_(boolean lock_) {
		_lock_ = lock_;
	}

	@Override
	public String getProfile() {
		if (_profile == null) {
			return StringPool.BLANK;
		}
		else {
			return _profile;
		}
	}

	@Override
	public void setProfile(String profile) {
		_profile = profile;
	}

	@Override
	public String getTmpPass() {
		if (_tmpPass == null) {
			return StringPool.BLANK;
		}
		else {
			return _tmpPass;
		}
	}

	@Override
	public void setTmpPass(String tmpPass) {
		_tmpPass = tmpPass;
	}

	@Override
	public String getRepresentativeEnterprise() {
		if (_representativeEnterprise == null) {
			return StringPool.BLANK;
		}
		else {
			return _representativeEnterprise;
		}
	}

	@Override
	public void setRepresentativeEnterprise(String representativeEnterprise) {
		_representativeEnterprise = representativeEnterprise;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Applicant.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Applicant.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Applicant toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Applicant)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ApplicantImpl applicantImpl = new ApplicantImpl();

		applicantImpl.setUuid(getUuid());
		applicantImpl.setApplicantId(getApplicantId());
		applicantImpl.setGroupId(getGroupId());
		applicantImpl.setCompanyId(getCompanyId());
		applicantImpl.setUserId(getUserId());
		applicantImpl.setUserName(getUserName());
		applicantImpl.setCreateDate(getCreateDate());
		applicantImpl.setModifiedDate(getModifiedDate());
		applicantImpl.setApplicantName(getApplicantName());
		applicantImpl.setApplicantIdType(getApplicantIdType());
		applicantImpl.setApplicantIdNo(getApplicantIdNo());
		applicantImpl.setApplicantIdDate(getApplicantIdDate());
		applicantImpl.setAddress(getAddress());
		applicantImpl.setCityCode(getCityCode());
		applicantImpl.setCityName(getCityName());
		applicantImpl.setDistrictCode(getDistrictCode());
		applicantImpl.setDistrictName(getDistrictName());
		applicantImpl.setWardCode(getWardCode());
		applicantImpl.setWardName(getWardName());
		applicantImpl.setContactName(getContactName());
		applicantImpl.setContactTelNo(getContactTelNo());
		applicantImpl.setContactEmail(getContactEmail());
		applicantImpl.setMappingUserId(getMappingUserId());
		applicantImpl.setActivationCode(getActivationCode());
		applicantImpl.setLock_(getLock_());
		applicantImpl.setProfile(getProfile());
		applicantImpl.setTmpPass(getTmpPass());
		applicantImpl.setRepresentativeEnterprise(getRepresentativeEnterprise());

		applicantImpl.resetOriginalValues();

		return applicantImpl;
	}

	@Override
	public int compareTo(Applicant applicant) {
		int value = 0;

		value = getApplicantName().compareTo(applicant.getApplicantName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Applicant)) {
			return false;
		}

		Applicant applicant = (Applicant)obj;

		long primaryKey = applicant.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ApplicantModelImpl applicantModelImpl = this;

		applicantModelImpl._originalUuid = applicantModelImpl._uuid;

		applicantModelImpl._originalGroupId = applicantModelImpl._groupId;

		applicantModelImpl._setOriginalGroupId = false;

		applicantModelImpl._originalCompanyId = applicantModelImpl._companyId;

		applicantModelImpl._setOriginalCompanyId = false;

		applicantModelImpl._setModifiedDate = false;

		applicantModelImpl._originalApplicantIdNo = applicantModelImpl._applicantIdNo;

		applicantModelImpl._originalContactTelNo = applicantModelImpl._contactTelNo;

		applicantModelImpl._originalContactEmail = applicantModelImpl._contactEmail;

		applicantModelImpl._originalMappingUserId = applicantModelImpl._mappingUserId;

		applicantModelImpl._setOriginalMappingUserId = false;

		applicantModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Applicant> toCacheModel() {
		ApplicantCacheModel applicantCacheModel = new ApplicantCacheModel();

		applicantCacheModel.uuid = getUuid();

		String uuid = applicantCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			applicantCacheModel.uuid = null;
		}

		applicantCacheModel.applicantId = getApplicantId();

		applicantCacheModel.groupId = getGroupId();

		applicantCacheModel.companyId = getCompanyId();

		applicantCacheModel.userId = getUserId();

		applicantCacheModel.userName = getUserName();

		String userName = applicantCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			applicantCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			applicantCacheModel.createDate = createDate.getTime();
		}
		else {
			applicantCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			applicantCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			applicantCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		applicantCacheModel.applicantName = getApplicantName();

		String applicantName = applicantCacheModel.applicantName;

		if ((applicantName != null) && (applicantName.length() == 0)) {
			applicantCacheModel.applicantName = null;
		}

		applicantCacheModel.applicantIdType = getApplicantIdType();

		String applicantIdType = applicantCacheModel.applicantIdType;

		if ((applicantIdType != null) && (applicantIdType.length() == 0)) {
			applicantCacheModel.applicantIdType = null;
		}

		applicantCacheModel.applicantIdNo = getApplicantIdNo();

		String applicantIdNo = applicantCacheModel.applicantIdNo;

		if ((applicantIdNo != null) && (applicantIdNo.length() == 0)) {
			applicantCacheModel.applicantIdNo = null;
		}

		Date applicantIdDate = getApplicantIdDate();

		if (applicantIdDate != null) {
			applicantCacheModel.applicantIdDate = applicantIdDate.getTime();
		}
		else {
			applicantCacheModel.applicantIdDate = Long.MIN_VALUE;
		}

		applicantCacheModel.address = getAddress();

		String address = applicantCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			applicantCacheModel.address = null;
		}

		applicantCacheModel.cityCode = getCityCode();

		String cityCode = applicantCacheModel.cityCode;

		if ((cityCode != null) && (cityCode.length() == 0)) {
			applicantCacheModel.cityCode = null;
		}

		applicantCacheModel.cityName = getCityName();

		String cityName = applicantCacheModel.cityName;

		if ((cityName != null) && (cityName.length() == 0)) {
			applicantCacheModel.cityName = null;
		}

		applicantCacheModel.districtCode = getDistrictCode();

		String districtCode = applicantCacheModel.districtCode;

		if ((districtCode != null) && (districtCode.length() == 0)) {
			applicantCacheModel.districtCode = null;
		}

		applicantCacheModel.districtName = getDistrictName();

		String districtName = applicantCacheModel.districtName;

		if ((districtName != null) && (districtName.length() == 0)) {
			applicantCacheModel.districtName = null;
		}

		applicantCacheModel.wardCode = getWardCode();

		String wardCode = applicantCacheModel.wardCode;

		if ((wardCode != null) && (wardCode.length() == 0)) {
			applicantCacheModel.wardCode = null;
		}

		applicantCacheModel.wardName = getWardName();

		String wardName = applicantCacheModel.wardName;

		if ((wardName != null) && (wardName.length() == 0)) {
			applicantCacheModel.wardName = null;
		}

		applicantCacheModel.contactName = getContactName();

		String contactName = applicantCacheModel.contactName;

		if ((contactName != null) && (contactName.length() == 0)) {
			applicantCacheModel.contactName = null;
		}

		applicantCacheModel.contactTelNo = getContactTelNo();

		String contactTelNo = applicantCacheModel.contactTelNo;

		if ((contactTelNo != null) && (contactTelNo.length() == 0)) {
			applicantCacheModel.contactTelNo = null;
		}

		applicantCacheModel.contactEmail = getContactEmail();

		String contactEmail = applicantCacheModel.contactEmail;

		if ((contactEmail != null) && (contactEmail.length() == 0)) {
			applicantCacheModel.contactEmail = null;
		}

		applicantCacheModel.mappingUserId = getMappingUserId();

		applicantCacheModel.activationCode = getActivationCode();

		String activationCode = applicantCacheModel.activationCode;

		if ((activationCode != null) && (activationCode.length() == 0)) {
			applicantCacheModel.activationCode = null;
		}

		applicantCacheModel.lock_ = getLock_();

		applicantCacheModel.profile = getProfile();

		String profile = applicantCacheModel.profile;

		if ((profile != null) && (profile.length() == 0)) {
			applicantCacheModel.profile = null;
		}

		applicantCacheModel.tmpPass = getTmpPass();

		String tmpPass = applicantCacheModel.tmpPass;

		if ((tmpPass != null) && (tmpPass.length() == 0)) {
			applicantCacheModel.tmpPass = null;
		}

		applicantCacheModel.representativeEnterprise = getRepresentativeEnterprise();

		String representativeEnterprise = applicantCacheModel.representativeEnterprise;

		if ((representativeEnterprise != null) &&
				(representativeEnterprise.length() == 0)) {
			applicantCacheModel.representativeEnterprise = null;
		}

		return applicantCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(57);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", applicantId=");
		sb.append(getApplicantId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", applicantName=");
		sb.append(getApplicantName());
		sb.append(", applicantIdType=");
		sb.append(getApplicantIdType());
		sb.append(", applicantIdNo=");
		sb.append(getApplicantIdNo());
		sb.append(", applicantIdDate=");
		sb.append(getApplicantIdDate());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", cityCode=");
		sb.append(getCityCode());
		sb.append(", cityName=");
		sb.append(getCityName());
		sb.append(", districtCode=");
		sb.append(getDistrictCode());
		sb.append(", districtName=");
		sb.append(getDistrictName());
		sb.append(", wardCode=");
		sb.append(getWardCode());
		sb.append(", wardName=");
		sb.append(getWardName());
		sb.append(", contactName=");
		sb.append(getContactName());
		sb.append(", contactTelNo=");
		sb.append(getContactTelNo());
		sb.append(", contactEmail=");
		sb.append(getContactEmail());
		sb.append(", mappingUserId=");
		sb.append(getMappingUserId());
		sb.append(", activationCode=");
		sb.append(getActivationCode());
		sb.append(", lock_=");
		sb.append(getLock_());
		sb.append(", profile=");
		sb.append(getProfile());
		sb.append(", tmpPass=");
		sb.append(getTmpPass());
		sb.append(", representativeEnterprise=");
		sb.append(getRepresentativeEnterprise());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(88);

		sb.append("<model><model-name>");
		sb.append("org.opencps.usermgt.model.Applicant");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantId</column-name><column-value><![CDATA[");
		sb.append(getApplicantId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantName</column-name><column-value><![CDATA[");
		sb.append(getApplicantName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantIdType</column-name><column-value><![CDATA[");
		sb.append(getApplicantIdType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantIdNo</column-name><column-value><![CDATA[");
		sb.append(getApplicantIdNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicantIdDate</column-name><column-value><![CDATA[");
		sb.append(getApplicantIdDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityCode</column-name><column-value><![CDATA[");
		sb.append(getCityCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityName</column-name><column-value><![CDATA[");
		sb.append(getCityName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtCode</column-name><column-value><![CDATA[");
		sb.append(getDistrictCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtName</column-name><column-value><![CDATA[");
		sb.append(getDistrictName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardCode</column-name><column-value><![CDATA[");
		sb.append(getWardCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardName</column-name><column-value><![CDATA[");
		sb.append(getWardName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactName</column-name><column-value><![CDATA[");
		sb.append(getContactName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactTelNo</column-name><column-value><![CDATA[");
		sb.append(getContactTelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactEmail</column-name><column-value><![CDATA[");
		sb.append(getContactEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingUserId</column-name><column-value><![CDATA[");
		sb.append(getMappingUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activationCode</column-name><column-value><![CDATA[");
		sb.append(getActivationCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lock_</column-name><column-value><![CDATA[");
		sb.append(getLock_());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>profile</column-name><column-value><![CDATA[");
		sb.append(getProfile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tmpPass</column-name><column-value><![CDATA[");
		sb.append(getTmpPass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>representativeEnterprise</column-name><column-value><![CDATA[");
		sb.append(getRepresentativeEnterprise());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Applicant.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Applicant.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _applicantId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _applicantName;
	private String _applicantIdType;
	private String _applicantIdNo;
	private String _originalApplicantIdNo;
	private Date _applicantIdDate;
	private String _address;
	private String _cityCode;
	private String _cityName;
	private String _districtCode;
	private String _districtName;
	private String _wardCode;
	private String _wardName;
	private String _contactName;
	private String _contactTelNo;
	private String _originalContactTelNo;
	private String _contactEmail;
	private String _originalContactEmail;
	private long _mappingUserId;
	private long _originalMappingUserId;
	private boolean _setOriginalMappingUserId;
	private String _activationCode;
	private boolean _lock_;
	private String _profile;
	private String _tmpPass;
	private String _representativeEnterprise;
	private long _columnBitmask;
	private Applicant _escapedModel;
}