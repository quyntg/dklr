/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.usermgt.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import org.opencps.usermgt.model.WorkingUnit;
import org.opencps.usermgt.model.WorkingUnitModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the WorkingUnit service. Represents a row in the &quot;opencps_workingunit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WorkingUnitModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorkingUnitImpl}.
 * </p>
 *
 * @author khoavu
 * @see WorkingUnitImpl
 * @see WorkingUnit
 * @see WorkingUnitModel
 * @generated
 */
@ProviderType
public class WorkingUnitModelImpl extends BaseModelImpl<WorkingUnit>
	implements WorkingUnitModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a working unit model instance should use the {@link WorkingUnit} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_workingunit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "workingUnitId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "enName", Types.VARCHAR },
			{ "govAgencyCode", Types.VARCHAR },
			{ "parentWorkingUnitId", Types.BIGINT },
			{ "sibling", Types.VARCHAR },
			{ "treeIndex", Types.VARCHAR },
			{ "address", Types.VARCHAR },
			{ "telNo", Types.VARCHAR },
			{ "faxNo", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "website", Types.VARCHAR },
			{ "logoFileEntryId", Types.BIGINT },
			{ "level", Types.INTEGER },
			{ "ceremonyDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workingUnitId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("enName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("govAgencyCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("parentWorkingUnitId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sibling", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("treeIndex", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("address", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("telNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("faxNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("website", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("logoFileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("level", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ceremonyDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table opencps_workingunit (uuid_ VARCHAR(75) null,workingUnitId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,name VARCHAR(75) null,enName VARCHAR(75) null,govAgencyCode VARCHAR(75) null,parentWorkingUnitId LONG,sibling VARCHAR(75) null,treeIndex VARCHAR(75) null,address VARCHAR(75) null,telNo VARCHAR(75) null,faxNo VARCHAR(75) null,email VARCHAR(75) null,website VARCHAR(75) null,logoFileEntryId LONG,level INTEGER,ceremonyDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table opencps_workingunit";
	public static final String ORDER_BY_JPQL = " ORDER BY workingUnit.treeIndex ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_workingunit.treeIndex ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.usermgt.model.WorkingUnit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.usermgt.model.WorkingUnit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.usermgt.model.WorkingUnit"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GOVAGENCYCODE_COLUMN_BITMASK = 2L;
	public static final long GROUPID_COLUMN_BITMASK = 4L;
	public static final long LEVEL_COLUMN_BITMASK = 8L;
	public static final long PARENTWORKINGUNITID_COLUMN_BITMASK = 16L;
	public static final long TREEINDEX_COLUMN_BITMASK = 32L;
	public static final long UUID_COLUMN_BITMASK = 64L;
	public static final long WORKINGUNITID_COLUMN_BITMASK = 128L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.opencps.backend.usermgt.service.util.ServiceProps.get(
				"lock.expiration.time.org.opencps.usermgt.model.WorkingUnit"));

	public WorkingUnitModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _workingUnitId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWorkingUnitId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _workingUnitId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WorkingUnit.class;
	}

	@Override
	public String getModelClassName() {
		return WorkingUnit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("workingUnitId", getWorkingUnitId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("name", getName());
		attributes.put("enName", getEnName());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("parentWorkingUnitId", getParentWorkingUnitId());
		attributes.put("sibling", getSibling());
		attributes.put("treeIndex", getTreeIndex());
		attributes.put("address", getAddress());
		attributes.put("telNo", getTelNo());
		attributes.put("faxNo", getFaxNo());
		attributes.put("email", getEmail());
		attributes.put("website", getWebsite());
		attributes.put("logoFileEntryId", getLogoFileEntryId());
		attributes.put("level", getLevel());
		attributes.put("ceremonyDate", getCeremonyDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long workingUnitId = (Long)attributes.get("workingUnitId");

		if (workingUnitId != null) {
			setWorkingUnitId(workingUnitId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String enName = (String)attributes.get("enName");

		if (enName != null) {
			setEnName(enName);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		Long parentWorkingUnitId = (Long)attributes.get("parentWorkingUnitId");

		if (parentWorkingUnitId != null) {
			setParentWorkingUnitId(parentWorkingUnitId);
		}

		String sibling = (String)attributes.get("sibling");

		if (sibling != null) {
			setSibling(sibling);
		}

		String treeIndex = (String)attributes.get("treeIndex");

		if (treeIndex != null) {
			setTreeIndex(treeIndex);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String telNo = (String)attributes.get("telNo");

		if (telNo != null) {
			setTelNo(telNo);
		}

		String faxNo = (String)attributes.get("faxNo");

		if (faxNo != null) {
			setFaxNo(faxNo);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String website = (String)attributes.get("website");

		if (website != null) {
			setWebsite(website);
		}

		Long logoFileEntryId = (Long)attributes.get("logoFileEntryId");

		if (logoFileEntryId != null) {
			setLogoFileEntryId(logoFileEntryId);
		}

		Integer level = (Integer)attributes.get("level");

		if (level != null) {
			setLevel(level);
		}

		Date ceremonyDate = (Date)attributes.get("ceremonyDate");

		if (ceremonyDate != null) {
			setCeremonyDate(ceremonyDate);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getWorkingUnitId() {
		return _workingUnitId;
	}

	@Override
	public void setWorkingUnitId(long workingUnitId) {
		_columnBitmask |= WORKINGUNITID_COLUMN_BITMASK;

		if (!_setOriginalWorkingUnitId) {
			_setOriginalWorkingUnitId = true;

			_originalWorkingUnitId = _workingUnitId;
		}

		_workingUnitId = workingUnitId;
	}

	public long getOriginalWorkingUnitId() {
		return _originalWorkingUnitId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return StringPool.BLANK;
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getEnName() {
		if (_enName == null) {
			return StringPool.BLANK;
		}
		else {
			return _enName;
		}
	}

	@Override
	public void setEnName(String enName) {
		_enName = enName;
	}

	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_columnBitmask |= GOVAGENCYCODE_COLUMN_BITMASK;

		if (_originalGovAgencyCode == null) {
			_originalGovAgencyCode = _govAgencyCode;
		}

		_govAgencyCode = govAgencyCode;
	}

	public String getOriginalGovAgencyCode() {
		return GetterUtil.getString(_originalGovAgencyCode);
	}

	@Override
	public long getParentWorkingUnitId() {
		return _parentWorkingUnitId;
	}

	@Override
	public void setParentWorkingUnitId(long parentWorkingUnitId) {
		_columnBitmask |= PARENTWORKINGUNITID_COLUMN_BITMASK;

		if (!_setOriginalParentWorkingUnitId) {
			_setOriginalParentWorkingUnitId = true;

			_originalParentWorkingUnitId = _parentWorkingUnitId;
		}

		_parentWorkingUnitId = parentWorkingUnitId;
	}

	public long getOriginalParentWorkingUnitId() {
		return _originalParentWorkingUnitId;
	}

	@Override
	public String getSibling() {
		if (_sibling == null) {
			return StringPool.BLANK;
		}
		else {
			return _sibling;
		}
	}

	@Override
	public void setSibling(String sibling) {
		_sibling = sibling;
	}

	@Override
	public String getTreeIndex() {
		if (_treeIndex == null) {
			return StringPool.BLANK;
		}
		else {
			return _treeIndex;
		}
	}

	@Override
	public void setTreeIndex(String treeIndex) {
		_columnBitmask = -1L;

		if (_originalTreeIndex == null) {
			_originalTreeIndex = _treeIndex;
		}

		_treeIndex = treeIndex;
	}

	public String getOriginalTreeIndex() {
		return GetterUtil.getString(_originalTreeIndex);
	}

	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@Override
	public String getTelNo() {
		if (_telNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _telNo;
		}
	}

	@Override
	public void setTelNo(String telNo) {
		_telNo = telNo;
	}

	@Override
	public String getFaxNo() {
		if (_faxNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _faxNo;
		}
	}

	@Override
	public void setFaxNo(String faxNo) {
		_faxNo = faxNo;
	}

	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@Override
	public String getWebsite() {
		if (_website == null) {
			return StringPool.BLANK;
		}
		else {
			return _website;
		}
	}

	@Override
	public void setWebsite(String website) {
		_website = website;
	}

	@Override
	public long getLogoFileEntryId() {
		return _logoFileEntryId;
	}

	@Override
	public void setLogoFileEntryId(long logoFileEntryId) {
		_logoFileEntryId = logoFileEntryId;
	}

	@Override
	public int getLevel() {
		return _level;
	}

	@Override
	public void setLevel(int level) {
		_columnBitmask |= LEVEL_COLUMN_BITMASK;

		if (!_setOriginalLevel) {
			_setOriginalLevel = true;

			_originalLevel = _level;
		}

		_level = level;
	}

	public int getOriginalLevel() {
		return _originalLevel;
	}

	@Override
	public Date getCeremonyDate() {
		return _ceremonyDate;
	}

	@Override
	public void setCeremonyDate(Date ceremonyDate) {
		_ceremonyDate = ceremonyDate;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				WorkingUnit.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WorkingUnit.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WorkingUnit toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WorkingUnit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WorkingUnitImpl workingUnitImpl = new WorkingUnitImpl();

		workingUnitImpl.setUuid(getUuid());
		workingUnitImpl.setWorkingUnitId(getWorkingUnitId());
		workingUnitImpl.setCompanyId(getCompanyId());
		workingUnitImpl.setGroupId(getGroupId());
		workingUnitImpl.setUserId(getUserId());
		workingUnitImpl.setUserName(getUserName());
		workingUnitImpl.setCreateDate(getCreateDate());
		workingUnitImpl.setModifiedDate(getModifiedDate());
		workingUnitImpl.setName(getName());
		workingUnitImpl.setEnName(getEnName());
		workingUnitImpl.setGovAgencyCode(getGovAgencyCode());
		workingUnitImpl.setParentWorkingUnitId(getParentWorkingUnitId());
		workingUnitImpl.setSibling(getSibling());
		workingUnitImpl.setTreeIndex(getTreeIndex());
		workingUnitImpl.setAddress(getAddress());
		workingUnitImpl.setTelNo(getTelNo());
		workingUnitImpl.setFaxNo(getFaxNo());
		workingUnitImpl.setEmail(getEmail());
		workingUnitImpl.setWebsite(getWebsite());
		workingUnitImpl.setLogoFileEntryId(getLogoFileEntryId());
		workingUnitImpl.setLevel(getLevel());
		workingUnitImpl.setCeremonyDate(getCeremonyDate());

		workingUnitImpl.resetOriginalValues();

		return workingUnitImpl;
	}

	@Override
	public int compareTo(WorkingUnit workingUnit) {
		int value = 0;

		value = getTreeIndex().compareTo(workingUnit.getTreeIndex());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WorkingUnit)) {
			return false;
		}

		WorkingUnit workingUnit = (WorkingUnit)obj;

		long primaryKey = workingUnit.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WorkingUnitModelImpl workingUnitModelImpl = this;

		workingUnitModelImpl._originalUuid = workingUnitModelImpl._uuid;

		workingUnitModelImpl._originalWorkingUnitId = workingUnitModelImpl._workingUnitId;

		workingUnitModelImpl._setOriginalWorkingUnitId = false;

		workingUnitModelImpl._originalCompanyId = workingUnitModelImpl._companyId;

		workingUnitModelImpl._setOriginalCompanyId = false;

		workingUnitModelImpl._originalGroupId = workingUnitModelImpl._groupId;

		workingUnitModelImpl._setOriginalGroupId = false;

		workingUnitModelImpl._setModifiedDate = false;

		workingUnitModelImpl._originalGovAgencyCode = workingUnitModelImpl._govAgencyCode;

		workingUnitModelImpl._originalParentWorkingUnitId = workingUnitModelImpl._parentWorkingUnitId;

		workingUnitModelImpl._setOriginalParentWorkingUnitId = false;

		workingUnitModelImpl._originalTreeIndex = workingUnitModelImpl._treeIndex;

		workingUnitModelImpl._originalLevel = workingUnitModelImpl._level;

		workingUnitModelImpl._setOriginalLevel = false;

		workingUnitModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WorkingUnit> toCacheModel() {
		WorkingUnitCacheModel workingUnitCacheModel = new WorkingUnitCacheModel();

		workingUnitCacheModel.uuid = getUuid();

		String uuid = workingUnitCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			workingUnitCacheModel.uuid = null;
		}

		workingUnitCacheModel.workingUnitId = getWorkingUnitId();

		workingUnitCacheModel.companyId = getCompanyId();

		workingUnitCacheModel.groupId = getGroupId();

		workingUnitCacheModel.userId = getUserId();

		workingUnitCacheModel.userName = getUserName();

		String userName = workingUnitCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			workingUnitCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			workingUnitCacheModel.createDate = createDate.getTime();
		}
		else {
			workingUnitCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			workingUnitCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			workingUnitCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		workingUnitCacheModel.name = getName();

		String name = workingUnitCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			workingUnitCacheModel.name = null;
		}

		workingUnitCacheModel.enName = getEnName();

		String enName = workingUnitCacheModel.enName;

		if ((enName != null) && (enName.length() == 0)) {
			workingUnitCacheModel.enName = null;
		}

		workingUnitCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = workingUnitCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			workingUnitCacheModel.govAgencyCode = null;
		}

		workingUnitCacheModel.parentWorkingUnitId = getParentWorkingUnitId();

		workingUnitCacheModel.sibling = getSibling();

		String sibling = workingUnitCacheModel.sibling;

		if ((sibling != null) && (sibling.length() == 0)) {
			workingUnitCacheModel.sibling = null;
		}

		workingUnitCacheModel.treeIndex = getTreeIndex();

		String treeIndex = workingUnitCacheModel.treeIndex;

		if ((treeIndex != null) && (treeIndex.length() == 0)) {
			workingUnitCacheModel.treeIndex = null;
		}

		workingUnitCacheModel.address = getAddress();

		String address = workingUnitCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			workingUnitCacheModel.address = null;
		}

		workingUnitCacheModel.telNo = getTelNo();

		String telNo = workingUnitCacheModel.telNo;

		if ((telNo != null) && (telNo.length() == 0)) {
			workingUnitCacheModel.telNo = null;
		}

		workingUnitCacheModel.faxNo = getFaxNo();

		String faxNo = workingUnitCacheModel.faxNo;

		if ((faxNo != null) && (faxNo.length() == 0)) {
			workingUnitCacheModel.faxNo = null;
		}

		workingUnitCacheModel.email = getEmail();

		String email = workingUnitCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			workingUnitCacheModel.email = null;
		}

		workingUnitCacheModel.website = getWebsite();

		String website = workingUnitCacheModel.website;

		if ((website != null) && (website.length() == 0)) {
			workingUnitCacheModel.website = null;
		}

		workingUnitCacheModel.logoFileEntryId = getLogoFileEntryId();

		workingUnitCacheModel.level = getLevel();

		Date ceremonyDate = getCeremonyDate();

		if (ceremonyDate != null) {
			workingUnitCacheModel.ceremonyDate = ceremonyDate.getTime();
		}
		else {
			workingUnitCacheModel.ceremonyDate = Long.MIN_VALUE;
		}

		return workingUnitCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", workingUnitId=");
		sb.append(getWorkingUnitId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", enName=");
		sb.append(getEnName());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", parentWorkingUnitId=");
		sb.append(getParentWorkingUnitId());
		sb.append(", sibling=");
		sb.append(getSibling());
		sb.append(", treeIndex=");
		sb.append(getTreeIndex());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", telNo=");
		sb.append(getTelNo());
		sb.append(", faxNo=");
		sb.append(getFaxNo());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", website=");
		sb.append(getWebsite());
		sb.append(", logoFileEntryId=");
		sb.append(getLogoFileEntryId());
		sb.append(", level=");
		sb.append(getLevel());
		sb.append(", ceremonyDate=");
		sb.append(getCeremonyDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("org.opencps.usermgt.model.WorkingUnit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workingUnitId</column-name><column-value><![CDATA[");
		sb.append(getWorkingUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enName</column-name><column-value><![CDATA[");
		sb.append(getEnName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentWorkingUnitId</column-name><column-value><![CDATA[");
		sb.append(getParentWorkingUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sibling</column-name><column-value><![CDATA[");
		sb.append(getSibling());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>treeIndex</column-name><column-value><![CDATA[");
		sb.append(getTreeIndex());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telNo</column-name><column-value><![CDATA[");
		sb.append(getTelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>faxNo</column-name><column-value><![CDATA[");
		sb.append(getFaxNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>website</column-name><column-value><![CDATA[");
		sb.append(getWebsite());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>logoFileEntryId</column-name><column-value><![CDATA[");
		sb.append(getLogoFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level</column-name><column-value><![CDATA[");
		sb.append(getLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ceremonyDate</column-name><column-value><![CDATA[");
		sb.append(getCeremonyDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WorkingUnit.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WorkingUnit.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _workingUnitId;
	private long _originalWorkingUnitId;
	private boolean _setOriginalWorkingUnitId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _name;
	private String _enName;
	private String _govAgencyCode;
	private String _originalGovAgencyCode;
	private long _parentWorkingUnitId;
	private long _originalParentWorkingUnitId;
	private boolean _setOriginalParentWorkingUnitId;
	private String _sibling;
	private String _treeIndex;
	private String _originalTreeIndex;
	private String _address;
	private String _telNo;
	private String _faxNo;
	private String _email;
	private String _website;
	private long _logoFileEntryId;
	private int _level;
	private int _originalLevel;
	private boolean _setOriginalLevel;
	private Date _ceremonyDate;
	private long _columnBitmask;
	private WorkingUnit _escapedModel;
}